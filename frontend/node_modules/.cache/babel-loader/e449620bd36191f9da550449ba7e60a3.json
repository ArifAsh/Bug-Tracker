{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { retrieveBugs } from '../bugController';\nconst slice = createSlice({\n  name: \"bug\",\n  initialState: {\n    search: false,\n    bugs: []\n  },\n  reducers: {\n    getBugs: state => {\n      return state.bugs == retrieveBugs();\n    },\n    searchedBugs: state => {\n      return !state.search;\n    },\n    createBugs: (state, actions) => {},\n    updateBug: (state, actions) => {},\n    markComplete: (state, action) => {}\n  }\n});\nexport default slice.reducer;\nexport const {\n  getBugs,\n  searchedBugs,\n  createBugs,\n  updateBug,\n  markComplete\n} = slice.actions;","map":{"version":3,"sources":["/Users/Arif/Desktop/Bug tracker/frontend/src/Controllers/Redux/bugSlice.js"],"names":["createSlice","retrieveBugs","slice","name","initialState","search","bugs","reducers","getBugs","state","searchedBugs","createBugs","actions","updateBug","markComplete","action","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACtBG,EAAAA,IAAI,EAAC,KADiB;AAEtBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAG,KADC;AAEVC,IAAAA,IAAI,EAAE;AAFI,GAFQ;AAMtBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAEC,KAAD,IAAW;AAEf,aAAOA,KAAK,CAACH,IAAN,IAAcL,YAAY,EAAjC;AAAoC,KAHnC;AAKLS,IAAAA,YAAY,EAAED,KAAD,IAAU;AACnB,aAAO,CAACA,KAAK,CAACJ,MAAd;AACH,KAPI;AASLM,IAAAA,UAAU,EAAC,CAACF,KAAD,EAAOG,OAAP,KAAiB,CAE3B,CAXI;AAYLC,IAAAA,SAAS,EAAC,CAACJ,KAAD,EAAOG,OAAP,KAAkB,CAE3B,CAdI;AAeLE,IAAAA,YAAY,EAAC,CAACL,KAAD,EAAOM,MAAP,KAAgB,CAE5B;AAjBI;AANa,CAAD,CAAzB;AA0BA,eAAeb,KAAK,CAACc,OAArB;AACA,OAAO,MAAM;AAACR,EAAAA,OAAD;AAASE,EAAAA,YAAT;AAAsBC,EAAAA,UAAtB;AAAiCE,EAAAA,SAAjC;AAA2CC,EAAAA;AAA3C,IAA2DZ,KAAK,CAACU,OAAvE","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\nimport {retrieveBugs} from '../bugController'\n\nconst slice = createSlice({\n    name:\"bug\",\n    initialState: {\n        search : false,\n        bugs: []\n    },\n    reducers:{\n        getBugs:(state) => {\n\n            return state.bugs == retrieveBugs()},\n\n        searchedBugs:(state) =>{\n            return !state.search\n        },\n\n        createBugs:(state,actions)=>{\n\n        },\n        updateBug:(state,actions) =>{\n\n        },\n        markComplete:(state,action)=>{\n\n        }\n    }\n})\nexport default slice.reducer;\nexport const {getBugs,searchedBugs,createBugs,updateBug,markComplete} = slice.actions"]},"metadata":{},"sourceType":"module"}