{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { retrieveBugs } from '../bugController';\nconst slice = createSlice({\n  name: \"bugs\",\n  initialState: {\n    filteredBugs: [],\n    bug: retrieveBugs()\n  },\n  reducers: {\n    getBugs: state => {\n      return state.bugs;\n    },\n    filter: (state, action) => {\n      return { ...state\n      };\n    },\n    createBugs: (state, actions) => {},\n    updateBug: (state, actions) => {},\n    markComplete: (state, action) => {}\n  }\n});\nexport default slice.reducer;\nexport const {\n  getBugs,\n  searchedBugs,\n  createBugs,\n  updateBug,\n  markComplete\n} = slice.actions;","map":{"version":3,"sources":["/Users/Arif/Desktop/Bug tracker/frontend/src/Controllers/Redux/bugSlice.js"],"names":["createSlice","retrieveBugs","slice","name","initialState","filteredBugs","bug","reducers","getBugs","state","bugs","filter","action","createBugs","actions","updateBug","markComplete","reducer","searchedBugs"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACtBG,EAAAA,IAAI,EAAC,MADiB;AAEtBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,YAAY,EAAG,EADL;AAEVC,IAAAA,GAAG,EAAEL,YAAY;AAFP,GAFQ;AAMtBM,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAEC,KAAD,IAAW;AACf,aAAOA,KAAK,CAACC,IAAb;AACH,KAHI;AAKLC,IAAAA,MAAM,EAAC,CAACF,KAAD,EAAOG,MAAP,KAAiB;AACpB,aAAO,EAAC,GAAGH;AAAJ,OAAP;AACH,KAPI;AASLI,IAAAA,UAAU,EAAC,CAACJ,KAAD,EAAOK,OAAP,KAAiB,CAE3B,CAXI;AAYLC,IAAAA,SAAS,EAAC,CAACN,KAAD,EAAOK,OAAP,KAAkB,CAE3B,CAdI;AAeLE,IAAAA,YAAY,EAAC,CAACP,KAAD,EAAOG,MAAP,KAAgB,CAE5B;AAjBI;AANa,CAAD,CAAzB;AA0BA,eAAeV,KAAK,CAACe,OAArB;AACA,OAAO,MAAM;AAACT,EAAAA,OAAD;AAASU,EAAAA,YAAT;AAAsBL,EAAAA,UAAtB;AAAiCE,EAAAA,SAAjC;AAA2CC,EAAAA;AAA3C,IAA2Dd,KAAK,CAACY,OAAvE","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\nimport {retrieveBugs} from '../bugController'\n\nconst slice = createSlice({\n    name:\"bugs\",\n    initialState: {\n        filteredBugs : [],\n        bug: retrieveBugs(),\n    },\n    reducers:{\n        getBugs:(state) => {\n            return state.bugs\n        },\n\n        filter:(state,action) =>{\n            return {...state, }\n        },\n\n        createBugs:(state,actions)=>{\n\n        },\n        updateBug:(state,actions) =>{\n\n        },\n        markComplete:(state,action)=>{\n\n        }\n    }\n})\nexport default slice.reducer;\nexport const {getBugs,searchedBugs,createBugs,updateBug,markComplete} = slice.actions"]},"metadata":{},"sourceType":"module"}