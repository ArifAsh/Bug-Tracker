{"ast":null,"code":"/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 1.1.1\n *\n * Copyright 2015 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\n(function () {\n  \"use strict\"; //Declare root variable - window in the browser, global on the server\n\n  var root = this,\n      previous = root.Chart; //Occupy the global variable of Chart, and create a simple base class\n\n  var Chart = function (context) {\n    var chart = this;\n    this.canvas = context.canvas;\n    this.ctx = context; //Variables global to the chart\n\n    var computeDimension = function (element, dimension) {\n      if (element['offset' + dimension]) {\n        return element['offset' + dimension];\n      } else {\n        return document.defaultView.getComputedStyle(element).getPropertyValue(dimension);\n      }\n    };\n\n    var width = this.width = computeDimension(context.canvas, 'Width') || context.canvas.width;\n    var height = this.height = computeDimension(context.canvas, 'Height') || context.canvas.height;\n    this.aspectRatio = this.width / this.height; //High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n\n    helpers.retinaScale(this);\n    return this;\n  }; //Globally expose the defaults to allow for user updating/changing\n\n\n  Chart.defaults = {\n    global: {\n      // Boolean - Whether to animate the chart\n      animation: true,\n      // Number - Number of animation steps\n      animationSteps: 60,\n      // String - Animation easing effect\n      animationEasing: \"easeOutQuart\",\n      // Boolean - If we should show the scale at all\n      showScale: true,\n      // Boolean - If we want to override with a hard coded scale\n      scaleOverride: false,\n      // ** Required if scaleOverride is true **\n      // Number - The number of steps in a hard coded scale\n      scaleSteps: null,\n      // Number - The value jump in the hard coded scale\n      scaleStepWidth: null,\n      // Number - The scale starting value\n      scaleStartValue: null,\n      // String - Colour of the scale line\n      scaleLineColor: \"rgba(0,0,0,.1)\",\n      // Number - Pixel width of the scale line\n      scaleLineWidth: 1,\n      // Boolean - Whether to show labels on the scale\n      scaleShowLabels: true,\n      // Interpolated JS string - can access value\n      scaleLabel: \"<%=value%>\",\n      // Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n      scaleIntegersOnly: true,\n      // Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n      scaleBeginAtZero: false,\n      // String - Scale label font declaration for the scale label\n      scaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      // Number - Scale label font size in pixels\n      scaleFontSize: 12,\n      // String - Scale label font weight style\n      scaleFontStyle: \"normal\",\n      // String - Scale label font colour\n      scaleFontColor: \"#666\",\n      // Boolean - whether or not the chart should be responsive and resize when the browser does.\n      responsive: false,\n      // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n      maintainAspectRatio: true,\n      // Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n      showTooltips: true,\n      // Boolean - Determines whether to draw built-in tooltip or call custom tooltip function\n      customTooltips: false,\n      // Array - Array of string names to attach tooltip events\n      tooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n      // String - Tooltip background colour\n      tooltipFillColor: \"rgba(0,0,0,0.8)\",\n      // String - Tooltip label font declaration for the scale label\n      tooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      // Number - Tooltip label font size in pixels\n      tooltipFontSize: 14,\n      // String - Tooltip font weight style\n      tooltipFontStyle: \"normal\",\n      // String - Tooltip label font colour\n      tooltipFontColor: \"#fff\",\n      // String - Tooltip title font declaration for the scale label\n      tooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      // Number - Tooltip title font size in pixels\n      tooltipTitleFontSize: 14,\n      // String - Tooltip title font weight style\n      tooltipTitleFontStyle: \"bold\",\n      // String - Tooltip title font colour\n      tooltipTitleFontColor: \"#fff\",\n      // String - Tooltip title template\n      tooltipTitleTemplate: \"<%= label%>\",\n      // Number - pixel width of padding around tooltip text\n      tooltipYPadding: 6,\n      // Number - pixel width of padding around tooltip text\n      tooltipXPadding: 6,\n      // Number - Size of the caret on the tooltip\n      tooltipCaretSize: 8,\n      // Number - Pixel radius of the tooltip border\n      tooltipCornerRadius: 6,\n      // Number - Pixel offset from point x to tooltip edge\n      tooltipXOffset: 10,\n      // String - Template string for single tooltips\n      tooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n      // String - Template string for single tooltips\n      multiTooltipTemplate: \"<%= datasetLabel %>: <%= value %>\",\n      // String - Colour behind the legend colour block\n      multiTooltipKeyBackground: '#fff',\n      // Array - A list of colors to use as the defaults\n      segmentColorDefault: [\"#A6CEE3\", \"#1F78B4\", \"#B2DF8A\", \"#33A02C\", \"#FB9A99\", \"#E31A1C\", \"#FDBF6F\", \"#FF7F00\", \"#CAB2D6\", \"#6A3D9A\", \"#B4B482\", \"#B15928\"],\n      // Array - A list of highlight colors to use as the defaults\n      segmentHighlightColorDefaults: [\"#CEF6FF\", \"#47A0DC\", \"#DAFFB2\", \"#5BC854\", \"#FFC2C1\", \"#FF4244\", \"#FFE797\", \"#FFA728\", \"#F2DAFE\", \"#9265C2\", \"#DCDCAA\", \"#D98150\"],\n      // Function - Will fire on animation progression.\n      onAnimationProgress: function () {},\n      // Function - Will fire on animation completion.\n      onAnimationComplete: function () {}\n    }\n  }; //Create a dictionary of chart types, to allow for extension of existing types\n\n  Chart.types = {}; //Global Chart helpers object for utility methods and classes\n\n  var helpers = Chart.helpers = {}; //-- Basic js utility methods\n\n  var each = helpers.each = function (loopable, callback, self) {\n    var additionalArgs = Array.prototype.slice.call(arguments, 3); // Check to see if null or undefined firstly.\n\n    if (loopable) {\n      if (loopable.length === +loopable.length) {\n        var i;\n\n        for (i = 0; i < loopable.length; i++) {\n          callback.apply(self, [loopable[i], i].concat(additionalArgs));\n        }\n      } else {\n        for (var item in loopable) {\n          callback.apply(self, [loopable[item], item].concat(additionalArgs));\n        }\n      }\n    }\n  },\n      clone = helpers.clone = function (obj) {\n    var objClone = {};\n    each(obj, function (value, key) {\n      if (obj.hasOwnProperty(key)) {\n        objClone[key] = value;\n      }\n    });\n    return objClone;\n  },\n      extend = helpers.extend = function (base) {\n    each(Array.prototype.slice.call(arguments, 1), function (extensionObject) {\n      each(extensionObject, function (value, key) {\n        if (extensionObject.hasOwnProperty(key)) {\n          base[key] = value;\n        }\n      });\n    });\n    return base;\n  },\n      merge = helpers.merge = function (base, master) {\n    //Merge properties in left object over to a shallow clone of object right.\n    var args = Array.prototype.slice.call(arguments, 0);\n    args.unshift({});\n    return extend.apply(null, args);\n  },\n      indexOf = helpers.indexOf = function (arrayToSearch, item) {\n    if (Array.prototype.indexOf) {\n      return arrayToSearch.indexOf(item);\n    } else {\n      for (var i = 0; i < arrayToSearch.length; i++) {\n        if (arrayToSearch[i] === item) return i;\n      }\n\n      return -1;\n    }\n  },\n      where = helpers.where = function (collection, filterCallback) {\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  },\n      findNextWhere = helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (!startIndex) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  },\n      findPreviousWhere = helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (!startIndex) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  },\n      inherits = helpers.inherits = function (extensions) {\n    //Basic javascript inheritance based on the model created in Backbone.js\n    var parent = this;\n    var ChartElement = extensions && extensions.hasOwnProperty(\"constructor\") ? extensions.constructor : function () {\n      return parent.apply(this, arguments);\n    };\n\n    var Surrogate = function () {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = parent.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = inherits;\n    if (extensions) extend(ChartElement.prototype, extensions);\n    ChartElement.__super__ = parent.prototype;\n    return ChartElement;\n  },\n      noop = helpers.noop = function () {},\n      uid = helpers.uid = function () {\n    var id = 0;\n    return function () {\n      return \"chart-\" + id++;\n    };\n  }(),\n      warn = helpers.warn = function (str) {\n    //Method for warning of errors\n    if (window.console && typeof window.console.warn === \"function\") console.warn(str);\n  },\n      amd = helpers.amd = typeof define === 'function' && define.amd,\n      //-- Math methods\n  isNumber = helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  },\n      max = helpers.max = function (array) {\n    return Math.max.apply(Math, array);\n  },\n      min = helpers.min = function (array) {\n    return Math.min.apply(Math, array);\n  },\n      cap = helpers.cap = function (valueToCap, maxValue, minValue) {\n    if (isNumber(maxValue)) {\n      if (valueToCap > maxValue) {\n        return maxValue;\n      }\n    } else if (isNumber(minValue)) {\n      if (valueToCap < minValue) {\n        return minValue;\n      }\n    }\n\n    return valueToCap;\n  },\n      getDecimalPlaces = helpers.getDecimalPlaces = function (num) {\n    if (num % 1 !== 0 && isNumber(num)) {\n      var s = num.toString();\n\n      if (s.indexOf(\"e-\") < 0) {\n        // no exponent, e.g. 0.01\n        return s.split(\".\")[1].length;\n      } else if (s.indexOf(\".\") < 0) {\n        // no decimal point, e.g. 1e-9\n        return parseInt(s.split(\"e-\")[1]);\n      } else {\n        // exponent and decimal point, e.g. 1.23e-9\n        var parts = s.split(\".\")[1].split(\"e-\");\n        return parts[0].length + parseInt(parts[1]);\n      }\n    } else {\n      return 0;\n    }\n  },\n      toRadians = helpers.radians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  },\n      // Gets the angle from vertical upright to the point about a centre.\n  getAngleFromPoint = helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x,\n        distanceFromYCenter = anglePoint.y - centrePoint.y,\n        radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter); //If the segment is in the top left quadrant, we need to add another rotation to the angle\n\n    if (distanceFromXCenter < 0 && distanceFromYCenter < 0) {\n      angle += Math.PI * 2;\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  },\n      aliasPixel = helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  },\n      splineCurve = helpers.splineCurve = function (FirstPoint, MiddlePoint, AfterPoint, t) {\n    //Props to Rob Spencer at scaled innovation for his post on splining between points\n    //http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    var d01 = Math.sqrt(Math.pow(MiddlePoint.x - FirstPoint.x, 2) + Math.pow(MiddlePoint.y - FirstPoint.y, 2)),\n        d12 = Math.sqrt(Math.pow(AfterPoint.x - MiddlePoint.x, 2) + Math.pow(AfterPoint.y - MiddlePoint.y, 2)),\n        fa = t * d01 / (d01 + d12),\n        // scaling factor for triangle Ta\n    fb = t * d12 / (d01 + d12);\n    return {\n      inner: {\n        x: MiddlePoint.x - fa * (AfterPoint.x - FirstPoint.x),\n        y: MiddlePoint.y - fa * (AfterPoint.y - FirstPoint.y)\n      },\n      outer: {\n        x: MiddlePoint.x + fb * (AfterPoint.x - FirstPoint.x),\n        y: MiddlePoint.y + fb * (AfterPoint.y - FirstPoint.y)\n      }\n    };\n  },\n      calculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function (val) {\n    return Math.floor(Math.log(val) / Math.LN10);\n  },\n      calculateScaleRange = helpers.calculateScaleRange = function (valuesArray, drawingSize, textSize, startFromZero, integersOnly) {\n    //Set a minimum step of two - a point at the top of the graph, and a point at the base\n    var minSteps = 2,\n        maxSteps = Math.floor(drawingSize / (textSize * 1.5)),\n        skipFitting = minSteps >= maxSteps; // Filter out null values since these would min() to zero\n\n    var values = [];\n    each(valuesArray, function (v) {\n      v == null || values.push(v);\n    });\n    var minValue = min(values),\n        maxValue = max(values); // We need some degree of separation here to calculate the scales if all the values are the same\n    // Adding/minusing 0.5 will give us a range of 1.\n\n    if (maxValue === minValue) {\n      maxValue += 0.5; // So we don't end up with a graph with a negative start value if we've said always start from zero\n\n      if (minValue >= 0.5 && !startFromZero) {\n        minValue -= 0.5;\n      } else {\n        // Make up a whole number above the values\n        maxValue += 0.5;\n      }\n    }\n\n    var valueRange = Math.abs(maxValue - minValue),\n        rangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n        graphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n        graphMin = startFromZero ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n        graphRange = graphMax - graphMin,\n        stepValue = Math.pow(10, rangeOrderOfMagnitude),\n        numberOfSteps = Math.round(graphRange / stepValue); //If we have more space on the graph we'll use it to give more definition to the data\n\n    while ((numberOfSteps > maxSteps || numberOfSteps * 2 < maxSteps) && !skipFitting) {\n      if (numberOfSteps > maxSteps) {\n        stepValue *= 2;\n        numberOfSteps = Math.round(graphRange / stepValue); // Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n\n        if (numberOfSteps % 1 !== 0) {\n          skipFitting = true;\n        }\n      } //We can fit in double the amount of scale points on the scale\n      else {\n          //If user has declared ints only, and the step value isn't a decimal\n          if (integersOnly && rangeOrderOfMagnitude >= 0) {\n            //If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n            if (stepValue / 2 % 1 === 0) {\n              stepValue /= 2;\n              numberOfSteps = Math.round(graphRange / stepValue);\n            } //If it would make it a float break out of the loop\n            else {\n                break;\n              }\n          } //If the scale doesn't have to be an int, make the scale more granular anyway.\n          else {\n              stepValue /= 2;\n              numberOfSteps = Math.round(graphRange / stepValue);\n            }\n        }\n    }\n\n    if (skipFitting) {\n      numberOfSteps = minSteps;\n      stepValue = graphRange / numberOfSteps;\n    }\n\n    return {\n      steps: numberOfSteps,\n      stepValue: stepValue,\n      min: graphMin,\n      max: graphMin + numberOfSteps * stepValue\n    };\n  },\n\n  /* jshint ignore:start */\n  // Blows up jshint errors based on the new Function constructor\n  //Templating methods\n  //Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n  template = helpers.template = function (templateString, valuesObject) {\n    // If templateString is function rather than string-template - call the function for valuesObject\n    if (templateString instanceof Function) {\n      return templateString(valuesObject);\n    }\n\n    var cache = {};\n\n    function tmpl(str, data) {\n      // Figure out if we're getting a template, or if we need to\n      // load the template - and be sure to cache the result.\n      var fn = !/\\W/.test(str) ? cache[str] = cache[str] : // Generate a reusable function that will serve as a template\n      // generator (and which will be cached).\n      new Function(\"obj\", \"var p=[],print=function(){p.push.apply(p,arguments);};\" + // Introduce the data as local variables using with(){}\n      \"with(obj){p.push('\" + // Convert the template into pure JavaScript\n      str.replace(/[\\r\\t\\n]/g, \" \").split(\"<%\").join(\"\\t\").replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\").replace(/\\t=(.*?)%>/g, \"',$1,'\").split(\"\\t\").join(\"');\").split(\"%>\").join(\"p.push('\").split(\"\\r\").join(\"\\\\'\") + \"');}return p.join('');\"); // Provide some basic currying to the user\n\n      return data ? fn(data) : fn;\n    }\n\n    return tmpl(templateString, valuesObject);\n  },\n\n  /* jshint ignore:end */\n  generateLabels = helpers.generateLabels = function (templateString, numberOfSteps, graphMin, stepValue) {\n    var labelsArray = new Array(numberOfSteps);\n\n    if (templateString) {\n      each(labelsArray, function (val, index) {\n        labelsArray[index] = template(templateString, {\n          value: graphMin + stepValue * (index + 1)\n        });\n      });\n    }\n\n    return labelsArray;\n  },\n      //--Animation methods\n  //Easing functions adapted from Robert Penner's easing equations\n  //http://www.robertpenner.com/easing/\n  easingEffects = helpers.easingEffects = {\n    linear: function (t) {\n      return t;\n    },\n    easeInQuad: function (t) {\n      return t * t;\n    },\n    easeOutQuad: function (t) {\n      return -1 * t * (t - 2);\n    },\n    easeInOutQuad: function (t) {\n      if ((t /= 1 / 2) < 1) {\n        return 1 / 2 * t * t;\n      }\n\n      return -1 / 2 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function (t) {\n      return t * t * t;\n    },\n    easeOutCubic: function (t) {\n      return 1 * ((t = t / 1 - 1) * t * t + 1);\n    },\n    easeInOutCubic: function (t) {\n      if ((t /= 1 / 2) < 1) {\n        return 1 / 2 * t * t * t;\n      }\n\n      return 1 / 2 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function (t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function (t) {\n      return -1 * ((t = t / 1 - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function (t) {\n      if ((t /= 1 / 2) < 1) {\n        return 1 / 2 * t * t * t * t;\n      }\n\n      return -1 / 2 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function (t) {\n      return 1 * (t /= 1) * t * t * t * t;\n    },\n    easeOutQuint: function (t) {\n      return 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n    },\n    easeInOutQuint: function (t) {\n      if ((t /= 1 / 2) < 1) {\n        return 1 / 2 * t * t * t * t * t;\n      }\n\n      return 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function (t) {\n      return -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function (t) {\n      return 1 * Math.sin(t / 1 * (Math.PI / 2));\n    },\n    easeInOutSine: function (t) {\n      return -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n    },\n    easeInExpo: function (t) {\n      return t === 0 ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n    },\n    easeOutExpo: function (t) {\n      return t === 1 ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n    },\n    easeInOutExpo: function (t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 1 / 2) < 1) {\n        return 1 / 2 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function (t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n    },\n    easeOutCirc: function (t) {\n      return 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n    },\n    easeInOutCirc: function (t) {\n      if ((t /= 1 / 2) < 1) {\n        return -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function (t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 1) == 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 1 * 0.3;\n      }\n\n      if (a < Math.abs(1)) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function (t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 1) == 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 1 * 0.3;\n      }\n\n      if (a < Math.abs(1)) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function (t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 1 / 2) == 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 1 * (0.3 * 1.5);\n      }\n\n      if (a < Math.abs(1)) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function (t) {\n      var s = 1.70158;\n      return 1 * (t /= 1) * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function (t) {\n      var s = 1.70158;\n      return 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n    },\n    easeInOutBack: function (t) {\n      var s = 1.70158;\n\n      if ((t /= 1 / 2) < 1) {\n        return 1 / 2 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 1 / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function (t) {\n      return 1 - easingEffects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function (t) {\n      if ((t /= 1) < 1 / 2.75) {\n        return 1 * (7.5625 * t * t);\n      } else if (t < 2 / 2.75) {\n        return 1 * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75);\n      } else if (t < 2.5 / 2.75) {\n        return 1 * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375);\n      } else {\n        return 1 * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375);\n      }\n    },\n    easeInOutBounce: function (t) {\n      if (t < 1 / 2) {\n        return easingEffects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n    }\n  },\n      //Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n  requestAnimFrame = helpers.requestAnimFrame = function () {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(),\n      cancelAnimFrame = helpers.cancelAnimFrame = function () {\n    return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame || function (callback) {\n      return window.clearTimeout(callback, 1000 / 60);\n    };\n  }(),\n      animationLoop = helpers.animationLoop = function (callback, totalSteps, easingString, onProgress, onComplete, chartInstance) {\n    var currentStep = 0,\n        easingFunction = easingEffects[easingString] || easingEffects.linear;\n\n    var animationFrame = function () {\n      currentStep++;\n      var stepDecimal = currentStep / totalSteps;\n      var easeDecimal = easingFunction(stepDecimal);\n      callback.call(chartInstance, easeDecimal, stepDecimal, currentStep);\n      onProgress.call(chartInstance, easeDecimal, stepDecimal);\n\n      if (currentStep < totalSteps) {\n        chartInstance.animationFrame = requestAnimFrame(animationFrame);\n      } else {\n        onComplete.apply(chartInstance);\n      }\n    };\n\n    requestAnimFrame(animationFrame);\n  },\n      //-- DOM methods\n  getRelativePosition = helpers.getRelativePosition = function (evt) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt,\n        canvas = evt.currentTarget || evt.srcElement,\n        boundingRect = canvas.getBoundingClientRect();\n\n    if (e.touches) {\n      mouseX = e.touches[0].clientX - boundingRect.left;\n      mouseY = e.touches[0].clientY - boundingRect.top;\n    } else {\n      mouseX = e.clientX - boundingRect.left;\n      mouseY = e.clientY - boundingRect.top;\n    }\n\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  },\n      addEvent = helpers.addEvent = function (node, eventType, method) {\n    if (node.addEventListener) {\n      node.addEventListener(eventType, method);\n    } else if (node.attachEvent) {\n      node.attachEvent(\"on\" + eventType, method);\n    } else {\n      node[\"on\" + eventType] = method;\n    }\n  },\n      removeEvent = helpers.removeEvent = function (node, eventType, handler) {\n    if (node.removeEventListener) {\n      node.removeEventListener(eventType, handler, false);\n    } else if (node.detachEvent) {\n      node.detachEvent(\"on\" + eventType, handler);\n    } else {\n      node[\"on\" + eventType] = noop;\n    }\n  },\n      bindEvents = helpers.bindEvents = function (chartInstance, arrayOfEvents, handler) {\n    // Create the events object if it's not already present\n    if (!chartInstance.events) chartInstance.events = {};\n    each(arrayOfEvents, function (eventName) {\n      chartInstance.events[eventName] = function () {\n        handler.apply(chartInstance, arguments);\n      };\n\n      addEvent(chartInstance.chart.canvas, eventName, chartInstance.events[eventName]);\n    });\n  },\n      unbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n    each(arrayOfEvents, function (handler, eventName) {\n      removeEvent(chartInstance.chart.canvas, eventName, handler);\n    });\n  },\n      getMaximumWidth = helpers.getMaximumWidth = function (domNode) {\n    var container = domNode.parentNode,\n        padding = parseInt(getStyle(container, 'padding-left')) + parseInt(getStyle(container, 'padding-right')); // TODO = check cross browser stuff with this.\n\n    return container ? container.clientWidth - padding : 0;\n  },\n      getMaximumHeight = helpers.getMaximumHeight = function (domNode) {\n    var container = domNode.parentNode,\n        padding = parseInt(getStyle(container, 'padding-bottom')) + parseInt(getStyle(container, 'padding-top')); // TODO = check cross browser stuff with this.\n\n    return container ? container.clientHeight - padding : 0;\n  },\n      getStyle = helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  },\n      getMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth,\n      // legacy support\n  retinaScale = helpers.retinaScale = function (chart) {\n    var ctx = chart.ctx,\n        width = chart.canvas.width,\n        height = chart.canvas.height;\n\n    if (window.devicePixelRatio) {\n      ctx.canvas.style.width = width + \"px\";\n      ctx.canvas.style.height = height + \"px\";\n      ctx.canvas.height = height * window.devicePixelRatio;\n      ctx.canvas.width = width * window.devicePixelRatio;\n      ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    }\n  },\n      //-- Canvas methods\n  clear = helpers.clear = function (chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n      fontString = helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + \" \" + pixelSize + \"px \" + fontFamily;\n  },\n      longestText = helpers.longestText = function (ctx, font, arrayOfStrings) {\n    ctx.font = font;\n    var longest = 0;\n    each(arrayOfStrings, function (string) {\n      var textWidth = ctx.measureText(string).width;\n      longest = textWidth > longest ? textWidth : longest;\n    });\n    return longest;\n  },\n      drawRoundedRectangle = helpers.drawRoundedRectangle = function (ctx, x, y, width, height, radius) {\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n  }; //Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  //Destroy method on the chart will remove the instance of the chart from this reference.\n\n\n  Chart.instances = {};\n\n  Chart.Type = function (data, options, chart) {\n    this.options = options;\n    this.chart = chart;\n    this.id = uid(); //Add the chart instance to the global namespace\n\n    Chart.instances[this.id] = this; // Initialize is always called when a chart type is created\n    // By default it is a no op, but it should be extended\n\n    if (options.responsive) {\n      this.resize();\n    }\n\n    this.initialize.call(this, data);\n  }; //Core methods that'll be a part of every chart type\n\n\n  extend(Chart.Type.prototype, {\n    initialize: function () {\n      return this;\n    },\n    clear: function () {\n      clear(this.chart);\n      return this;\n    },\n    stop: function () {\n      // Stops any current animation loop occuring\n      Chart.animationService.cancelAnimation(this);\n      return this;\n    },\n    resize: function (callback) {\n      this.stop();\n      var canvas = this.chart.canvas,\n          newWidth = getMaximumWidth(this.chart.canvas),\n          newHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n      canvas.width = this.chart.width = newWidth;\n      canvas.height = this.chart.height = newHeight;\n      retinaScale(this.chart);\n\n      if (typeof callback === \"function\") {\n        callback.apply(this, Array.prototype.slice.call(arguments, 1));\n      }\n\n      return this;\n    },\n    reflow: noop,\n    render: function (reflow) {\n      if (reflow) {\n        this.reflow();\n      }\n\n      if (this.options.animation && !reflow) {\n        var animation = new Chart.Animation();\n        animation.numSteps = this.options.animationSteps;\n        animation.easing = this.options.animationEasing; // render function\n\n        animation.render = function (chartInstance, animationObject) {\n          var easingFunction = helpers.easingEffects[animationObject.easing];\n          var stepDecimal = animationObject.currentStep / animationObject.numSteps;\n          var easeDecimal = easingFunction(stepDecimal);\n          chartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n        }; // user events\n\n\n        animation.onAnimationProgress = this.options.onAnimationProgress;\n        animation.onAnimationComplete = this.options.onAnimationComplete;\n        Chart.animationService.addAnimation(this, animation);\n      } else {\n        this.draw();\n        this.options.onAnimationComplete.call(this);\n      }\n\n      return this;\n    },\n    generateLegend: function () {\n      return helpers.template(this.options.legendTemplate, this);\n    },\n    destroy: function () {\n      this.stop();\n      this.clear();\n      unbindEvents(this, this.events);\n      var canvas = this.chart.canvas; // Reset canvas height/width attributes starts a fresh with the canvas context\n\n      canvas.width = this.chart.width;\n      canvas.height = this.chart.height; // < IE9 doesn't support removeProperty\n\n      if (canvas.style.removeProperty) {\n        canvas.style.removeProperty('width');\n        canvas.style.removeProperty('height');\n      } else {\n        canvas.style.removeAttribute('width');\n        canvas.style.removeAttribute('height');\n      }\n\n      delete Chart.instances[this.id];\n    },\n    showTooltip: function (ChartElements, forceRedraw) {\n      // Only redraw the chart if we've actually changed what we're hovering on.\n      if (typeof this.activeElements === 'undefined') this.activeElements = [];\n\n      var isChanged = function (Elements) {\n        var changed = false;\n\n        if (Elements.length !== this.activeElements.length) {\n          changed = true;\n          return changed;\n        }\n\n        each(Elements, function (element, index) {\n          if (element !== this.activeElements[index]) {\n            changed = true;\n          }\n        }, this);\n        return changed;\n      }.call(this, ChartElements);\n\n      if (!isChanged && !forceRedraw) {\n        return;\n      } else {\n        this.activeElements = ChartElements;\n      }\n\n      this.draw();\n\n      if (this.options.customTooltips) {\n        this.options.customTooltips(false);\n      }\n\n      if (ChartElements.length > 0) {\n        // If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n        if (this.datasets && this.datasets.length > 1) {\n          var dataArray, dataIndex;\n\n          for (var i = this.datasets.length - 1; i >= 0; i--) {\n            dataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n            dataIndex = indexOf(dataArray, ChartElements[0]);\n\n            if (dataIndex !== -1) {\n              break;\n            }\n          }\n\n          var tooltipLabels = [],\n              tooltipColors = [],\n              medianPosition = function (index) {\n            // Get all the points at that particular index\n            var Elements = [],\n                dataCollection,\n                xPositions = [],\n                yPositions = [],\n                xMax,\n                yMax,\n                xMin,\n                yMin;\n            helpers.each(this.datasets, function (dataset) {\n              dataCollection = dataset.points || dataset.bars || dataset.segments;\n\n              if (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()) {\n                Elements.push(dataCollection[dataIndex]);\n              }\n            });\n            helpers.each(Elements, function (element) {\n              xPositions.push(element.x);\n              yPositions.push(element.y); //Include any colour information about the element\n\n              tooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n              tooltipColors.push({\n                fill: element._saved.fillColor || element.fillColor,\n                stroke: element._saved.strokeColor || element.strokeColor\n              });\n            }, this);\n            yMin = min(yPositions);\n            yMax = max(yPositions);\n            xMin = min(xPositions);\n            xMax = max(xPositions);\n            return {\n              x: xMin > this.chart.width / 2 ? xMin : xMax,\n              y: (yMin + yMax) / 2\n            };\n          }.call(this, dataIndex);\n\n          new Chart.MultiTooltip({\n            x: medianPosition.x,\n            y: medianPosition.y,\n            xPadding: this.options.tooltipXPadding,\n            yPadding: this.options.tooltipYPadding,\n            xOffset: this.options.tooltipXOffset,\n            fillColor: this.options.tooltipFillColor,\n            textColor: this.options.tooltipFontColor,\n            fontFamily: this.options.tooltipFontFamily,\n            fontStyle: this.options.tooltipFontStyle,\n            fontSize: this.options.tooltipFontSize,\n            titleTextColor: this.options.tooltipTitleFontColor,\n            titleFontFamily: this.options.tooltipTitleFontFamily,\n            titleFontStyle: this.options.tooltipTitleFontStyle,\n            titleFontSize: this.options.tooltipTitleFontSize,\n            cornerRadius: this.options.tooltipCornerRadius,\n            labels: tooltipLabels,\n            legendColors: tooltipColors,\n            legendColorBackground: this.options.multiTooltipKeyBackground,\n            title: template(this.options.tooltipTitleTemplate, ChartElements[0]),\n            chart: this.chart,\n            ctx: this.chart.ctx,\n            custom: this.options.customTooltips\n          }).draw();\n        } else {\n          each(ChartElements, function (Element) {\n            var tooltipPosition = Element.tooltipPosition();\n            new Chart.Tooltip({\n              x: Math.round(tooltipPosition.x),\n              y: Math.round(tooltipPosition.y),\n              xPadding: this.options.tooltipXPadding,\n              yPadding: this.options.tooltipYPadding,\n              fillColor: this.options.tooltipFillColor,\n              textColor: this.options.tooltipFontColor,\n              fontFamily: this.options.tooltipFontFamily,\n              fontStyle: this.options.tooltipFontStyle,\n              fontSize: this.options.tooltipFontSize,\n              caretHeight: this.options.tooltipCaretSize,\n              cornerRadius: this.options.tooltipCornerRadius,\n              text: template(this.options.tooltipTemplate, Element),\n              chart: this.chart,\n              custom: this.options.customTooltips\n            }).draw();\n          }, this);\n        }\n      }\n\n      return this;\n    },\n    toBase64Image: function () {\n      return this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n    }\n  });\n\n  Chart.Type.extend = function (extensions) {\n    var parent = this;\n\n    var ChartType = function () {\n      return parent.apply(this, arguments);\n    }; //Copy the prototype object of the this class\n\n\n    ChartType.prototype = clone(parent.prototype); //Now overwrite some of the properties in the base class with the new extensions\n\n    extend(ChartType.prototype, extensions);\n    ChartType.extend = Chart.Type.extend;\n\n    if (extensions.name || parent.prototype.name) {\n      var chartName = extensions.name || parent.prototype.name; //Assign any potential default values of the new chart type\n      //If none are defined, we'll use a clone of the chart type this is being extended from.\n      //I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n      //doesn't define some defaults of their own.\n\n      var baseDefaults = Chart.defaults[parent.prototype.name] ? clone(Chart.defaults[parent.prototype.name]) : {};\n      Chart.defaults[chartName] = extend(baseDefaults, extensions.defaults);\n      Chart.types[chartName] = ChartType; //Register this new chart type in the Chart prototype\n\n      Chart.prototype[chartName] = function (data, options) {\n        var config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n        return new ChartType(data, config, this);\n      };\n    } else {\n      warn(\"Name not provided for this chart, so it hasn't been registered\");\n    }\n\n    return parent;\n  };\n\n  Chart.Element = function (configuration) {\n    extend(this, configuration);\n    this.initialize.apply(this, arguments);\n    this.save();\n  };\n\n  extend(Chart.Element.prototype, {\n    initialize: function () {},\n    restore: function (props) {\n      if (!props) {\n        extend(this, this._saved);\n      } else {\n        each(props, function (key) {\n          this[key] = this._saved[key];\n        }, this);\n      }\n\n      return this;\n    },\n    save: function () {\n      this._saved = clone(this);\n      delete this._saved._saved;\n      return this;\n    },\n    update: function (newProps) {\n      each(newProps, function (value, key) {\n        this._saved[key] = this[key];\n        this[key] = value;\n      }, this);\n      return this;\n    },\n    transition: function (props, ease) {\n      each(props, function (value, key) {\n        this[key] = (value - this._saved[key]) * ease + this._saved[key];\n      }, this);\n      return this;\n    },\n    tooltipPosition: function () {\n      return {\n        x: this.x,\n        y: this.y\n      };\n    },\n    hasValue: function () {\n      return isNumber(this.value);\n    }\n  });\n  Chart.Element.extend = inherits;\n  Chart.Point = Chart.Element.extend({\n    display: true,\n    inRange: function (chartX, chartY) {\n      var hitDetectionRange = this.hitDetectionRadius + this.radius;\n      return Math.pow(chartX - this.x, 2) + Math.pow(chartY - this.y, 2) < Math.pow(hitDetectionRange, 2);\n    },\n    draw: function () {\n      if (this.display) {\n        var ctx = this.ctx;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n        ctx.closePath();\n        ctx.strokeStyle = this.strokeColor;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.fillStyle = this.fillColor;\n        ctx.fill();\n        ctx.stroke();\n      } //Quick debug for bezier curve splining\n      //Highlights control points and the line between them.\n      //Handy for dev - stripped in the min version.\n      // ctx.save();\n      // ctx.fillStyle = \"black\";\n      // ctx.strokeStyle = \"black\"\n      // ctx.beginPath();\n      // ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n      // ctx.fill();\n      // ctx.beginPath();\n      // ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n      // ctx.fill();\n      // ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n      // ctx.lineTo(this.x, this.y);\n      // ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n      // ctx.stroke();\n      // ctx.restore();\n\n    }\n  });\n  Chart.Arc = Chart.Element.extend({\n    inRange: function (chartX, chartY) {\n      var pointRelativePosition = helpers.getAngleFromPoint(this, {\n        x: chartX,\n        y: chartY\n      }); // Normalize all angles to 0 - 2*PI (0 - 360°)\n\n      var pointRelativeAngle = pointRelativePosition.angle % (Math.PI * 2),\n          startAngle = (Math.PI * 2 + this.startAngle) % (Math.PI * 2),\n          endAngle = (Math.PI * 2 + this.endAngle) % (Math.PI * 2) || 360; // Calculate wether the pointRelativeAngle is between the start and the end angle\n\n      var betweenAngles = endAngle < startAngle ? pointRelativeAngle <= endAngle || pointRelativeAngle >= startAngle : pointRelativeAngle >= startAngle && pointRelativeAngle <= endAngle; //Check if within the range of the open/close angle\n\n      var withinRadius = pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius;\n      return betweenAngles && withinRadius; //Ensure within the outside of the arc centre, but inside arc outer\n    },\n    tooltipPosition: function () {\n      var centreAngle = this.startAngle + (this.endAngle - this.startAngle) / 2,\n          rangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n      return {\n        x: this.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: this.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function (animationPercent) {\n      var easingDecimal = animationPercent || 1;\n      var ctx = this.ctx;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.outerRadius < 0 ? 0 : this.outerRadius, this.startAngle, this.endAngle);\n      ctx.arc(this.x, this.y, this.innerRadius < 0 ? 0 : this.innerRadius, this.endAngle, this.startAngle, true);\n      ctx.closePath();\n      ctx.strokeStyle = this.strokeColor;\n      ctx.lineWidth = this.strokeWidth;\n      ctx.fillStyle = this.fillColor;\n      ctx.fill();\n      ctx.lineJoin = 'bevel';\n\n      if (this.showStroke) {\n        ctx.stroke();\n      }\n    }\n  });\n  Chart.Rectangle = Chart.Element.extend({\n    draw: function () {\n      var ctx = this.ctx,\n          halfWidth = this.width / 2,\n          leftX = this.x - halfWidth,\n          rightX = this.x + halfWidth,\n          top = this.base - (this.base - this.y),\n          halfStroke = this.strokeWidth / 2; // Canvas doesn't allow us to stroke inside the width so we can\n      // adjust the sizes to fit if we're setting a stroke on the line\n\n      if (this.showStroke) {\n        leftX += halfStroke;\n        rightX -= halfStroke;\n        top += halfStroke;\n      }\n\n      ctx.beginPath();\n      ctx.fillStyle = this.fillColor;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.lineWidth = this.strokeWidth; // It'd be nice to keep this class totally generic to any rectangle\n      // and simply specify which border to miss out.\n\n      ctx.moveTo(leftX, this.base);\n      ctx.lineTo(leftX, top);\n      ctx.lineTo(rightX, top);\n      ctx.lineTo(rightX, this.base);\n      ctx.fill();\n\n      if (this.showStroke) {\n        ctx.stroke();\n      }\n    },\n    height: function () {\n      return this.base - this.y;\n    },\n    inRange: function (chartX, chartY) {\n      return chartX >= this.x - this.width / 2 && chartX <= this.x + this.width / 2 && chartY >= this.y && chartY <= this.base;\n    }\n  });\n  Chart.Animation = Chart.Element.extend({\n    currentStep: null,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: \"\",\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation \n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  Chart.Tooltip = Chart.Element.extend({\n    draw: function () {\n      var ctx = this.chart.ctx;\n      ctx.font = fontString(this.fontSize, this.fontStyle, this.fontFamily);\n      this.xAlign = \"center\";\n      this.yAlign = \"above\"; //Distance between the actual element.y position and the start of the tooltip caret\n\n      var caretPadding = this.caretPadding = 2;\n      var tooltipWidth = ctx.measureText(this.text).width + 2 * this.xPadding,\n          tooltipRectHeight = this.fontSize + 2 * this.yPadding,\n          tooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n\n      if (this.x + tooltipWidth / 2 > this.chart.width) {\n        this.xAlign = \"left\";\n      } else if (this.x - tooltipWidth / 2 < 0) {\n        this.xAlign = \"right\";\n      }\n\n      if (this.y - tooltipHeight < 0) {\n        this.yAlign = \"below\";\n      }\n\n      var tooltipX = this.x - tooltipWidth / 2,\n          tooltipY = this.y - tooltipHeight;\n      ctx.fillStyle = this.fillColor; // Custom Tooltips\n\n      if (this.custom) {\n        this.custom(this);\n      } else {\n        switch (this.yAlign) {\n          case \"above\":\n            //Draw a caret above the x/y\n            ctx.beginPath();\n            ctx.moveTo(this.x, this.y - caretPadding);\n            ctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n            ctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n            ctx.closePath();\n            ctx.fill();\n            break;\n\n          case \"below\":\n            tooltipY = this.y + caretPadding + this.caretHeight; //Draw a caret below the x/y\n\n            ctx.beginPath();\n            ctx.moveTo(this.x, this.y + caretPadding);\n            ctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n            ctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n            ctx.closePath();\n            ctx.fill();\n            break;\n        }\n\n        switch (this.xAlign) {\n          case \"left\":\n            tooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n            break;\n\n          case \"right\":\n            tooltipX = this.x - (this.cornerRadius + this.caretHeight);\n            break;\n        }\n\n        drawRoundedRectangle(ctx, tooltipX, tooltipY, tooltipWidth, tooltipRectHeight, this.cornerRadius);\n        ctx.fill();\n        ctx.fillStyle = this.textColor;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.text, tooltipX + tooltipWidth / 2, tooltipY + tooltipRectHeight / 2);\n      }\n    }\n  });\n  Chart.MultiTooltip = Chart.Element.extend({\n    initialize: function () {\n      this.font = fontString(this.fontSize, this.fontStyle, this.fontFamily);\n      this.titleFont = fontString(this.titleFontSize, this.titleFontStyle, this.titleFontFamily);\n      this.titleHeight = this.title ? this.titleFontSize * 1.5 : 0;\n      this.height = this.labels.length * this.fontSize + (this.labels.length - 1) * (this.fontSize / 2) + this.yPadding * 2 + this.titleHeight;\n      this.ctx.font = this.titleFont;\n      var titleWidth = this.ctx.measureText(this.title).width,\n          //Label has a legend square as well so account for this.\n      labelWidth = longestText(this.ctx, this.font, this.labels) + this.fontSize + 3,\n          longestTextWidth = max([labelWidth, titleWidth]);\n      this.width = longestTextWidth + this.xPadding * 2;\n      var halfHeight = this.height / 2; //Check to ensure the height will fit on the canvas\n\n      if (this.y - halfHeight < 0) {\n        this.y = halfHeight;\n      } else if (this.y + halfHeight > this.chart.height) {\n        this.y = this.chart.height - halfHeight;\n      } //Decide whether to align left or right based on position on canvas\n\n\n      if (this.x > this.chart.width / 2) {\n        this.x -= this.xOffset + this.width;\n      } else {\n        this.x += this.xOffset;\n      }\n    },\n    getLineHeight: function (index) {\n      var baseLineHeight = this.y - this.height / 2 + this.yPadding,\n          afterTitleIndex = index - 1; //If the index is zero, we're getting the title\n\n      if (index === 0) {\n        return baseLineHeight + this.titleHeight / 3;\n      } else {\n        return baseLineHeight + (this.fontSize * 1.5 * afterTitleIndex + this.fontSize / 2) + this.titleHeight;\n      }\n    },\n    draw: function () {\n      // Custom Tooltips\n      if (this.custom) {\n        this.custom(this);\n      } else {\n        drawRoundedRectangle(this.ctx, this.x, this.y - this.height / 2, this.width, this.height, this.cornerRadius);\n        var ctx = this.ctx;\n        ctx.fillStyle = this.fillColor;\n        ctx.fill();\n        ctx.closePath();\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = this.titleTextColor;\n        ctx.font = this.titleFont;\n        ctx.fillText(this.title, this.x + this.xPadding, this.getLineHeight(0));\n        ctx.font = this.font;\n        helpers.each(this.labels, function (label, index) {\n          ctx.fillStyle = this.textColor;\n          ctx.fillText(label, this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1)); //A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n          //ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n          //Instead we'll make a white filled block to put the legendColour palette over.\n\n          ctx.fillStyle = this.legendColorBackground;\n          ctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize / 2, this.fontSize, this.fontSize);\n          ctx.fillStyle = this.legendColors[index].fill;\n          ctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize / 2, this.fontSize, this.fontSize);\n        }, this);\n      }\n    }\n  });\n  Chart.Scale = Chart.Element.extend({\n    initialize: function () {\n      this.fit();\n    },\n    buildYLabels: function () {\n      this.yLabels = [];\n      var stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n      for (var i = 0; i <= this.steps; i++) {\n        this.yLabels.push(template(this.templateString, {\n          value: (this.min + i * this.stepValue).toFixed(stepDecimalPlaces)\n        }));\n      }\n\n      this.yLabelWidth = this.display && this.showLabels ? longestText(this.ctx, this.font, this.yLabels) + 10 : 0;\n    },\n    addXLabel: function (label) {\n      this.xLabels.push(label);\n      this.valuesCount++;\n      this.fit();\n    },\n    removeXLabel: function () {\n      this.xLabels.shift();\n      this.valuesCount--;\n      this.fit();\n    },\n    // Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n    fit: function () {\n      // First we need the width of the yLabels, assuming the xLabels aren't rotated\n      // To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n      this.startPoint = this.display ? this.fontSize : 0;\n      this.endPoint = this.display ? this.height - this.fontSize * 1.5 - 5 : this.height; // -5 to pad labels\n      // Apply padding settings to the start and end point.\n\n      this.startPoint += this.padding;\n      this.endPoint -= this.padding; // Cache the starting endpoint, excluding the space for x labels\n\n      var cachedEndPoint = this.endPoint; // Cache the starting height, so can determine if we need to recalculate the scale yAxis\n\n      var cachedHeight = this.endPoint - this.startPoint,\n          cachedYLabelWidth; // Build the current yLabels so we have an idea of what size they'll be to start\n\n      /*\n       *\tThis sets what is returned from calculateScaleRange as static properties of this class:\n       *\n      \tthis.steps;\n      \tthis.stepValue;\n      \tthis.min;\n      \tthis.max;\n       *\n       */\n\n      this.calculateYRange(cachedHeight); // With these properties set we can now build the array of yLabels\n      // and also the width of the largest yLabel\n\n      this.buildYLabels();\n      this.calculateXLabelRotation();\n\n      while (cachedHeight > this.endPoint - this.startPoint) {\n        cachedHeight = this.endPoint - this.startPoint;\n        cachedYLabelWidth = this.yLabelWidth;\n        this.calculateYRange(cachedHeight);\n        this.buildYLabels(); // Only go through the xLabel loop again if the yLabel width has changed\n\n        if (cachedYLabelWidth < this.yLabelWidth) {\n          this.endPoint = cachedEndPoint;\n          this.calculateXLabelRotation();\n        }\n      }\n    },\n    calculateXLabelRotation: function () {\n      //Get the width of each grid by calculating the difference\n      //between x offsets between 0 and 1.\n      this.ctx.font = this.font;\n      var firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n          lastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n          firstRotated,\n          lastRotated;\n      this.xScalePaddingRight = lastWidth / 2 + 3;\n      this.xScalePaddingLeft = firstWidth / 2 > this.yLabelWidth ? firstWidth / 2 : this.yLabelWidth;\n      this.xLabelRotation = 0;\n\n      if (this.display) {\n        var originalLabelWidth = longestText(this.ctx, this.font, this.xLabels),\n            cosRotation,\n            firstRotatedWidth;\n        this.xLabelWidth = originalLabelWidth; //Allow 3 pixels x2 padding either side for label readability\n\n        var xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6; //Max label rotate should be 90 - also act as a loop counter\n\n        while (this.xLabelWidth > xGridWidth && this.xLabelRotation === 0 || this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0) {\n          cosRotation = Math.cos(toRadians(this.xLabelRotation));\n          firstRotated = cosRotation * firstWidth;\n          lastRotated = cosRotation * lastWidth; // We're right aligning the text now.\n\n          if (firstRotated + this.fontSize / 2 > this.yLabelWidth) {\n            this.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n          }\n\n          this.xScalePaddingRight = this.fontSize / 2;\n          this.xLabelRotation++;\n          this.xLabelWidth = cosRotation * originalLabelWidth;\n        }\n\n        if (this.xLabelRotation > 0) {\n          this.endPoint -= Math.sin(toRadians(this.xLabelRotation)) * originalLabelWidth + 3;\n        }\n      } else {\n        this.xLabelWidth = 0;\n        this.xScalePaddingRight = this.padding;\n        this.xScalePaddingLeft = this.padding;\n      }\n    },\n    // Needs to be overidden in each Chart type\n    // Otherwise we need to pass all the data into the scale class\n    calculateYRange: noop,\n    drawingArea: function () {\n      return this.startPoint - this.endPoint;\n    },\n    calculateY: function (value) {\n      var scalingFactor = this.drawingArea() / (this.min - this.max);\n      return this.endPoint - scalingFactor * (value - this.min);\n    },\n    calculateX: function (index) {\n      var isRotated = this.xLabelRotation > 0,\n          // innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n      innerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n          valueWidth = innerWidth / Math.max(this.valuesCount - (this.offsetGridLines ? 0 : 1), 1),\n          valueOffset = valueWidth * index + this.xScalePaddingLeft;\n\n      if (this.offsetGridLines) {\n        valueOffset += valueWidth / 2;\n      }\n\n      return Math.round(valueOffset);\n    },\n    update: function (newProps) {\n      helpers.extend(this, newProps);\n      this.fit();\n    },\n    draw: function () {\n      var ctx = this.ctx,\n          yLabelGap = (this.endPoint - this.startPoint) / this.steps,\n          xStart = Math.round(this.xScalePaddingLeft);\n\n      if (this.display) {\n        ctx.fillStyle = this.textColor;\n        ctx.font = this.font;\n        each(this.yLabels, function (labelString, index) {\n          var yLabelCenter = this.endPoint - yLabelGap * index,\n              linePositionY = Math.round(yLabelCenter),\n              drawHorizontalLine = this.showHorizontalLines;\n          ctx.textAlign = \"right\";\n          ctx.textBaseline = \"middle\";\n\n          if (this.showLabels) {\n            ctx.fillText(labelString, xStart - 10, yLabelCenter);\n          } // This is X axis, so draw it\n\n\n          if (index === 0 && !drawHorizontalLine) {\n            drawHorizontalLine = true;\n          }\n\n          if (drawHorizontalLine) {\n            ctx.beginPath();\n          }\n\n          if (index > 0) {\n            // This is a grid line in the centre, so drop that\n            ctx.lineWidth = this.gridLineWidth;\n            ctx.strokeStyle = this.gridLineColor;\n          } else {\n            // This is the first line on the scale\n            ctx.lineWidth = this.lineWidth;\n            ctx.strokeStyle = this.lineColor;\n          }\n\n          linePositionY += helpers.aliasPixel(ctx.lineWidth);\n\n          if (drawHorizontalLine) {\n            ctx.moveTo(xStart, linePositionY);\n            ctx.lineTo(this.width, linePositionY);\n            ctx.stroke();\n            ctx.closePath();\n          }\n\n          ctx.lineWidth = this.lineWidth;\n          ctx.strokeStyle = this.lineColor;\n          ctx.beginPath();\n          ctx.moveTo(xStart - 5, linePositionY);\n          ctx.lineTo(xStart, linePositionY);\n          ctx.stroke();\n          ctx.closePath();\n        }, this);\n        each(this.xLabels, function (label, index) {\n          var xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n              // Check to see if line/bar here and decide where to place the line\n          linePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n              isRotated = this.xLabelRotation > 0,\n              drawVerticalLine = this.showVerticalLines; // This is Y axis, so draw it\n\n          if (index === 0 && !drawVerticalLine) {\n            drawVerticalLine = true;\n          }\n\n          if (drawVerticalLine) {\n            ctx.beginPath();\n          }\n\n          if (index > 0) {\n            // This is a grid line in the centre, so drop that\n            ctx.lineWidth = this.gridLineWidth;\n            ctx.strokeStyle = this.gridLineColor;\n          } else {\n            // This is the first line on the scale\n            ctx.lineWidth = this.lineWidth;\n            ctx.strokeStyle = this.lineColor;\n          }\n\n          if (drawVerticalLine) {\n            ctx.moveTo(linePos, this.endPoint);\n            ctx.lineTo(linePos, this.startPoint - 3);\n            ctx.stroke();\n            ctx.closePath();\n          }\n\n          ctx.lineWidth = this.lineWidth;\n          ctx.strokeStyle = this.lineColor; // Small lines at the bottom of the base grid line\n\n          ctx.beginPath();\n          ctx.moveTo(linePos, this.endPoint);\n          ctx.lineTo(linePos, this.endPoint + 5);\n          ctx.stroke();\n          ctx.closePath();\n          ctx.save();\n          ctx.translate(xPos, isRotated ? this.endPoint + 12 : this.endPoint + 8);\n          ctx.rotate(toRadians(this.xLabelRotation) * -1);\n          ctx.font = this.font;\n          ctx.textAlign = isRotated ? \"right\" : \"center\";\n          ctx.textBaseline = isRotated ? \"middle\" : \"top\";\n          ctx.fillText(label, 0, 0);\n          ctx.restore();\n        }, this);\n      }\n    }\n  });\n  Chart.RadialScale = Chart.Element.extend({\n    initialize: function () {\n      this.size = min([this.height, this.width]);\n      this.drawingArea = this.display ? this.size / 2 - (this.fontSize / 2 + this.backdropPaddingY) : this.size / 2;\n    },\n    calculateCenterOffset: function (value) {\n      // Take into account half font size + the yPadding of the top value\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      return (value - this.min) * scalingFactor;\n    },\n    update: function () {\n      if (!this.lineArc) {\n        this.setScaleSize();\n      } else {\n        this.drawingArea = this.display ? this.size / 2 - (this.fontSize / 2 + this.backdropPaddingY) : this.size / 2;\n      }\n\n      this.buildYLabels();\n    },\n    buildYLabels: function () {\n      this.yLabels = [];\n      var stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n      for (var i = 0; i <= this.steps; i++) {\n        this.yLabels.push(template(this.templateString, {\n          value: (this.min + i * this.stepValue).toFixed(stepDecimalPlaces)\n        }));\n      }\n    },\n    getCircumference: function () {\n      return Math.PI * 2 / this.valuesCount;\n    },\n    setScaleSize: function () {\n      /*\n       * Right, this is really confusing and there is a lot of maths going on here\n       * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n       *\n       * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n       *\n       * Solution:\n       *\n       * We assume the radius of the polygon is half the size of the canvas at first\n       * at each index we check if the text overlaps.\n       *\n       * Where it does, we store that angle and that index.\n       *\n       * After finding the largest index and angle we calculate how much we need to remove\n       * from the shape radius to move the point inwards by that x.\n       *\n       * We average the left and right distances to get the maximum shape radius that can fit in the box\n       * along with labels.\n       *\n       * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n       * on each side, removing that from the size, halving it and adding the left x protrusion width.\n       *\n       * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n       * and position it in the most space efficient manner\n       *\n       * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n       */\n      // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n      // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n      var largestPossibleRadius = min([this.height / 2 - this.pointLabelFontSize - 5, this.width / 2]),\n          pointPosition,\n          i,\n          textWidth,\n          halfTextWidth,\n          furthestRight = this.width,\n          furthestRightIndex,\n          furthestRightAngle,\n          furthestLeft = 0,\n          furthestLeftIndex,\n          furthestLeftAngle,\n          xProtrusionLeft,\n          xProtrusionRight,\n          radiusReductionRight,\n          radiusReductionLeft,\n          maxWidthRadius;\n      this.ctx.font = fontString(this.pointLabelFontSize, this.pointLabelFontStyle, this.pointLabelFontFamily);\n\n      for (i = 0; i < this.valuesCount; i++) {\n        // 5px to space the text slightly out - similar to what we do in the draw function.\n        pointPosition = this.getPointPosition(i, largestPossibleRadius);\n        textWidth = this.ctx.measureText(template(this.templateString, {\n          value: this.labels[i]\n        })).width + 5;\n\n        if (i === 0 || i === this.valuesCount / 2) {\n          // If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n          // of the radar chart, so text will be aligned centrally, so we'll half it and compare\n          // w/left and right text sizes\n          halfTextWidth = textWidth / 2;\n\n          if (pointPosition.x + halfTextWidth > furthestRight) {\n            furthestRight = pointPosition.x + halfTextWidth;\n            furthestRightIndex = i;\n          }\n\n          if (pointPosition.x - halfTextWidth < furthestLeft) {\n            furthestLeft = pointPosition.x - halfTextWidth;\n            furthestLeftIndex = i;\n          }\n        } else if (i < this.valuesCount / 2) {\n          // Less than half the values means we'll left align the text\n          if (pointPosition.x + textWidth > furthestRight) {\n            furthestRight = pointPosition.x + textWidth;\n            furthestRightIndex = i;\n          }\n        } else if (i > this.valuesCount / 2) {\n          // More than half the values means we'll right align the text\n          if (pointPosition.x - textWidth < furthestLeft) {\n            furthestLeft = pointPosition.x - textWidth;\n            furthestLeftIndex = i;\n          }\n        }\n      }\n\n      xProtrusionLeft = furthestLeft;\n      xProtrusionRight = Math.ceil(furthestRight - this.width);\n      furthestRightAngle = this.getIndexAngle(furthestRightIndex);\n      furthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n      radiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);\n      radiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2); // Ensure we actually need to reduce the size of the chart\n\n      radiusReductionRight = isNumber(radiusReductionRight) ? radiusReductionRight : 0;\n      radiusReductionLeft = isNumber(radiusReductionLeft) ? radiusReductionLeft : 0;\n      this.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2; //this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n\n      this.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n    },\n    setCenterPoint: function (leftMovement, rightMovement) {\n      var maxRight = this.width - rightMovement - this.drawingArea,\n          maxLeft = leftMovement + this.drawingArea;\n      this.xCenter = (maxLeft + maxRight) / 2; // Always vertically in the centre as the text height doesn't change\n\n      this.yCenter = this.height / 2;\n    },\n    getIndexAngle: function (index) {\n      var angleMultiplier = Math.PI * 2 / this.valuesCount; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier - Math.PI / 2;\n    },\n    getPointPosition: function (index, distanceFromCenter) {\n      var thisAngle = this.getIndexAngle(index);\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + this.yCenter\n      };\n    },\n    draw: function () {\n      if (this.display) {\n        var ctx = this.ctx;\n        each(this.yLabels, function (label, index) {\n          // Don't draw a centre value\n          if (index > 0) {\n            var yCenterOffset = index * (this.drawingArea / this.steps),\n                yHeight = this.yCenter - yCenterOffset,\n                pointPosition; // Draw circular lines around the scale\n\n            if (this.lineWidth > 0) {\n              ctx.strokeStyle = this.lineColor;\n              ctx.lineWidth = this.lineWidth;\n\n              if (this.lineArc) {\n                ctx.beginPath();\n                ctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI * 2);\n                ctx.closePath();\n                ctx.stroke();\n              } else {\n                ctx.beginPath();\n\n                for (var i = 0; i < this.valuesCount; i++) {\n                  pointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + index * this.stepValue));\n\n                  if (i === 0) {\n                    ctx.moveTo(pointPosition.x, pointPosition.y);\n                  } else {\n                    ctx.lineTo(pointPosition.x, pointPosition.y);\n                  }\n                }\n\n                ctx.closePath();\n                ctx.stroke();\n              }\n            }\n\n            if (this.showLabels) {\n              ctx.font = fontString(this.fontSize, this.fontStyle, this.fontFamily);\n\n              if (this.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = this.backdropColor;\n                ctx.fillRect(this.xCenter - labelWidth / 2 - this.backdropPaddingX, yHeight - this.fontSize / 2 - this.backdropPaddingY, labelWidth + this.backdropPaddingX * 2, this.fontSize + this.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = \"middle\";\n              ctx.fillStyle = this.fontColor;\n              ctx.fillText(label, this.xCenter, yHeight);\n            }\n          }\n        }, this);\n\n        if (!this.lineArc) {\n          ctx.lineWidth = this.angleLineWidth;\n          ctx.strokeStyle = this.angleLineColor;\n\n          for (var i = this.valuesCount - 1; i >= 0; i--) {\n            var centerOffset = null,\n                outerPosition = null;\n\n            if (this.angleLineWidth > 0 && i % this.angleLineInterval === 0) {\n              centerOffset = this.calculateCenterOffset(this.max);\n              outerPosition = this.getPointPosition(i, centerOffset);\n              ctx.beginPath();\n              ctx.moveTo(this.xCenter, this.yCenter);\n              ctx.lineTo(outerPosition.x, outerPosition.y);\n              ctx.stroke();\n              ctx.closePath();\n            }\n\n            if (this.backgroundColors && this.backgroundColors.length == this.valuesCount) {\n              if (centerOffset == null) centerOffset = this.calculateCenterOffset(this.max);\n              if (outerPosition == null) outerPosition = this.getPointPosition(i, centerOffset);\n              var previousOuterPosition = this.getPointPosition(i === 0 ? this.valuesCount - 1 : i - 1, centerOffset);\n              var nextOuterPosition = this.getPointPosition(i === this.valuesCount - 1 ? 0 : i + 1, centerOffset);\n              var previousOuterHalfway = {\n                x: (previousOuterPosition.x + outerPosition.x) / 2,\n                y: (previousOuterPosition.y + outerPosition.y) / 2\n              };\n              var nextOuterHalfway = {\n                x: (outerPosition.x + nextOuterPosition.x) / 2,\n                y: (outerPosition.y + nextOuterPosition.y) / 2\n              };\n              ctx.beginPath();\n              ctx.moveTo(this.xCenter, this.yCenter);\n              ctx.lineTo(previousOuterHalfway.x, previousOuterHalfway.y);\n              ctx.lineTo(outerPosition.x, outerPosition.y);\n              ctx.lineTo(nextOuterHalfway.x, nextOuterHalfway.y);\n              ctx.fillStyle = this.backgroundColors[i];\n              ctx.fill();\n              ctx.closePath();\n            } // Extra 3px out for some label spacing\n\n\n            var pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n            ctx.font = fontString(this.pointLabelFontSize, this.pointLabelFontStyle, this.pointLabelFontFamily);\n            ctx.fillStyle = this.pointLabelFontColor;\n            var labelsCount = this.labels.length,\n                halfLabelsCount = this.labels.length / 2,\n                quarterLabelsCount = halfLabelsCount / 2,\n                upperHalf = i < quarterLabelsCount || i > labelsCount - quarterLabelsCount,\n                exactQuarter = i === quarterLabelsCount || i === labelsCount - quarterLabelsCount;\n\n            if (i === 0) {\n              ctx.textAlign = 'center';\n            } else if (i === halfLabelsCount) {\n              ctx.textAlign = 'center';\n            } else if (i < halfLabelsCount) {\n              ctx.textAlign = 'left';\n            } else {\n              ctx.textAlign = 'right';\n            } // Set the correct text baseline based on outer positioning\n\n\n            if (exactQuarter) {\n              ctx.textBaseline = 'middle';\n            } else if (upperHalf) {\n              ctx.textBaseline = 'bottom';\n            } else {\n              ctx.textBaseline = 'top';\n            }\n\n            ctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n          }\n        }\n      }\n    }\n  });\n  Chart.animationService = {\n    frameDuration: 17,\n    animations: [],\n    dropFrames: 0,\n    addAnimation: function (chartInstance, animationObject) {\n      for (var index = 0; index < this.animations.length; ++index) {\n        if (this.animations[index].chartInstance === chartInstance) {\n          // replacing an in progress animation\n          this.animations[index].animationObject = animationObject;\n          return;\n        }\n      }\n\n      this.animations.push({\n        chartInstance: chartInstance,\n        animationObject: animationObject\n      }); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (this.animations.length == 1) {\n        helpers.requestAnimFrame.call(window, this.digestWrapper);\n      }\n    },\n    // Cancel the animation for a given chart instance\n    cancelAnimation: function (chartInstance) {\n      var index = helpers.findNextWhere(this.animations, function (animationWrapper) {\n        return animationWrapper.chartInstance === chartInstance;\n      });\n\n      if (index) {\n        this.animations.splice(index, 1);\n      }\n    },\n    // calls startDigest with the proper context\n    digestWrapper: function () {\n      Chart.animationService.startDigest.call(Chart.animationService);\n    },\n    startDigest: function () {\n      var startTime = Date.now();\n      var framesToDrop = 0;\n\n      if (this.dropFrames > 1) {\n        framesToDrop = Math.floor(this.dropFrames);\n        this.dropFrames -= framesToDrop;\n      }\n\n      for (var i = 0; i < this.animations.length; i++) {\n        if (this.animations[i].animationObject.currentStep === null) {\n          this.animations[i].animationObject.currentStep = 0;\n        }\n\n        this.animations[i].animationObject.currentStep += 1 + framesToDrop;\n\n        if (this.animations[i].animationObject.currentStep > this.animations[i].animationObject.numSteps) {\n          this.animations[i].animationObject.currentStep = this.animations[i].animationObject.numSteps;\n        }\n\n        this.animations[i].animationObject.render(this.animations[i].chartInstance, this.animations[i].animationObject); // Check if executed the last frame.\n\n        if (this.animations[i].animationObject.currentStep == this.animations[i].animationObject.numSteps) {\n          // Call onAnimationComplete\n          this.animations[i].animationObject.onAnimationComplete.call(this.animations[i].chartInstance); // Remove the animation.\n\n          this.animations.splice(i, 1); // Keep the index in place to offset the splice\n\n          i--;\n        }\n      }\n\n      var endTime = Date.now();\n      var delay = endTime - startTime - this.frameDuration;\n      var frameDelay = delay / this.frameDuration;\n\n      if (frameDelay > 1) {\n        this.dropFrames += frameDelay;\n      } // Do we have more stuff to animate?\n\n\n      if (this.animations.length > 0) {\n        helpers.requestAnimFrame.call(window, this.digestWrapper);\n      }\n    }\n  }; // Attach global event to resize each chart instance when the browser resizes\n\n  helpers.addEvent(window, \"resize\", function () {\n    // Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n    var timeout;\n    return function () {\n      clearTimeout(timeout);\n      timeout = setTimeout(function () {\n        each(Chart.instances, function (instance) {\n          // If the responsive flag is set in the chart instance config\n          // Cascade the resize event down to the chart.\n          if (instance.options.responsive) {\n            instance.resize(instance.render, true);\n          }\n        });\n      }, 50);\n    };\n  }());\n\n  if (amd) {\n    define('Chart', [], function () {\n      return Chart;\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = Chart;\n  }\n\n  root.Chart = Chart;\n\n  Chart.noConflict = function () {\n    root.Chart = previous;\n    return Chart;\n  };\n}).call(this);\n(function () {\n  \"use strict\";\n\n  var root = this,\n      Chart = root.Chart,\n      helpers = Chart.helpers;\n  var defaultConfig = {\n    //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n    scaleBeginAtZero: true,\n    //Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n    //Boolean - Whether to show horizontal lines (except X axis)\n    scaleShowHorizontalLines: true,\n    //Boolean - Whether to show vertical lines (except Y axis)\n    scaleShowVerticalLines: true,\n    //Boolean - If there is a stroke on each bar\n    barShowStroke: true,\n    //Number - Pixel width of the bar stroke\n    barStrokeWidth: 2,\n    //Number - Spacing between each of the X value sets\n    barValueSpacing: 5,\n    //Number - Spacing between data sets within X values\n    barDatasetSpacing: 1,\n    //String - A legend template\n    legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\"\n  };\n  Chart.Type.extend({\n    name: \"Bar\",\n    defaults: defaultConfig,\n    initialize: function (data) {\n      //Expose options as a scope variable here so we can access it in the ScaleClass\n      var options = this.options;\n      this.ScaleClass = Chart.Scale.extend({\n        offsetGridLines: true,\n        calculateBarX: function (datasetCount, datasetIndex, barIndex) {\n          //Reusable method for calculating the xPosition of a given bar based on datasetIndex & width of the bar\n          var xWidth = this.calculateBaseWidth(),\n              xAbsolute = this.calculateX(barIndex) - xWidth / 2,\n              barWidth = this.calculateBarWidth(datasetCount);\n          return xAbsolute + barWidth * datasetIndex + datasetIndex * options.barDatasetSpacing + barWidth / 2;\n        },\n        calculateBaseWidth: function () {\n          return this.calculateX(1) - this.calculateX(0) - 2 * options.barValueSpacing;\n        },\n        calculateBarWidth: function (datasetCount) {\n          //The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n          var baseWidth = this.calculateBaseWidth() - (datasetCount - 1) * options.barDatasetSpacing;\n          return baseWidth / datasetCount;\n        }\n      });\n      this.datasets = []; //Set up tooltip events on the chart\n\n      if (this.options.showTooltips) {\n        helpers.bindEvents(this, this.options.tooltipEvents, function (evt) {\n          var activeBars = evt.type !== 'mouseout' ? this.getBarsAtEvent(evt) : [];\n          this.eachBars(function (bar) {\n            bar.restore(['fillColor', 'strokeColor']);\n          });\n          helpers.each(activeBars, function (activeBar) {\n            if (activeBar) {\n              activeBar.fillColor = activeBar.highlightFill;\n              activeBar.strokeColor = activeBar.highlightStroke;\n            }\n          });\n          this.showTooltip(activeBars);\n        });\n      } //Declare the extension of the default point, to cater for the options passed in to the constructor\n\n\n      this.BarClass = Chart.Rectangle.extend({\n        strokeWidth: this.options.barStrokeWidth,\n        showStroke: this.options.barShowStroke,\n        ctx: this.chart.ctx\n      }); //Iterate through each of the datasets, and build this into a property of the chart\n\n      helpers.each(data.datasets, function (dataset, datasetIndex) {\n        var datasetObject = {\n          label: dataset.label || null,\n          fillColor: dataset.fillColor,\n          strokeColor: dataset.strokeColor,\n          bars: []\n        };\n        this.datasets.push(datasetObject);\n        helpers.each(dataset.data, function (dataPoint, index) {\n          //Add a new point for each piece of data, passing any required data to draw.\n          datasetObject.bars.push(new this.BarClass({\n            value: dataPoint,\n            label: data.labels[index],\n            datasetLabel: dataset.label,\n            strokeColor: typeof dataset.strokeColor == 'object' ? dataset.strokeColor[index] : dataset.strokeColor,\n            fillColor: typeof dataset.fillColor == 'object' ? dataset.fillColor[index] : dataset.fillColor,\n            highlightFill: dataset.highlightFill ? typeof dataset.highlightFill == 'object' ? dataset.highlightFill[index] : dataset.highlightFill : typeof dataset.fillColor == 'object' ? dataset.fillColor[index] : dataset.fillColor,\n            highlightStroke: dataset.highlightStroke ? typeof dataset.highlightStroke == 'object' ? dataset.highlightStroke[index] : dataset.highlightStroke : typeof dataset.strokeColor == 'object' ? dataset.strokeColor[index] : dataset.strokeColor\n          }));\n        }, this);\n      }, this);\n      this.buildScale(data.labels);\n      this.BarClass.prototype.base = this.scale.endPoint;\n      this.eachBars(function (bar, index, datasetIndex) {\n        helpers.extend(bar, {\n          width: this.scale.calculateBarWidth(this.datasets.length),\n          x: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n          y: this.scale.endPoint\n        });\n        bar.save();\n      }, this);\n      this.render();\n    },\n    update: function () {\n      this.scale.update(); // Reset any highlight colours before updating.\n\n      helpers.each(this.activeElements, function (activeElement) {\n        activeElement.restore(['fillColor', 'strokeColor']);\n      });\n      this.eachBars(function (bar) {\n        bar.save();\n      });\n      this.render();\n    },\n    eachBars: function (callback) {\n      helpers.each(this.datasets, function (dataset, datasetIndex) {\n        helpers.each(dataset.bars, callback, this, datasetIndex);\n      }, this);\n    },\n    getBarsAtEvent: function (e) {\n      var barsArray = [],\n          eventPosition = helpers.getRelativePosition(e),\n          datasetIterator = function (dataset) {\n        barsArray.push(dataset.bars[barIndex]);\n      },\n          barIndex;\n\n      for (var datasetIndex = 0; datasetIndex < this.datasets.length; datasetIndex++) {\n        for (barIndex = 0; barIndex < this.datasets[datasetIndex].bars.length; barIndex++) {\n          if (this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x, eventPosition.y)) {\n            helpers.each(this.datasets, datasetIterator);\n            return barsArray;\n          }\n        }\n      }\n\n      return barsArray;\n    },\n    buildScale: function (labels) {\n      var self = this;\n\n      var dataTotal = function () {\n        var values = [];\n        self.eachBars(function (bar) {\n          values.push(bar.value);\n        });\n        return values;\n      };\n\n      var scaleOptions = {\n        templateString: this.options.scaleLabel,\n        height: this.chart.height,\n        width: this.chart.width,\n        ctx: this.chart.ctx,\n        textColor: this.options.scaleFontColor,\n        fontSize: this.options.scaleFontSize,\n        fontStyle: this.options.scaleFontStyle,\n        fontFamily: this.options.scaleFontFamily,\n        valuesCount: labels.length,\n        beginAtZero: this.options.scaleBeginAtZero,\n        integersOnly: this.options.scaleIntegersOnly,\n        calculateYRange: function (currentHeight) {\n          var updatedRanges = helpers.calculateScaleRange(dataTotal(), currentHeight, this.fontSize, this.beginAtZero, this.integersOnly);\n          helpers.extend(this, updatedRanges);\n        },\n        xLabels: labels,\n        font: helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n        lineWidth: this.options.scaleLineWidth,\n        lineColor: this.options.scaleLineColor,\n        showHorizontalLines: this.options.scaleShowHorizontalLines,\n        showVerticalLines: this.options.scaleShowVerticalLines,\n        gridLineWidth: this.options.scaleShowGridLines ? this.options.scaleGridLineWidth : 0,\n        gridLineColor: this.options.scaleShowGridLines ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n        padding: this.options.showScale ? 0 : this.options.barShowStroke ? this.options.barStrokeWidth : 0,\n        showLabels: this.options.scaleShowLabels,\n        display: this.options.showScale\n      };\n\n      if (this.options.scaleOverride) {\n        helpers.extend(scaleOptions, {\n          calculateYRange: helpers.noop,\n          steps: this.options.scaleSteps,\n          stepValue: this.options.scaleStepWidth,\n          min: this.options.scaleStartValue,\n          max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth\n        });\n      }\n\n      this.scale = new this.ScaleClass(scaleOptions);\n    },\n    addData: function (valuesArray, label) {\n      //Map the values array for each of the datasets\n      helpers.each(valuesArray, function (value, datasetIndex) {\n        //Add a new point for each piece of data, passing any required data to draw.\n        this.datasets[datasetIndex].bars.push(new this.BarClass({\n          value: value,\n          label: label,\n          datasetLabel: this.datasets[datasetIndex].label,\n          x: this.scale.calculateBarX(this.datasets.length, datasetIndex, this.scale.valuesCount + 1),\n          y: this.scale.endPoint,\n          width: this.scale.calculateBarWidth(this.datasets.length),\n          base: this.scale.endPoint,\n          strokeColor: this.datasets[datasetIndex].strokeColor,\n          fillColor: this.datasets[datasetIndex].fillColor\n        }));\n      }, this);\n      this.scale.addXLabel(label); //Then re-render the chart.\n\n      this.update();\n    },\n    removeData: function () {\n      this.scale.removeXLabel(); //Then re-render the chart.\n\n      helpers.each(this.datasets, function (dataset) {\n        dataset.bars.shift();\n      }, this);\n      this.update();\n    },\n    reflow: function () {\n      helpers.extend(this.BarClass.prototype, {\n        y: this.scale.endPoint,\n        base: this.scale.endPoint\n      });\n      var newScaleProps = helpers.extend({\n        height: this.chart.height,\n        width: this.chart.width\n      });\n      this.scale.update(newScaleProps);\n    },\n    draw: function (ease) {\n      var easingDecimal = ease || 1;\n      this.clear();\n      var ctx = this.chart.ctx;\n      this.scale.draw(easingDecimal); //Draw all the bars for each dataset\n\n      helpers.each(this.datasets, function (dataset, datasetIndex) {\n        helpers.each(dataset.bars, function (bar, index) {\n          if (bar.hasValue()) {\n            bar.base = this.scale.endPoint; //Transition then draw\n\n            bar.transition({\n              x: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n              y: this.scale.calculateY(bar.value),\n              width: this.scale.calculateBarWidth(this.datasets.length)\n            }, easingDecimal).draw();\n          }\n        }, this);\n      }, this);\n    }\n  });\n}).call(this);\n(function () {\n  \"use strict\";\n\n  var root = this,\n      Chart = root.Chart,\n      //Cache a local reference to Chart.helpers\n  helpers = Chart.helpers;\n  var defaultConfig = {\n    //Boolean - Whether we should show a stroke on each segment\n    segmentShowStroke: true,\n    //String - The colour of each segment stroke\n    segmentStrokeColor: \"#fff\",\n    //Number - The width of each segment stroke\n    segmentStrokeWidth: 2,\n    //The percentage of the chart that we cut out of the middle.\n    percentageInnerCutout: 50,\n    //Number - Amount of animation steps\n    animationSteps: 100,\n    //String - Animation easing effect\n    animationEasing: \"easeOutBounce\",\n    //Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    //Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false,\n    //String - A legend template\n    legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n  };\n  Chart.Type.extend({\n    //Passing in a name registers this chart in the Chart namespace\n    name: \"Doughnut\",\n    //Providing a defaults will also register the defaults in the chart namespace\n    defaults: defaultConfig,\n    //Initialize is fired when the chart is initialized - Data is passed in as a parameter\n    //Config is automatically merged by the core of Chart.js, and is available at this.options\n    initialize: function (data) {\n      //Declare segments as a static property to prevent inheriting across the Chart type prototype\n      this.segments = [];\n      this.outerRadius = (helpers.min([this.chart.width, this.chart.height]) - this.options.segmentStrokeWidth / 2) / 2;\n      this.SegmentArc = Chart.Arc.extend({\n        ctx: this.chart.ctx,\n        x: this.chart.width / 2,\n        y: this.chart.height / 2\n      }); //Set up tooltip events on the chart\n\n      if (this.options.showTooltips) {\n        helpers.bindEvents(this, this.options.tooltipEvents, function (evt) {\n          var activeSegments = evt.type !== 'mouseout' ? this.getSegmentsAtEvent(evt) : [];\n          helpers.each(this.segments, function (segment) {\n            segment.restore([\"fillColor\"]);\n          });\n          helpers.each(activeSegments, function (activeSegment) {\n            activeSegment.fillColor = activeSegment.highlightColor;\n          });\n          this.showTooltip(activeSegments);\n        });\n      }\n\n      this.calculateTotal(data);\n      helpers.each(data, function (datapoint, index) {\n        if (!datapoint.color) {\n          datapoint.color = 'hsl(' + 360 * index / data.length + ', 100%, 50%)';\n        }\n\n        this.addData(datapoint, index, true);\n      }, this);\n      this.render();\n    },\n    getSegmentsAtEvent: function (e) {\n      var segmentsArray = [];\n      var location = helpers.getRelativePosition(e);\n      helpers.each(this.segments, function (segment) {\n        if (segment.inRange(location.x, location.y)) segmentsArray.push(segment);\n      }, this);\n      return segmentsArray;\n    },\n    addData: function (segment, atIndex, silent) {\n      var index = atIndex !== undefined ? atIndex : this.segments.length;\n\n      if (typeof segment.color === \"undefined\") {\n        segment.color = Chart.defaults.global.segmentColorDefault[index % Chart.defaults.global.segmentColorDefault.length];\n        segment.highlight = Chart.defaults.global.segmentHighlightColorDefaults[index % Chart.defaults.global.segmentHighlightColorDefaults.length];\n      }\n\n      this.segments.splice(index, 0, new this.SegmentArc({\n        value: segment.value,\n        outerRadius: this.options.animateScale ? 0 : this.outerRadius,\n        innerRadius: this.options.animateScale ? 0 : this.outerRadius / 100 * this.options.percentageInnerCutout,\n        fillColor: segment.color,\n        highlightColor: segment.highlight || segment.color,\n        showStroke: this.options.segmentShowStroke,\n        strokeWidth: this.options.segmentStrokeWidth,\n        strokeColor: this.options.segmentStrokeColor,\n        startAngle: Math.PI * 1.5,\n        circumference: this.options.animateRotate ? 0 : this.calculateCircumference(segment.value),\n        label: segment.label\n      }));\n\n      if (!silent) {\n        this.reflow();\n        this.update();\n      }\n    },\n    calculateCircumference: function (value) {\n      if (this.total > 0) {\n        return Math.PI * 2 * (value / this.total);\n      } else {\n        return 0;\n      }\n    },\n    calculateTotal: function (data) {\n      this.total = 0;\n      helpers.each(data, function (segment) {\n        this.total += Math.abs(segment.value);\n      }, this);\n    },\n    update: function () {\n      this.calculateTotal(this.segments); // Reset any highlight colours before updating.\n\n      helpers.each(this.activeElements, function (activeElement) {\n        activeElement.restore(['fillColor']);\n      });\n      helpers.each(this.segments, function (segment) {\n        segment.save();\n      });\n      this.render();\n    },\n    removeData: function (atIndex) {\n      var indexToDelete = helpers.isNumber(atIndex) ? atIndex : this.segments.length - 1;\n      this.segments.splice(indexToDelete, 1);\n      this.reflow();\n      this.update();\n    },\n    reflow: function () {\n      helpers.extend(this.SegmentArc.prototype, {\n        x: this.chart.width / 2,\n        y: this.chart.height / 2\n      });\n      this.outerRadius = (helpers.min([this.chart.width, this.chart.height]) - this.options.segmentStrokeWidth / 2) / 2;\n      helpers.each(this.segments, function (segment) {\n        segment.update({\n          outerRadius: this.outerRadius,\n          innerRadius: this.outerRadius / 100 * this.options.percentageInnerCutout\n        });\n      }, this);\n    },\n    draw: function (easeDecimal) {\n      var animDecimal = easeDecimal ? easeDecimal : 1;\n      this.clear();\n      helpers.each(this.segments, function (segment, index) {\n        segment.transition({\n          circumference: this.calculateCircumference(segment.value),\n          outerRadius: this.outerRadius,\n          innerRadius: this.outerRadius / 100 * this.options.percentageInnerCutout\n        }, animDecimal);\n        segment.endAngle = segment.startAngle + segment.circumference;\n        segment.draw();\n\n        if (index === 0) {\n          segment.startAngle = Math.PI * 1.5;\n        } //Check to see if it's the last segment, if not get the next and update the start angle\n\n\n        if (index < this.segments.length - 1) {\n          this.segments[index + 1].startAngle = segment.endAngle;\n        }\n      }, this);\n    }\n  });\n  Chart.types.Doughnut.extend({\n    name: \"Pie\",\n    defaults: helpers.merge(defaultConfig, {\n      percentageInnerCutout: 0\n    })\n  });\n}).call(this);\n(function () {\n  \"use strict\";\n\n  var root = this,\n      Chart = root.Chart,\n      helpers = Chart.helpers;\n  var defaultConfig = {\n    ///Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n    //Boolean - Whether to show horizontal lines (except X axis)\n    scaleShowHorizontalLines: true,\n    //Boolean - Whether to show vertical lines (except Y axis)\n    scaleShowVerticalLines: true,\n    //Boolean - Whether the line is curved between points\n    bezierCurve: true,\n    //Number - Tension of the bezier curve between points\n    bezierCurveTension: 0.4,\n    //Boolean - Whether to show a dot for each point\n    pointDot: true,\n    //Number - Radius of each point dot in pixels\n    pointDotRadius: 4,\n    //Number - Pixel width of point dot stroke\n    pointDotStrokeWidth: 1,\n    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n    pointHitDetectionRadius: 20,\n    //Boolean - Whether to show a stroke for datasets\n    datasetStroke: true,\n    //Number - Pixel width of dataset stroke\n    datasetStrokeWidth: 2,\n    //Boolean - Whether to fill the dataset with a colour\n    datasetFill: true,\n    //String - A legend template\n    legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\",\n    //Boolean - Whether to horizontally center the label and point dot inside the grid\n    offsetGridLines: false\n  };\n  Chart.Type.extend({\n    name: \"Line\",\n    defaults: defaultConfig,\n    initialize: function (data) {\n      //Declare the extension of the default point, to cater for the options passed in to the constructor\n      this.PointClass = Chart.Point.extend({\n        offsetGridLines: this.options.offsetGridLines,\n        strokeWidth: this.options.pointDotStrokeWidth,\n        radius: this.options.pointDotRadius,\n        display: this.options.pointDot,\n        hitDetectionRadius: this.options.pointHitDetectionRadius,\n        ctx: this.chart.ctx,\n        inRange: function (mouseX) {\n          return Math.pow(mouseX - this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius, 2);\n        }\n      });\n      this.datasets = []; //Set up tooltip events on the chart\n\n      if (this.options.showTooltips) {\n        helpers.bindEvents(this, this.options.tooltipEvents, function (evt) {\n          var activePoints = evt.type !== 'mouseout' ? this.getPointsAtEvent(evt) : [];\n          this.eachPoints(function (point) {\n            point.restore(['fillColor', 'strokeColor']);\n          });\n          helpers.each(activePoints, function (activePoint) {\n            activePoint.fillColor = activePoint.highlightFill;\n            activePoint.strokeColor = activePoint.highlightStroke;\n          });\n          this.showTooltip(activePoints);\n        });\n      } //Iterate through each of the datasets, and build this into a property of the chart\n\n\n      helpers.each(data.datasets, function (dataset) {\n        var datasetObject = {\n          label: dataset.label || null,\n          fillColor: dataset.fillColor,\n          strokeColor: dataset.strokeColor,\n          pointColor: dataset.pointColor,\n          pointStrokeColor: dataset.pointStrokeColor,\n          points: []\n        };\n        this.datasets.push(datasetObject);\n        helpers.each(dataset.data, function (dataPoint, index) {\n          //Add a new point for each piece of data, passing any required data to draw.\n          datasetObject.points.push(new this.PointClass({\n            value: dataPoint,\n            label: data.labels[index],\n            datasetLabel: dataset.label,\n            strokeColor: dataset.pointStrokeColor,\n            fillColor: dataset.pointColor,\n            highlightFill: dataset.pointHighlightFill || dataset.pointColor,\n            highlightStroke: dataset.pointHighlightStroke || dataset.pointStrokeColor\n          }));\n        }, this);\n        this.buildScale(data.labels);\n        this.eachPoints(function (point, index) {\n          helpers.extend(point, {\n            x: this.scale.calculateX(index),\n            y: this.scale.endPoint\n          });\n          point.save();\n        }, this);\n      }, this);\n      this.render();\n    },\n    update: function () {\n      this.scale.update(); // Reset any highlight colours before updating.\n\n      helpers.each(this.activeElements, function (activeElement) {\n        activeElement.restore(['fillColor', 'strokeColor']);\n      });\n      this.eachPoints(function (point) {\n        point.save();\n      });\n      this.render();\n    },\n    eachPoints: function (callback) {\n      helpers.each(this.datasets, function (dataset) {\n        helpers.each(dataset.points, callback, this);\n      }, this);\n    },\n    getPointsAtEvent: function (e) {\n      var pointsArray = [],\n          eventPosition = helpers.getRelativePosition(e);\n      helpers.each(this.datasets, function (dataset) {\n        helpers.each(dataset.points, function (point) {\n          if (point.inRange(eventPosition.x, eventPosition.y)) pointsArray.push(point);\n        });\n      }, this);\n      return pointsArray;\n    },\n    buildScale: function (labels) {\n      var self = this;\n\n      var dataTotal = function () {\n        var values = [];\n        self.eachPoints(function (point) {\n          values.push(point.value);\n        });\n        return values;\n      };\n\n      var scaleOptions = {\n        templateString: this.options.scaleLabel,\n        height: this.chart.height,\n        width: this.chart.width,\n        ctx: this.chart.ctx,\n        textColor: this.options.scaleFontColor,\n        offsetGridLines: this.options.offsetGridLines,\n        fontSize: this.options.scaleFontSize,\n        fontStyle: this.options.scaleFontStyle,\n        fontFamily: this.options.scaleFontFamily,\n        valuesCount: labels.length,\n        beginAtZero: this.options.scaleBeginAtZero,\n        integersOnly: this.options.scaleIntegersOnly,\n        calculateYRange: function (currentHeight) {\n          var updatedRanges = helpers.calculateScaleRange(dataTotal(), currentHeight, this.fontSize, this.beginAtZero, this.integersOnly);\n          helpers.extend(this, updatedRanges);\n        },\n        xLabels: labels,\n        font: helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n        lineWidth: this.options.scaleLineWidth,\n        lineColor: this.options.scaleLineColor,\n        showHorizontalLines: this.options.scaleShowHorizontalLines,\n        showVerticalLines: this.options.scaleShowVerticalLines,\n        gridLineWidth: this.options.scaleShowGridLines ? this.options.scaleGridLineWidth : 0,\n        gridLineColor: this.options.scaleShowGridLines ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n        padding: this.options.showScale ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,\n        showLabels: this.options.scaleShowLabels,\n        display: this.options.showScale\n      };\n\n      if (this.options.scaleOverride) {\n        helpers.extend(scaleOptions, {\n          calculateYRange: helpers.noop,\n          steps: this.options.scaleSteps,\n          stepValue: this.options.scaleStepWidth,\n          min: this.options.scaleStartValue,\n          max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth\n        });\n      }\n\n      this.scale = new Chart.Scale(scaleOptions);\n    },\n    addData: function (valuesArray, label) {\n      //Map the values array for each of the datasets\n      helpers.each(valuesArray, function (value, datasetIndex) {\n        //Add a new point for each piece of data, passing any required data to draw.\n        this.datasets[datasetIndex].points.push(new this.PointClass({\n          value: value,\n          label: label,\n          datasetLabel: this.datasets[datasetIndex].label,\n          x: this.scale.calculateX(this.scale.valuesCount + 1),\n          y: this.scale.endPoint,\n          strokeColor: this.datasets[datasetIndex].pointStrokeColor,\n          fillColor: this.datasets[datasetIndex].pointColor\n        }));\n      }, this);\n      this.scale.addXLabel(label); //Then re-render the chart.\n\n      this.update();\n    },\n    removeData: function () {\n      this.scale.removeXLabel(); //Then re-render the chart.\n\n      helpers.each(this.datasets, function (dataset) {\n        dataset.points.shift();\n      }, this);\n      this.update();\n    },\n    reflow: function () {\n      var newScaleProps = helpers.extend({\n        height: this.chart.height,\n        width: this.chart.width\n      });\n      this.scale.update(newScaleProps);\n    },\n    draw: function (ease) {\n      var easingDecimal = ease || 1;\n      this.clear();\n      var ctx = this.chart.ctx; // Some helper methods for getting the next/prev points\n\n      var hasValue = function (item) {\n        return item.value !== null;\n      },\n          nextPoint = function (point, collection, index) {\n        return helpers.findNextWhere(collection, hasValue, index) || point;\n      },\n          previousPoint = function (point, collection, index) {\n        return helpers.findPreviousWhere(collection, hasValue, index) || point;\n      };\n\n      if (!this.scale) return;\n      this.scale.draw(easingDecimal);\n      helpers.each(this.datasets, function (dataset) {\n        var pointsWithValues = helpers.where(dataset.points, hasValue); //Transition each point first so that the line and point drawing isn't out of sync\n        //We can use this extra loop to calculate the control points of this dataset also in this loop\n\n        helpers.each(dataset.points, function (point, index) {\n          if (point.hasValue()) {\n            point.transition({\n              y: this.scale.calculateY(point.value),\n              x: this.scale.calculateX(index)\n            }, easingDecimal);\n          }\n        }, this); // Control points need to be calculated in a separate loop, because we need to know the current x/y of the point\n        // This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n\n        if (this.options.bezierCurve) {\n          helpers.each(pointsWithValues, function (point, index) {\n            var tension = index > 0 && index < pointsWithValues.length - 1 ? this.options.bezierCurveTension : 0;\n            point.controlPoints = helpers.splineCurve(previousPoint(point, pointsWithValues, index), point, nextPoint(point, pointsWithValues, index), tension); // Prevent the bezier going outside of the bounds of the graph\n            // Cap puter bezier handles to the upper/lower scale bounds\n\n            if (point.controlPoints.outer.y > this.scale.endPoint) {\n              point.controlPoints.outer.y = this.scale.endPoint;\n            } else if (point.controlPoints.outer.y < this.scale.startPoint) {\n              point.controlPoints.outer.y = this.scale.startPoint;\n            } // Cap inner bezier handles to the upper/lower scale bounds\n\n\n            if (point.controlPoints.inner.y > this.scale.endPoint) {\n              point.controlPoints.inner.y = this.scale.endPoint;\n            } else if (point.controlPoints.inner.y < this.scale.startPoint) {\n              point.controlPoints.inner.y = this.scale.startPoint;\n            }\n          }, this);\n        } //Draw the line between all the points\n\n\n        ctx.lineWidth = this.options.datasetStrokeWidth;\n        ctx.strokeStyle = dataset.strokeColor;\n        ctx.beginPath();\n        helpers.each(pointsWithValues, function (point, index) {\n          if (index === 0) {\n            ctx.moveTo(point.x, point.y);\n          } else {\n            if (this.options.bezierCurve) {\n              var previous = previousPoint(point, pointsWithValues, index);\n              ctx.bezierCurveTo(previous.controlPoints.outer.x, previous.controlPoints.outer.y, point.controlPoints.inner.x, point.controlPoints.inner.y, point.x, point.y);\n            } else {\n              ctx.lineTo(point.x, point.y);\n            }\n          }\n        }, this);\n\n        if (this.options.datasetStroke) {\n          ctx.stroke();\n        }\n\n        if (this.options.datasetFill && pointsWithValues.length > 0) {\n          //Round off the line by going to the base of the chart, back to the start, then fill.\n          ctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n          ctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n          ctx.fillStyle = dataset.fillColor;\n          ctx.closePath();\n          ctx.fill();\n        } //Now draw the points over the line\n        //A little inefficient double looping, but better than the line\n        //lagging behind the point positions\n\n\n        helpers.each(pointsWithValues, function (point) {\n          point.draw();\n        });\n      }, this);\n    }\n  });\n}).call(this);\n(function () {\n  \"use strict\";\n\n  var root = this,\n      Chart = root.Chart,\n      //Cache a local reference to Chart.helpers\n  helpers = Chart.helpers;\n  var defaultConfig = {\n    //Boolean - Show a backdrop to the scale label\n    scaleShowLabelBackdrop: true,\n    //String - The colour of the label backdrop\n    scaleBackdropColor: \"rgba(255,255,255,0.75)\",\n    // Boolean - Whether the scale should begin at zero\n    scaleBeginAtZero: true,\n    //Number - The backdrop padding above & below the label in pixels\n    scaleBackdropPaddingY: 2,\n    //Number - The backdrop padding to the side of the label in pixels\n    scaleBackdropPaddingX: 2,\n    //Boolean - Show line for each value in the scale\n    scaleShowLine: true,\n    //Boolean - Stroke a line around each segment in the chart\n    segmentShowStroke: true,\n    //String - The colour of the stroke on each segment.\n    segmentStrokeColor: \"#fff\",\n    //Number - The width of the stroke value in pixels\n    segmentStrokeWidth: 2,\n    //Number - Amount of animation steps\n    animationSteps: 100,\n    //String - Animation easing effect.\n    animationEasing: \"easeOutBounce\",\n    //Boolean - Whether to animate the rotation of the chart\n    animateRotate: true,\n    //Boolean - Whether to animate scaling the chart from the centre\n    animateScale: false,\n    //String - A legend template\n    legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n  };\n  Chart.Type.extend({\n    //Passing in a name registers this chart in the Chart namespace\n    name: \"PolarArea\",\n    //Providing a defaults will also register the defaults in the chart namespace\n    defaults: defaultConfig,\n    //Initialize is fired when the chart is initialized - Data is passed in as a parameter\n    //Config is automatically merged by the core of Chart.js, and is available at this.options\n    initialize: function (data) {\n      this.segments = []; //Declare segment class as a chart instance specific class, so it can share props for this instance\n\n      this.SegmentArc = Chart.Arc.extend({\n        showStroke: this.options.segmentShowStroke,\n        strokeWidth: this.options.segmentStrokeWidth,\n        strokeColor: this.options.segmentStrokeColor,\n        ctx: this.chart.ctx,\n        innerRadius: 0,\n        x: this.chart.width / 2,\n        y: this.chart.height / 2\n      });\n      this.scale = new Chart.RadialScale({\n        display: this.options.showScale,\n        fontStyle: this.options.scaleFontStyle,\n        fontSize: this.options.scaleFontSize,\n        fontFamily: this.options.scaleFontFamily,\n        fontColor: this.options.scaleFontColor,\n        showLabels: this.options.scaleShowLabels,\n        showLabelBackdrop: this.options.scaleShowLabelBackdrop,\n        backdropColor: this.options.scaleBackdropColor,\n        backdropPaddingY: this.options.scaleBackdropPaddingY,\n        backdropPaddingX: this.options.scaleBackdropPaddingX,\n        lineWidth: this.options.scaleShowLine ? this.options.scaleLineWidth : 0,\n        lineColor: this.options.scaleLineColor,\n        lineArc: true,\n        width: this.chart.width,\n        height: this.chart.height,\n        xCenter: this.chart.width / 2,\n        yCenter: this.chart.height / 2,\n        ctx: this.chart.ctx,\n        templateString: this.options.scaleLabel,\n        valuesCount: data.length\n      });\n      this.updateScaleRange(data);\n      this.scale.update();\n      helpers.each(data, function (segment, index) {\n        this.addData(segment, index, true);\n      }, this); //Set up tooltip events on the chart\n\n      if (this.options.showTooltips) {\n        helpers.bindEvents(this, this.options.tooltipEvents, function (evt) {\n          var activeSegments = evt.type !== 'mouseout' ? this.getSegmentsAtEvent(evt) : [];\n          helpers.each(this.segments, function (segment) {\n            segment.restore([\"fillColor\"]);\n          });\n          helpers.each(activeSegments, function (activeSegment) {\n            activeSegment.fillColor = activeSegment.highlightColor;\n          });\n          this.showTooltip(activeSegments);\n        });\n      }\n\n      this.render();\n    },\n    getSegmentsAtEvent: function (e) {\n      var segmentsArray = [];\n      var location = helpers.getRelativePosition(e);\n      helpers.each(this.segments, function (segment) {\n        if (segment.inRange(location.x, location.y)) segmentsArray.push(segment);\n      }, this);\n      return segmentsArray;\n    },\n    addData: function (segment, atIndex, silent) {\n      var index = atIndex || this.segments.length;\n      this.segments.splice(index, 0, new this.SegmentArc({\n        fillColor: segment.color,\n        highlightColor: segment.highlight || segment.color,\n        label: segment.label,\n        value: segment.value,\n        outerRadius: this.options.animateScale ? 0 : this.scale.calculateCenterOffset(segment.value),\n        circumference: this.options.animateRotate ? 0 : this.scale.getCircumference(),\n        startAngle: Math.PI * 1.5\n      }));\n\n      if (!silent) {\n        this.reflow();\n        this.update();\n      }\n    },\n    removeData: function (atIndex) {\n      var indexToDelete = helpers.isNumber(atIndex) ? atIndex : this.segments.length - 1;\n      this.segments.splice(indexToDelete, 1);\n      this.reflow();\n      this.update();\n    },\n    calculateTotal: function (data) {\n      this.total = 0;\n      helpers.each(data, function (segment) {\n        this.total += segment.value;\n      }, this);\n      this.scale.valuesCount = this.segments.length;\n    },\n    updateScaleRange: function (datapoints) {\n      var valuesArray = [];\n      helpers.each(datapoints, function (segment) {\n        valuesArray.push(segment.value);\n      });\n      var scaleSizes = this.options.scaleOverride ? {\n        steps: this.options.scaleSteps,\n        stepValue: this.options.scaleStepWidth,\n        min: this.options.scaleStartValue,\n        max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth\n      } : helpers.calculateScaleRange(valuesArray, helpers.min([this.chart.width, this.chart.height]) / 2, this.options.scaleFontSize, this.options.scaleBeginAtZero, this.options.scaleIntegersOnly);\n      helpers.extend(this.scale, scaleSizes, {\n        size: helpers.min([this.chart.width, this.chart.height]),\n        xCenter: this.chart.width / 2,\n        yCenter: this.chart.height / 2\n      });\n    },\n    update: function () {\n      this.calculateTotal(this.segments);\n      helpers.each(this.segments, function (segment) {\n        segment.save();\n      });\n      this.reflow();\n      this.render();\n    },\n    reflow: function () {\n      helpers.extend(this.SegmentArc.prototype, {\n        x: this.chart.width / 2,\n        y: this.chart.height / 2\n      });\n      this.updateScaleRange(this.segments);\n      this.scale.update();\n      helpers.extend(this.scale, {\n        xCenter: this.chart.width / 2,\n        yCenter: this.chart.height / 2\n      });\n      helpers.each(this.segments, function (segment) {\n        segment.update({\n          outerRadius: this.scale.calculateCenterOffset(segment.value)\n        });\n      }, this);\n    },\n    draw: function (ease) {\n      var easingDecimal = ease || 1; //Clear & draw the canvas\n\n      this.clear();\n      helpers.each(this.segments, function (segment, index) {\n        segment.transition({\n          circumference: this.scale.getCircumference(),\n          outerRadius: this.scale.calculateCenterOffset(segment.value)\n        }, easingDecimal);\n        segment.endAngle = segment.startAngle + segment.circumference; // If we've removed the first segment we need to set the first one to\n        // start at the top.\n\n        if (index === 0) {\n          segment.startAngle = Math.PI * 1.5;\n        } //Check to see if it's the last segment, if not get the next and update the start angle\n\n\n        if (index < this.segments.length - 1) {\n          this.segments[index + 1].startAngle = segment.endAngle;\n        }\n\n        segment.draw();\n      }, this);\n      this.scale.draw();\n    }\n  });\n}).call(this);\n(function () {\n  \"use strict\";\n\n  var root = this,\n      Chart = root.Chart,\n      helpers = Chart.helpers;\n  Chart.Type.extend({\n    name: \"Radar\",\n    defaults: {\n      //Boolean - Whether to show lines for each scale point\n      scaleShowLine: true,\n      //Boolean - Whether we show the angle lines out of the radar\n      angleShowLineOut: true,\n      //Boolean - Whether to show labels on the scale\n      scaleShowLabels: false,\n      // Boolean - Whether the scale should begin at zero\n      scaleBeginAtZero: true,\n      //String - Colour of the angle line\n      angleLineColor: \"rgba(0,0,0,.1)\",\n      //Number - Pixel width of the angle line\n      angleLineWidth: 1,\n      //Number - Interval at which to draw angle lines (\"every Nth point\")\n      angleLineInterval: 1,\n      //String - Point label font declaration\n      pointLabelFontFamily: \"'Arial'\",\n      //String - Point label font weight\n      pointLabelFontStyle: \"normal\",\n      //Number - Point label font size in pixels\n      pointLabelFontSize: 10,\n      //String - Point label font colour\n      pointLabelFontColor: \"#666\",\n      //Boolean - Whether to show a dot for each point\n      pointDot: true,\n      //Number - Radius of each point dot in pixels\n      pointDotRadius: 3,\n      //Number - Pixel width of point dot stroke\n      pointDotStrokeWidth: 1,\n      //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n      pointHitDetectionRadius: 20,\n      //Boolean - Whether to show a stroke for datasets\n      datasetStroke: true,\n      //Number - Pixel width of dataset stroke\n      datasetStrokeWidth: 2,\n      //Boolean - Whether to fill the dataset with a colour\n      datasetFill: true,\n      //String - A legend template\n      legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\"\n    },\n    initialize: function (data) {\n      this.PointClass = Chart.Point.extend({\n        strokeWidth: this.options.pointDotStrokeWidth,\n        radius: this.options.pointDotRadius,\n        display: this.options.pointDot,\n        hitDetectionRadius: this.options.pointHitDetectionRadius,\n        ctx: this.chart.ctx\n      });\n      this.datasets = [];\n      this.buildScale(data); //Set up tooltip events on the chart\n\n      if (this.options.showTooltips) {\n        helpers.bindEvents(this, this.options.tooltipEvents, function (evt) {\n          var activePointsCollection = evt.type !== 'mouseout' ? this.getPointsAtEvent(evt) : [];\n          this.eachPoints(function (point) {\n            point.restore(['fillColor', 'strokeColor']);\n          });\n          helpers.each(activePointsCollection, function (activePoint) {\n            activePoint.fillColor = activePoint.highlightFill;\n            activePoint.strokeColor = activePoint.highlightStroke;\n          });\n          this.showTooltip(activePointsCollection);\n        });\n      } //Iterate through each of the datasets, and build this into a property of the chart\n\n\n      helpers.each(data.datasets, function (dataset) {\n        var datasetObject = {\n          label: dataset.label || null,\n          fillColor: dataset.fillColor,\n          strokeColor: dataset.strokeColor,\n          pointColor: dataset.pointColor,\n          pointStrokeColor: dataset.pointStrokeColor,\n          points: []\n        };\n        this.datasets.push(datasetObject);\n        helpers.each(dataset.data, function (dataPoint, index) {\n          //Add a new point for each piece of data, passing any required data to draw.\n          var pointPosition;\n\n          if (!this.scale.animation) {\n            pointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n          }\n\n          datasetObject.points.push(new this.PointClass({\n            value: dataPoint,\n            label: data.labels[index],\n            datasetLabel: dataset.label,\n            x: this.options.animation ? this.scale.xCenter : pointPosition.x,\n            y: this.options.animation ? this.scale.yCenter : pointPosition.y,\n            strokeColor: dataset.pointStrokeColor,\n            fillColor: dataset.pointColor,\n            highlightFill: dataset.pointHighlightFill || dataset.pointColor,\n            highlightStroke: dataset.pointHighlightStroke || dataset.pointStrokeColor\n          }));\n        }, this);\n      }, this);\n      this.render();\n    },\n    eachPoints: function (callback) {\n      helpers.each(this.datasets, function (dataset) {\n        helpers.each(dataset.points, callback, this);\n      }, this);\n    },\n    getPointsAtEvent: function (evt) {\n      var mousePosition = helpers.getRelativePosition(evt),\n          fromCenter = helpers.getAngleFromPoint({\n        x: this.scale.xCenter,\n        y: this.scale.yCenter\n      }, mousePosition);\n      var anglePerIndex = Math.PI * 2 / this.scale.valuesCount,\n          pointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n          activePointsCollection = []; // If we're at the top, make the pointIndex 0 to get the first of the array.\n\n      if (pointIndex >= this.scale.valuesCount || pointIndex < 0) {\n        pointIndex = 0;\n      }\n\n      if (fromCenter.distance <= this.scale.drawingArea) {\n        helpers.each(this.datasets, function (dataset) {\n          activePointsCollection.push(dataset.points[pointIndex]);\n        });\n      }\n\n      return activePointsCollection;\n    },\n    buildScale: function (data) {\n      this.scale = new Chart.RadialScale({\n        display: this.options.showScale,\n        fontStyle: this.options.scaleFontStyle,\n        fontSize: this.options.scaleFontSize,\n        fontFamily: this.options.scaleFontFamily,\n        fontColor: this.options.scaleFontColor,\n        showLabels: this.options.scaleShowLabels,\n        showLabelBackdrop: this.options.scaleShowLabelBackdrop,\n        backdropColor: this.options.scaleBackdropColor,\n        backgroundColors: this.options.scaleBackgroundColors,\n        backdropPaddingY: this.options.scaleBackdropPaddingY,\n        backdropPaddingX: this.options.scaleBackdropPaddingX,\n        lineWidth: this.options.scaleShowLine ? this.options.scaleLineWidth : 0,\n        lineColor: this.options.scaleLineColor,\n        angleLineColor: this.options.angleLineColor,\n        angleLineWidth: this.options.angleShowLineOut ? this.options.angleLineWidth : 0,\n        angleLineInterval: this.options.angleLineInterval ? this.options.angleLineInterval : 1,\n        // Point labels at the edge of each line\n        pointLabelFontColor: this.options.pointLabelFontColor,\n        pointLabelFontSize: this.options.pointLabelFontSize,\n        pointLabelFontFamily: this.options.pointLabelFontFamily,\n        pointLabelFontStyle: this.options.pointLabelFontStyle,\n        height: this.chart.height,\n        width: this.chart.width,\n        xCenter: this.chart.width / 2,\n        yCenter: this.chart.height / 2,\n        ctx: this.chart.ctx,\n        templateString: this.options.scaleLabel,\n        labels: data.labels,\n        valuesCount: data.datasets[0].data.length\n      });\n      this.scale.setScaleSize();\n      this.updateScaleRange(data.datasets);\n      this.scale.buildYLabels();\n    },\n    updateScaleRange: function (datasets) {\n      var valuesArray = function () {\n        var totalDataArray = [];\n        helpers.each(datasets, function (dataset) {\n          if (dataset.data) {\n            totalDataArray = totalDataArray.concat(dataset.data);\n          } else {\n            helpers.each(dataset.points, function (point) {\n              totalDataArray.push(point.value);\n            });\n          }\n        });\n        return totalDataArray;\n      }();\n\n      var scaleSizes = this.options.scaleOverride ? {\n        steps: this.options.scaleSteps,\n        stepValue: this.options.scaleStepWidth,\n        min: this.options.scaleStartValue,\n        max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth\n      } : helpers.calculateScaleRange(valuesArray, helpers.min([this.chart.width, this.chart.height]) / 2, this.options.scaleFontSize, this.options.scaleBeginAtZero, this.options.scaleIntegersOnly);\n      helpers.extend(this.scale, scaleSizes);\n    },\n    addData: function (valuesArray, label) {\n      //Map the values array for each of the datasets\n      this.scale.valuesCount++;\n      helpers.each(valuesArray, function (value, datasetIndex) {\n        var pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n        this.datasets[datasetIndex].points.push(new this.PointClass({\n          value: value,\n          label: label,\n          datasetLabel: this.datasets[datasetIndex].label,\n          x: pointPosition.x,\n          y: pointPosition.y,\n          strokeColor: this.datasets[datasetIndex].pointStrokeColor,\n          fillColor: this.datasets[datasetIndex].pointColor\n        }));\n      }, this);\n      this.scale.labels.push(label);\n      this.reflow();\n      this.update();\n    },\n    removeData: function () {\n      this.scale.valuesCount--;\n      this.scale.labels.shift();\n      helpers.each(this.datasets, function (dataset) {\n        dataset.points.shift();\n      }, this);\n      this.reflow();\n      this.update();\n    },\n    update: function () {\n      this.eachPoints(function (point) {\n        point.save();\n      });\n      this.reflow();\n      this.render();\n    },\n    reflow: function () {\n      helpers.extend(this.scale, {\n        width: this.chart.width,\n        height: this.chart.height,\n        size: helpers.min([this.chart.width, this.chart.height]),\n        xCenter: this.chart.width / 2,\n        yCenter: this.chart.height / 2\n      });\n      this.updateScaleRange(this.datasets);\n      this.scale.setScaleSize();\n      this.scale.buildYLabels();\n    },\n    draw: function (ease) {\n      var easeDecimal = ease || 1,\n          ctx = this.chart.ctx;\n      this.clear();\n      this.scale.draw();\n      helpers.each(this.datasets, function (dataset) {\n        //Transition each point first so that the line and point drawing isn't out of sync\n        helpers.each(dataset.points, function (point, index) {\n          if (point.hasValue()) {\n            point.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n          }\n        }, this); //Draw the line between all the points\n\n        ctx.lineWidth = this.options.datasetStrokeWidth;\n        ctx.strokeStyle = dataset.strokeColor;\n        ctx.beginPath();\n        helpers.each(dataset.points, function (point, index) {\n          if (index === 0) {\n            ctx.moveTo(point.x, point.y);\n          } else {\n            ctx.lineTo(point.x, point.y);\n          }\n        }, this);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fillStyle = dataset.fillColor;\n\n        if (this.options.datasetFill) {\n          ctx.fill();\n        } //Now draw the points over the line\n        //A little inefficient double looping, but better than the line\n        //lagging behind the point positions\n\n\n        helpers.each(dataset.points, function (point) {\n          if (point.hasValue()) {\n            point.draw();\n          }\n        });\n      }, this);\n    }\n  });\n}).call(this);","map":{"version":3,"sources":["/Users/Arif/Desktop/Bug tracker/frontend/node_modules/chart.js/Chart.js"],"names":["root","previous","Chart","context","chart","canvas","ctx","computeDimension","element","dimension","document","defaultView","getComputedStyle","getPropertyValue","width","height","aspectRatio","helpers","retinaScale","defaults","global","animation","animationSteps","animationEasing","showScale","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","scaleLineColor","scaleLineWidth","scaleShowLabels","scaleLabel","scaleIntegersOnly","scaleBeginAtZero","scaleFontFamily","scaleFontSize","scaleFontStyle","scaleFontColor","responsive","maintainAspectRatio","showTooltips","customTooltips","tooltipEvents","tooltipFillColor","tooltipFontFamily","tooltipFontSize","tooltipFontStyle","tooltipFontColor","tooltipTitleFontFamily","tooltipTitleFontSize","tooltipTitleFontStyle","tooltipTitleFontColor","tooltipTitleTemplate","tooltipYPadding","tooltipXPadding","tooltipCaretSize","tooltipCornerRadius","tooltipXOffset","tooltipTemplate","multiTooltipTemplate","multiTooltipKeyBackground","segmentColorDefault","segmentHighlightColorDefaults","onAnimationProgress","onAnimationComplete","types","each","loopable","callback","self","additionalArgs","Array","prototype","slice","call","arguments","length","i","apply","concat","item","clone","obj","objClone","value","key","hasOwnProperty","extend","base","extensionObject","merge","master","args","unshift","indexOf","arrayToSearch","where","collection","filterCallback","filtered","push","findNextWhere","startIndex","currentItem","findPreviousWhere","inherits","extensions","parent","ChartElement","constructor","Surrogate","__super__","noop","uid","id","warn","str","window","console","amd","define","isNumber","n","isNaN","parseFloat","isFinite","max","array","Math","min","cap","valueToCap","maxValue","minValue","getDecimalPlaces","num","s","toString","split","parseInt","parts","toRadians","radians","degrees","PI","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","x","distanceFromYCenter","y","radialDistanceFromCenter","sqrt","angle","atan2","distance","aliasPixel","pixelWidth","splineCurve","FirstPoint","MiddlePoint","AfterPoint","t","d01","pow","d12","fa","fb","inner","outer","calculateOrderOfMagnitude","val","floor","log","LN10","calculateScaleRange","valuesArray","drawingSize","textSize","startFromZero","integersOnly","minSteps","maxSteps","skipFitting","values","v","valueRange","abs","rangeOrderOfMagnitude","graphMax","ceil","graphMin","graphRange","stepValue","numberOfSteps","round","steps","template","templateString","valuesObject","Function","cache","tmpl","data","fn","test","replace","join","generateLabels","labelsArray","index","easingEffects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","p","a","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","animationLoop","totalSteps","easingString","onProgress","onComplete","chartInstance","currentStep","easingFunction","animationFrame","stepDecimal","easeDecimal","getRelativePosition","evt","mouseX","mouseY","e","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","left","clientY","top","addEvent","node","eventType","method","addEventListener","attachEvent","removeEvent","handler","removeEventListener","detachEvent","bindEvents","arrayOfEvents","events","eventName","unbindEvents","getMaximumWidth","domNode","container","parentNode","padding","getStyle","clientWidth","getMaximumHeight","clientHeight","el","property","currentStyle","getMaximumSize","devicePixelRatio","style","scale","clear","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfStrings","longest","string","textWidth","measureText","drawRoundedRectangle","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","instances","Type","options","resize","initialize","stop","animationService","cancelAnimation","newWidth","newHeight","reflow","render","Animation","numSteps","easing","animationObject","draw","addAnimation","generateLegend","legendTemplate","destroy","removeProperty","removeAttribute","showTooltip","ChartElements","forceRedraw","activeElements","isChanged","Elements","changed","datasets","dataArray","dataIndex","points","bars","segments","tooltipLabels","tooltipColors","medianPosition","dataCollection","xPositions","yPositions","xMax","yMax","xMin","yMin","dataset","hasValue","fill","_saved","fillColor","stroke","strokeColor","MultiTooltip","xPadding","yPadding","xOffset","textColor","fontSize","titleTextColor","titleFontFamily","titleFontStyle","titleFontSize","cornerRadius","labels","legendColors","legendColorBackground","title","custom","Element","tooltipPosition","Tooltip","caretHeight","text","toBase64Image","toDataURL","ChartType","name","chartName","baseDefaults","config","configuration","save","restore","props","update","newProps","transition","ease","Point","display","inRange","chartX","chartY","hitDetectionRange","hitDetectionRadius","arc","strokeStyle","lineWidth","strokeWidth","fillStyle","Arc","pointRelativePosition","pointRelativeAngle","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","centreAngle","rangeFromCentre","animationPercent","easingDecimal","lineJoin","showStroke","Rectangle","halfWidth","leftX","rightX","halfStroke","xAlign","yAlign","caretPadding","tooltipWidth","tooltipRectHeight","tooltipHeight","tooltipX","tooltipY","textAlign","textBaseline","fillText","titleFont","titleHeight","titleWidth","labelWidth","longestTextWidth","halfHeight","getLineHeight","baseLineHeight","afterTitleIndex","label","fillRect","Scale","fit","buildYLabels","yLabels","stepDecimalPlaces","toFixed","yLabelWidth","showLabels","addXLabel","xLabels","valuesCount","removeXLabel","shift","startPoint","endPoint","cachedEndPoint","cachedHeight","cachedYLabelWidth","calculateYRange","calculateXLabelRotation","firstWidth","lastWidth","firstRotated","lastRotated","xScalePaddingRight","xScalePaddingLeft","xLabelRotation","originalLabelWidth","cosRotation","firstRotatedWidth","xLabelWidth","xGridWidth","calculateX","drawingArea","calculateY","scalingFactor","isRotated","innerWidth","valueWidth","offsetGridLines","valueOffset","yLabelGap","xStart","labelString","yLabelCenter","linePositionY","drawHorizontalLine","showHorizontalLines","gridLineWidth","gridLineColor","lineColor","xPos","linePos","drawVerticalLine","showVerticalLines","translate","rotate","RadialScale","size","backdropPaddingY","calculateCenterOffset","lineArc","setScaleSize","getCircumference","largestPossibleRadius","pointLabelFontSize","pointPosition","halfTextWidth","furthestRight","furthestRightIndex","furthestRightAngle","furthestLeft","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","maxWidthRadius","pointLabelFontStyle","pointLabelFontFamily","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","xCenter","yCenter","angleMultiplier","distanceFromCenter","thisAngle","yCenterOffset","yHeight","showLabelBackdrop","backdropColor","backdropPaddingX","fontColor","angleLineWidth","angleLineColor","centerOffset","outerPosition","angleLineInterval","backgroundColors","previousOuterPosition","nextOuterPosition","previousOuterHalfway","nextOuterHalfway","pointLabelPosition","pointLabelFontColor","labelsCount","halfLabelsCount","quarterLabelsCount","upperHalf","exactQuarter","frameDuration","animations","dropFrames","digestWrapper","animationWrapper","splice","startDigest","startTime","Date","now","framesToDrop","endTime","delay","frameDelay","timeout","instance","module","exports","noConflict","defaultConfig","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","barShowStroke","barStrokeWidth","barValueSpacing","barDatasetSpacing","ScaleClass","calculateBarX","datasetCount","datasetIndex","barIndex","xWidth","calculateBaseWidth","xAbsolute","barWidth","calculateBarWidth","baseWidth","activeBars","type","getBarsAtEvent","eachBars","bar","activeBar","highlightFill","highlightStroke","BarClass","datasetObject","dataPoint","datasetLabel","buildScale","activeElement","barsArray","eventPosition","datasetIterator","dataTotal","scaleOptions","beginAtZero","currentHeight","updatedRanges","addData","removeData","newScaleProps","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","percentageInnerCutout","animateRotate","animateScale","SegmentArc","activeSegments","getSegmentsAtEvent","segment","activeSegment","highlightColor","calculateTotal","datapoint","color","segmentsArray","location","atIndex","silent","undefined","highlight","circumference","calculateCircumference","total","indexToDelete","animDecimal","Doughnut","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","PointClass","activePoints","getPointsAtEvent","eachPoints","point","activePoint","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","pointsArray","nextPoint","previousPoint","pointsWithValues","tension","controlPoints","bezierCurveTo","scaleShowLabelBackdrop","scaleBackdropColor","scaleBackdropPaddingY","scaleBackdropPaddingX","scaleShowLine","updateScaleRange","datapoints","scaleSizes","angleShowLineOut","activePointsCollection","mousePosition","fromCenter","anglePerIndex","pointIndex","scaleBackgroundColors","totalDataArray"],"mappings":"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","sourcesContent":["/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 1.1.1\n *\n * Copyright 2015 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\n\n\n(function(){\n\n\t\"use strict\";\n\n\t//Declare root variable - window in the browser, global on the server\n\tvar root = this,\n\t\tprevious = root.Chart;\n\n\t//Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(context){\n\t\tvar chart = this;\n\t\tthis.canvas = context.canvas;\n\n\t\tthis.ctx = context;\n\n\t\t//Variables global to the chart\n\t\tvar computeDimension = function(element,dimension)\n\t\t{\n\t\t\tif (element['offset'+dimension])\n\t\t\t{\n\t\t\t\treturn element['offset'+dimension];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn document.defaultView.getComputedStyle(element).getPropertyValue(dimension);\n\t\t\t}\n\t\t};\n\n\t\tvar width = this.width = computeDimension(context.canvas,'Width') || context.canvas.width;\n\t\tvar height = this.height = computeDimension(context.canvas,'Height') || context.canvas.height;\n\n\t\tthis.aspectRatio = this.width / this.height;\n\t\t//High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n\t\thelpers.retinaScale(this);\n\n\t\treturn this;\n\t};\n\t//Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\t// Boolean - Whether to animate the chart\n\t\t\tanimation: true,\n\n\t\t\t// Number - Number of animation steps\n\t\t\tanimationSteps: 60,\n\n\t\t\t// String - Animation easing effect\n\t\t\tanimationEasing: \"easeOutQuart\",\n\n\t\t\t// Boolean - If we should show the scale at all\n\t\t\tshowScale: true,\n\n\t\t\t// Boolean - If we want to override with a hard coded scale\n\t\t\tscaleOverride: false,\n\n\t\t\t// ** Required if scaleOverride is true **\n\t\t\t// Number - The number of steps in a hard coded scale\n\t\t\tscaleSteps: null,\n\t\t\t// Number - The value jump in the hard coded scale\n\t\t\tscaleStepWidth: null,\n\t\t\t// Number - The scale starting value\n\t\t\tscaleStartValue: null,\n\n\t\t\t// String - Colour of the scale line\n\t\t\tscaleLineColor: \"rgba(0,0,0,.1)\",\n\n\t\t\t// Number - Pixel width of the scale line\n\t\t\tscaleLineWidth: 1,\n\n\t\t\t// Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels: true,\n\n\t\t\t// Interpolated JS string - can access value\n\t\t\tscaleLabel: \"<%=value%>\",\n\n\t\t\t// Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n\t\t\tscaleIntegersOnly: true,\n\n\t\t\t// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\t\tscaleBeginAtZero: false,\n\n\t\t\t// String - Scale label font declaration for the scale label\n\t\t\tscaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Scale label font size in pixels\n\t\t\tscaleFontSize: 12,\n\n\t\t\t// String - Scale label font weight style\n\t\t\tscaleFontStyle: \"normal\",\n\n\t\t\t// String - Scale label font colour\n\t\t\tscaleFontColor: \"#666\",\n\n\t\t\t// Boolean - whether or not the chart should be responsive and resize when the browser does.\n\t\t\tresponsive: false,\n\n\t\t\t// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n\t\t\tmaintainAspectRatio: true,\n\n\t\t\t// Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n\t\t\tshowTooltips: true,\n\n\t\t\t// Boolean - Determines whether to draw built-in tooltip or call custom tooltip function\n\t\t\tcustomTooltips: false,\n\n\t\t\t// Array - Array of string names to attach tooltip events\n\t\t\ttooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n\n\t\t\t// String - Tooltip background colour\n\t\t\ttooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n\t\t\t// String - Tooltip label font declaration for the scale label\n\t\t\ttooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip label font size in pixels\n\t\t\ttooltipFontSize: 14,\n\n\t\t\t// String - Tooltip font weight style\n\t\t\ttooltipFontStyle: \"normal\",\n\n\t\t\t// String - Tooltip label font colour\n\t\t\ttooltipFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title font declaration for the scale label\n\t\t\ttooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip title font size in pixels\n\t\t\ttooltipTitleFontSize: 14,\n\n\t\t\t// String - Tooltip title font weight style\n\t\t\ttooltipTitleFontStyle: \"bold\",\n\n\t\t\t// String - Tooltip title font colour\n\t\t\ttooltipTitleFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title template\n\t\t\ttooltipTitleTemplate: \"<%= label%>\",\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipYPadding: 6,\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipXPadding: 6,\n\n\t\t\t// Number - Size of the caret on the tooltip\n\t\t\ttooltipCaretSize: 8,\n\n\t\t\t// Number - Pixel radius of the tooltip border\n\t\t\ttooltipCornerRadius: 6,\n\n\t\t\t// Number - Pixel offset from point x to tooltip edge\n\t\t\ttooltipXOffset: 10,\n\n\t\t\t// String - Template string for single tooltips\n\t\t\ttooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n\n\t\t\t// String - Template string for single tooltips\n\t\t\tmultiTooltipTemplate: \"<%= datasetLabel %>: <%= value %>\",\n\n\t\t\t// String - Colour behind the legend colour block\n\t\t\tmultiTooltipKeyBackground: '#fff',\n\n\t\t\t// Array - A list of colors to use as the defaults\n\t\t\tsegmentColorDefault: [\"#A6CEE3\", \"#1F78B4\", \"#B2DF8A\", \"#33A02C\", \"#FB9A99\", \"#E31A1C\", \"#FDBF6F\", \"#FF7F00\", \"#CAB2D6\", \"#6A3D9A\", \"#B4B482\", \"#B15928\" ],\n\n\t\t\t// Array - A list of highlight colors to use as the defaults\n\t\t\tsegmentHighlightColorDefaults: [ \"#CEF6FF\", \"#47A0DC\", \"#DAFFB2\", \"#5BC854\", \"#FFC2C1\", \"#FF4244\", \"#FFE797\", \"#FFA728\", \"#F2DAFE\", \"#9265C2\", \"#DCDCAA\", \"#D98150\" ],\n\n\t\t\t// Function - Will fire on animation progression.\n\t\t\tonAnimationProgress: function(){},\n\n\t\t\t// Function - Will fire on animation completion.\n\t\t\tonAnimationComplete: function(){}\n\n\t\t}\n\t};\n\n\t//Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t//Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t\t//-- Basic js utility methods\n\tvar each = helpers.each = function(loopable,callback,self){\n\t\t\tvar additionalArgs = Array.prototype.slice.call(arguments, 3);\n\t\t\t// Check to see if null or undefined firstly.\n\t\t\tif (loopable){\n\t\t\t\tif (loopable.length === +loopable.length){\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i=0; i<loopable.length; i++){\n\t\t\t\t\t\tcallback.apply(self,[loopable[i], i].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor (var item in loopable){\n\t\t\t\t\t\tcallback.apply(self,[loopable[item],item].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tclone = helpers.clone = function(obj){\n\t\t\tvar objClone = {};\n\t\t\teach(obj,function(value,key){\n\t\t\t\tif (obj.hasOwnProperty(key)){\n\t\t\t\t\tobjClone[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn objClone;\n\t\t},\n\t\textend = helpers.extend = function(base){\n\t\t\teach(Array.prototype.slice.call(arguments,1), function(extensionObject) {\n\t\t\t\teach(extensionObject,function(value,key){\n\t\t\t\t\tif (extensionObject.hasOwnProperty(key)){\n\t\t\t\t\t\tbase[key] = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn base;\n\t\t},\n\t\tmerge = helpers.merge = function(base,master){\n\t\t\t//Merge properties in left object over to a shallow clone of object right.\n\t\t\tvar args = Array.prototype.slice.call(arguments,0);\n\t\t\targs.unshift({});\n\t\t\treturn extend.apply(null, args);\n\t\t},\n\t\tindexOf = helpers.indexOf = function(arrayToSearch, item){\n\t\t\tif (Array.prototype.indexOf) {\n\t\t\t\treturn arrayToSearch.indexOf(item);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\n\t\t\t\t\tif (arrayToSearch[i] === item) return i;\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t},\n\t\twhere = helpers.where = function(collection, filterCallback){\n\t\t\tvar filtered = [];\n\n\t\t\thelpers.each(collection, function(item){\n\t\t\t\tif (filterCallback(item)){\n\t\t\t\t\tfiltered.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn filtered;\n\t\t},\n\t\tfindNextWhere = helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to start of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = -1;\n\t\t\t}\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfindPreviousWhere = helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to end of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = arrayToSearch.length;\n\t\t\t}\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinherits = helpers.inherits = function(extensions){\n\t\t\t//Basic javascript inheritance based on the model created in Backbone.js\n\t\t\tvar parent = this;\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function(){ return parent.apply(this, arguments); };\n\n\t\t\tvar Surrogate = function(){ this.constructor = ChartElement;};\n\t\t\tSurrogate.prototype = parent.prototype;\n\t\t\tChartElement.prototype = new Surrogate();\n\n\t\t\tChartElement.extend = inherits;\n\n\t\t\tif (extensions) extend(ChartElement.prototype, extensions);\n\n\t\t\tChartElement.__super__ = parent.prototype;\n\n\t\t\treturn ChartElement;\n\t\t},\n\t\tnoop = helpers.noop = function(){},\n\t\tuid = helpers.uid = (function(){\n\t\t\tvar id=0;\n\t\t\treturn function(){\n\t\t\t\treturn \"chart-\" + id++;\n\t\t\t};\n\t\t})(),\n\t\twarn = helpers.warn = function(str){\n\t\t\t//Method for warning of errors\n\t\t\tif (window.console && typeof window.console.warn === \"function\") console.warn(str);\n\t\t},\n\t\tamd = helpers.amd = (typeof define === 'function' && define.amd),\n\t\t//-- Math methods\n\t\tisNumber = helpers.isNumber = function(n){\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\t\tmax = helpers.max = function(array){\n\t\t\treturn Math.max.apply( Math, array );\n\t\t},\n\t\tmin = helpers.min = function(array){\n\t\t\treturn Math.min.apply( Math, array );\n\t\t},\n\t\tcap = helpers.cap = function(valueToCap,maxValue,minValue){\n\t\t\tif(isNumber(maxValue)) {\n\t\t\t\tif( valueToCap > maxValue ) {\n\t\t\t\t\treturn maxValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(isNumber(minValue)){\n\t\t\t\tif ( valueToCap < minValue ){\n\t\t\t\t\treturn minValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn valueToCap;\n\t\t},\n\t\tgetDecimalPlaces = helpers.getDecimalPlaces = function(num){\n\t\t\tif (num%1!==0 && isNumber(num)){\n\t\t\t\tvar s = num.toString();\n\t\t\t\tif(s.indexOf(\"e-\") < 0){\n\t\t\t\t\t// no exponent, e.g. 0.01\n\t\t\t\t\treturn s.split(\".\")[1].length;\n\t\t\t\t}\n\t\t\t\telse if(s.indexOf(\".\") < 0) {\n\t\t\t\t\t// no decimal point, e.g. 1e-9\n\t\t\t\t\treturn parseInt(s.split(\"e-\")[1]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// exponent and decimal point, e.g. 1.23e-9\n\t\t\t\t\tvar parts = s.split(\".\")[1].split(\"e-\");\n\t\t\t\t\treturn parts[0].length + parseInt(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\ttoRadians = helpers.radians = function(degrees){\n\t\t\treturn degrees * (Math.PI/180);\n\t\t},\n\t\t// Gets the angle from vertical upright to the point about a centre.\n\t\tgetAngleFromPoint = helpers.getAngleFromPoint = function(centrePoint, anglePoint){\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\t\tradialDistanceFromCenter = Math.sqrt( distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\n\t\t\tvar angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\t\t//If the segment is in the top left quadrant, we need to add another rotation to the angle\n\t\t\tif (distanceFromXCenter < 0 && distanceFromYCenter < 0){\n\t\t\t\tangle += Math.PI*2;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tangle: angle,\n\t\t\t\tdistance: radialDistanceFromCenter\n\t\t\t};\n\t\t},\n\t\taliasPixel = helpers.aliasPixel = function(pixelWidth){\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t\t},\n\t\tsplineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n\t\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\t\t\tvar d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n\t\t\t\td12=Math.sqrt(Math.pow(AfterPoint.x-MiddlePoint.x,2)+Math.pow(AfterPoint.y-MiddlePoint.y,2)),\n\t\t\t\tfa=t*d01/(d01+d12),// scaling factor for triangle Ta\n\t\t\t\tfb=t*d12/(d01+d12);\n\t\t\treturn {\n\t\t\t\tinner : {\n\t\t\t\t\tx : MiddlePoint.x-fa*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y-fa*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t},\n\t\t\t\touter : {\n\t\t\t\t\tx: MiddlePoint.x+fb*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y+fb*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcalculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function(val){\n\t\t\treturn Math.floor(Math.log(val) / Math.LN10);\n\t\t},\n\t\tcalculateScaleRange = helpers.calculateScaleRange = function(valuesArray, drawingSize, textSize, startFromZero, integersOnly){\n\n\t\t\t//Set a minimum step of two - a point at the top of the graph, and a point at the base\n\t\t\tvar minSteps = 2,\n\t\t\t\tmaxSteps = Math.floor(drawingSize/(textSize * 1.5)),\n\t\t\t\tskipFitting = (minSteps >= maxSteps);\n\n\t\t\t// Filter out null values since these would min() to zero\n\t\t\tvar values = [];\n\t\t\teach(valuesArray, function( v ){\n\t\t\t\tv == null || values.push( v );\n\t\t\t});\n\t\t\tvar minValue = min(values),\n\t\t\t    maxValue = max(values);\n\n\t\t\t// We need some degree of separation here to calculate the scales if all the values are the same\n\t\t\t// Adding/minusing 0.5 will give us a range of 1.\n\t\t\tif (maxValue === minValue){\n\t\t\t\tmaxValue += 0.5;\n\t\t\t\t// So we don't end up with a graph with a negative start value if we've said always start from zero\n\t\t\t\tif (minValue >= 0.5 && !startFromZero){\n\t\t\t\t\tminValue -= 0.5;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// Make up a whole number above the values\n\t\t\t\t\tmaxValue += 0.5;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar\tvalueRange = Math.abs(maxValue - minValue),\n\t\t\t\trangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n\t\t\t\tgraphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphMin = (startFromZero) ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphRange = graphMax - graphMin,\n\t\t\t\tstepValue = Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tnumberOfSteps = Math.round(graphRange / stepValue);\n\n\t\t\t//If we have more space on the graph we'll use it to give more definition to the data\n\t\t\twhile((numberOfSteps > maxSteps || (numberOfSteps * 2) < maxSteps) && !skipFitting) {\n\t\t\t\tif(numberOfSteps > maxSteps){\n\t\t\t\t\tstepValue *=2;\n\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t// Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n\t\t\t\t\tif (numberOfSteps % 1 !== 0){\n\t\t\t\t\t\tskipFitting = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//We can fit in double the amount of scale points on the scale\n\t\t\t\telse{\n\t\t\t\t\t//If user has declared ints only, and the step value isn't a decimal\n\t\t\t\t\tif (integersOnly && rangeOrderOfMagnitude >= 0){\n\t\t\t\t\t\t//If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n\t\t\t\t\t\tif(stepValue/2 % 1 === 0){\n\t\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//If it would make it a float break out of the loop\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//If the scale doesn't have to be an int, make the scale more granular anyway.\n\t\t\t\t\telse{\n\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skipFitting){\n\t\t\t\tnumberOfSteps = minSteps;\n\t\t\t\tstepValue = graphRange / numberOfSteps;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsteps : numberOfSteps,\n\t\t\t\tstepValue : stepValue,\n\t\t\t\tmin : graphMin,\n\t\t\t\tmax\t: graphMin + (numberOfSteps * stepValue)\n\t\t\t};\n\n\t\t},\n\t\t/* jshint ignore:start */\n\t\t// Blows up jshint errors based on the new Function constructor\n\t\t//Templating methods\n\t\t//Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n\t\ttemplate = helpers.template = function(templateString, valuesObject){\n\n\t\t\t// If templateString is function rather than string-template - call the function for valuesObject\n\n\t\t\tif(templateString instanceof Function){\n\t\t\t \treturn templateString(valuesObject);\n\t\t \t}\n\n\t\t\tvar cache = {};\n\t\t\tfunction tmpl(str, data){\n\t\t\t\t// Figure out if we're getting a template, or if we need to\n\t\t\t\t// load the template - and be sure to cache the result.\n\t\t\t\tvar fn = !/\\W/.test(str) ?\n\t\t\t\tcache[str] = cache[str] :\n\n\t\t\t\t// Generate a reusable function that will serve as a template\n\t\t\t\t// generator (and which will be cached).\n\t\t\t\tnew Function(\"obj\",\n\t\t\t\t\t\"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n\t\t\t\t\t// Introduce the data as local variables using with(){}\n\t\t\t\t\t\"with(obj){p.push('\" +\n\n\t\t\t\t\t// Convert the template into pure JavaScript\n\t\t\t\t\tstr\n\t\t\t\t\t\t.replace(/[\\r\\t\\n]/g, \" \")\n\t\t\t\t\t\t.split(\"<%\").join(\"\\t\")\n\t\t\t\t\t\t.replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n\t\t\t\t\t\t.replace(/\\t=(.*?)%>/g, \"',$1,'\")\n\t\t\t\t\t\t.split(\"\\t\").join(\"');\")\n\t\t\t\t\t\t.split(\"%>\").join(\"p.push('\")\n\t\t\t\t\t\t.split(\"\\r\").join(\"\\\\'\") +\n\t\t\t\t\t\"');}return p.join('');\"\n\t\t\t\t);\n\n\t\t\t\t// Provide some basic currying to the user\n\t\t\t\treturn data ? fn( data ) : fn;\n\t\t\t}\n\t\t\treturn tmpl(templateString,valuesObject);\n\t\t},\n\t\t/* jshint ignore:end */\n\t\tgenerateLabels = helpers.generateLabels = function(templateString,numberOfSteps,graphMin,stepValue){\n\t\t\tvar labelsArray = new Array(numberOfSteps);\n\t\t\tif (templateString){\n\t\t\t\teach(labelsArray,function(val,index){\n\t\t\t\t\tlabelsArray[index] = template(templateString,{value: (graphMin + (stepValue*(index+1)))});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn labelsArray;\n\t\t},\n\t\t//--Animation methods\n\t\t//Easing functions adapted from Robert Penner's easing equations\n\t\t//http://www.robertpenner.com/easing/\n\t\teasingEffects = helpers.easingEffects = {\n\t\t\tlinear: function (t) {\n\t\t\t\treturn t;\n\t\t\t},\n\t\t\teaseInQuad: function (t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\t\t\teaseOutQuad: function (t) {\n\t\t\t\treturn -1 * t * (t - 2);\n\t\t\t},\n\t\t\teaseInOutQuad: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t;\n\t\t\t\t}\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t\t},\n\t\t\teaseInCubic: function (t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\t\t\teaseOutCubic: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutCubic: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t\t},\n\t\t\teaseInQuart: function (t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuart: function (t) {\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t\t},\n\t\t\teaseInOutQuart: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t\t},\n\t\t\teaseInQuint: function (t) {\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuint: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutQuint: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t\t},\n\t\t\teaseInSine: function (t) {\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t\t},\n\t\t\teaseOutSine: function (t) {\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t\t},\n\t\t\teaseInOutSine: function (t) {\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t\t},\n\t\t\teaseInExpo: function (t) {\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t\t},\n\t\t\teaseOutExpo: function (t) {\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t\t},\n\t\t\teaseInOutExpo: function (t) {\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (t === 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t\t},\n\t\t\teaseInCirc: function (t) {\n\t\t\t\tif (t >= 1){\n\t\t\t\t\treturn t;\n\t\t\t\t}\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t\t},\n\t\t\teaseOutCirc: function (t) {\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t\t},\n\t\t\teaseInOutCirc: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t\t},\n\t\t\teaseInElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1) == 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * 0.3;\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else{\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t},\n\t\t\teaseOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1) == 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * 0.3;\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else{\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t\t},\n\t\t\teaseInOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1 / 2) == 2){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * (0.3 * 1.5);\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1){\n\t\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));}\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t},\n\t\t\teaseInBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t},\n\t\t\teaseOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t\t},\n\t\t\teaseInOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t\t},\n\t\t\teaseInBounce: function (t) {\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t\t},\n\t\t\teaseOutBounce: function (t) {\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t\t} else {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t\t\t}\n\t\t\t},\n\t\t\teaseInOutBounce: function (t) {\n\t\t\t\tif (t < 1 / 2){\n\t\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t\t}\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t\t}\n\t\t},\n\t\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t\trequestAnimFrame = helpers.requestAnimFrame = (function(){\n\t\t\treturn window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.oRequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tcancelAnimFrame = helpers.cancelAnimFrame = (function(){\n\t\t\treturn window.cancelAnimationFrame ||\n\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\twindow.oCancelAnimationFrame ||\n\t\t\t\twindow.msCancelAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tanimationLoop = helpers.animationLoop = function(callback,totalSteps,easingString,onProgress,onComplete,chartInstance){\n\n\t\t\tvar currentStep = 0,\n\t\t\t\teasingFunction = easingEffects[easingString] || easingEffects.linear;\n\n\t\t\tvar animationFrame = function(){\n\t\t\t\tcurrentStep++;\n\t\t\t\tvar stepDecimal = currentStep/totalSteps;\n\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\tcallback.call(chartInstance,easeDecimal,stepDecimal, currentStep);\n\t\t\t\tonProgress.call(chartInstance,easeDecimal,stepDecimal);\n\t\t\t\tif (currentStep < totalSteps){\n\t\t\t\t\tchartInstance.animationFrame = requestAnimFrame(animationFrame);\n\t\t\t\t} else{\n\t\t\t\t\tonComplete.apply(chartInstance);\n\t\t\t\t}\n\t\t\t};\n\t\t\trequestAnimFrame(animationFrame);\n\t\t},\n\t\t//-- DOM methods\n\t\tgetRelativePosition = helpers.getRelativePosition = function(evt){\n\t\t\tvar mouseX, mouseY;\n\t\t\tvar e = evt.originalEvent || evt,\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\t\tif (e.touches){\n\t\t\t\tmouseX = e.touches[0].clientX - boundingRect.left;\n\t\t\t\tmouseY = e.touches[0].clientY - boundingRect.top;\n\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmouseX = e.clientX - boundingRect.left;\n\t\t\t\tmouseY = e.clientY - boundingRect.top;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx : mouseX,\n\t\t\t\ty : mouseY\n\t\t\t};\n\n\t\t},\n\t\taddEvent = helpers.addEvent = function(node,eventType,method){\n\t\t\tif (node.addEventListener){\n\t\t\t\tnode.addEventListener(eventType,method);\n\t\t\t} else if (node.attachEvent){\n\t\t\t\tnode.attachEvent(\"on\"+eventType, method);\n\t\t\t} else {\n\t\t\t\tnode[\"on\"+eventType] = method;\n\t\t\t}\n\t\t},\n\t\tremoveEvent = helpers.removeEvent = function(node, eventType, handler){\n\t\t\tif (node.removeEventListener){\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t\t} else if (node.detachEvent){\n\t\t\t\tnode.detachEvent(\"on\"+eventType,handler);\n\t\t\t} else{\n\t\t\t\tnode[\"on\" + eventType] = noop;\n\t\t\t}\n\t\t},\n\t\tbindEvents = helpers.bindEvents = function(chartInstance, arrayOfEvents, handler){\n\t\t\t// Create the events object if it's not already present\n\t\t\tif (!chartInstance.events) chartInstance.events = {};\n\n\t\t\teach(arrayOfEvents,function(eventName){\n\t\t\t\tchartInstance.events[eventName] = function(){\n\t\t\t\t\thandler.apply(chartInstance, arguments);\n\t\t\t\t};\n\t\t\t\taddEvent(chartInstance.chart.canvas,eventName,chartInstance.events[eventName]);\n\t\t\t});\n\t\t},\n\t\tunbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n\t\t\teach(arrayOfEvents, function(handler,eventName){\n\t\t\t\tremoveEvent(chartInstance.chart.canvas, eventName, handler);\n\t\t\t});\n\t\t},\n\t\tgetMaximumWidth = helpers.getMaximumWidth = function(domNode){\n\t\t\tvar container = domNode.parentNode,\n\t\t\t    padding = parseInt(getStyle(container, 'padding-left')) + parseInt(getStyle(container, 'padding-right'));\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container ? container.clientWidth - padding : 0;\n\t\t},\n\t\tgetMaximumHeight = helpers.getMaximumHeight = function(domNode){\n\t\t\tvar container = domNode.parentNode,\n\t\t\t    padding = parseInt(getStyle(container, 'padding-bottom')) + parseInt(getStyle(container, 'padding-top'));\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container ? container.clientHeight - padding : 0;\n\t\t},\n\t\tgetStyle = helpers.getStyle = function (el, property) {\n\t\t\treturn el.currentStyle ?\n\t\t\t\tel.currentStyle[property] :\n\t\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t\t},\n\t\tgetMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth, // legacy support\n\t\tretinaScale = helpers.retinaScale = function(chart){\n\t\t\tvar ctx = chart.ctx,\n\t\t\t\twidth = chart.canvas.width,\n\t\t\t\theight = chart.canvas.height;\n\n\t\t\tif (window.devicePixelRatio) {\n\t\t\t\tctx.canvas.style.width = width + \"px\";\n\t\t\t\tctx.canvas.style.height = height + \"px\";\n\t\t\t\tctx.canvas.height = height * window.devicePixelRatio;\n\t\t\t\tctx.canvas.width = width * window.devicePixelRatio;\n\t\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t\t}\n\t\t},\n\t\t//-- Canvas methods\n\t\tclear = helpers.clear = function(chart){\n\t\t\tchart.ctx.clearRect(0,0,chart.width,chart.height);\n\t\t},\n\t\tfontString = helpers.fontString = function(pixelSize,fontStyle,fontFamily){\n\t\t\treturn fontStyle + \" \" + pixelSize+\"px \" + fontFamily;\n\t\t},\n\t\tlongestText = helpers.longestText = function(ctx,font,arrayOfStrings){\n\t\t\tctx.font = font;\n\t\t\tvar longest = 0;\n\t\t\teach(arrayOfStrings,function(string){\n\t\t\t\tvar textWidth = ctx.measureText(string).width;\n\t\t\t\tlongest = (textWidth > longest) ? textWidth : longest;\n\t\t\t});\n\t\t\treturn longest;\n\t\t},\n\t\tdrawRoundedRectangle = helpers.drawRoundedRectangle = function(ctx,x,y,width,height,radius){\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\t\t};\n\n\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\tChart.Type = function(data,options,chart){\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t\tthis.id = uid();\n\t\t//Add the chart instance to the global namespace\n\t\tChart.instances[this.id] = this;\n\n\t\t// Initialize is always called when a chart type is created\n\t\t// By default it is a no op, but it should be extended\n\t\tif (options.responsive){\n\t\t\tthis.resize();\n\t\t}\n\t\tthis.initialize.call(this,data);\n\t};\n\n\t//Core methods that'll be a part of every chart type\n\textend(Chart.Type.prototype,{\n\t\tinitialize : function(){return this;},\n\t\tclear : function(){\n\t\t\tclear(this.chart);\n\t\t\treturn this;\n\t\t},\n\t\tstop : function(){\n\t\t\t// Stops any current animation loop occuring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\t\tresize : function(callback){\n\t\t\tthis.stop();\n\t\t\tvar canvas = this.chart.canvas,\n\t\t\t\tnewWidth = getMaximumWidth(this.chart.canvas),\n\t\t\t\tnewHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n\n\t\t\tcanvas.width = this.chart.width = newWidth;\n\t\t\tcanvas.height = this.chart.height = newHeight;\n\n\t\t\tretinaScale(this.chart);\n\n\t\t\tif (typeof callback === \"function\"){\n\t\t\t\tcallback.apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\treflow : noop,\n\t\trender : function(reflow){\n\t\t\tif (reflow){\n\t\t\t\tthis.reflow();\n\t\t\t}\n\t\t\t\n\t\t\tif (this.options.animation && !reflow){\n\t\t\t\tvar animation = new Chart.Animation();\n\t\t\t\tanimation.numSteps = this.options.animationSteps;\n\t\t\t\tanimation.easing = this.options.animationEasing;\n\t\t\t\t\n\t\t\t\t// render function\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\t\t\t\t\t\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t// user events\n\t\t\t\tanimation.onAnimationProgress = this.options.onAnimationProgress;\n\t\t\t\tanimation.onAnimationComplete = this.options.onAnimationComplete;\n\t\t\t\t\n\t\t\t\tChart.animationService.addAnimation(this, animation);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.draw();\n\t\t\t\tthis.options.onAnimationComplete.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tgenerateLegend : function(){\n\t\t\treturn helpers.template(this.options.legendTemplate, this);\n\t\t},\n\t\tdestroy : function(){\n\t\t\tthis.stop();\n\t\t\tthis.clear();\n\t\t\tunbindEvents(this, this.events);\n\t\t\tvar canvas = this.chart.canvas;\n\n\t\t\t// Reset canvas height/width attributes starts a fresh with the canvas context\n\t\t\tcanvas.width = this.chart.width;\n\t\t\tcanvas.height = this.chart.height;\n\n\t\t\t// < IE9 doesn't support removeProperty\n\t\t\tif (canvas.style.removeProperty) {\n\t\t\t\tcanvas.style.removeProperty('width');\n\t\t\t\tcanvas.style.removeProperty('height');\n\t\t\t} else {\n\t\t\t\tcanvas.style.removeAttribute('width');\n\t\t\t\tcanvas.style.removeAttribute('height');\n\t\t\t}\n\n\t\t\tdelete Chart.instances[this.id];\n\t\t},\n\t\tshowTooltip : function(ChartElements, forceRedraw){\n\t\t\t// Only redraw the chart if we've actually changed what we're hovering on.\n\t\t\tif (typeof this.activeElements === 'undefined') this.activeElements = [];\n\n\t\t\tvar isChanged = (function(Elements){\n\t\t\t\tvar changed = false;\n\n\t\t\t\tif (Elements.length !== this.activeElements.length){\n\t\t\t\t\tchanged = true;\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\n\t\t\t\teach(Elements, function(element, index){\n\t\t\t\t\tif (element !== this.activeElements[index]){\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\treturn changed;\n\t\t\t}).call(this, ChartElements);\n\n\t\t\tif (!isChanged && !forceRedraw){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.activeElements = ChartElements;\n\t\t\t}\n\t\t\tthis.draw();\n\t\t\tif(this.options.customTooltips){\n\t\t\t\tthis.options.customTooltips(false);\n\t\t\t}\n\t\t\tif (ChartElements.length > 0){\n\t\t\t\t// If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n\t\t\t\tif (this.datasets && this.datasets.length > 1) {\n\t\t\t\t\tvar dataArray,\n\t\t\t\t\t\tdataIndex;\n\n\t\t\t\t\tfor (var i = this.datasets.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tdataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n\t\t\t\t\t\tdataIndex = indexOf(dataArray, ChartElements[0]);\n\t\t\t\t\t\tif (dataIndex !== -1){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar tooltipLabels = [],\n\t\t\t\t\t\ttooltipColors = [],\n\t\t\t\t\t\tmedianPosition = (function(index) {\n\n\t\t\t\t\t\t\t// Get all the points at that particular index\n\t\t\t\t\t\t\tvar Elements = [],\n\t\t\t\t\t\t\t\tdataCollection,\n\t\t\t\t\t\t\t\txPositions = [],\n\t\t\t\t\t\t\t\tyPositions = [],\n\t\t\t\t\t\t\t\txMax,\n\t\t\t\t\t\t\t\tyMax,\n\t\t\t\t\t\t\t\txMin,\n\t\t\t\t\t\t\t\tyMin;\n\t\t\t\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\t\t\t\tdataCollection = dataset.points || dataset.bars || dataset.segments;\n\t\t\t\t\t\t\t\tif (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()){\n\t\t\t\t\t\t\t\t\tElements.push(dataCollection[dataIndex]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\thelpers.each(Elements, function(element) {\n\t\t\t\t\t\t\t\txPositions.push(element.x);\n\t\t\t\t\t\t\t\tyPositions.push(element.y);\n\n\n\t\t\t\t\t\t\t\t//Include any colour information about the element\n\t\t\t\t\t\t\t\ttooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n\t\t\t\t\t\t\t\ttooltipColors.push({\n\t\t\t\t\t\t\t\t\tfill: element._saved.fillColor || element.fillColor,\n\t\t\t\t\t\t\t\t\tstroke: element._saved.strokeColor || element.strokeColor\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t\tyMin = min(yPositions);\n\t\t\t\t\t\t\tyMax = max(yPositions);\n\n\t\t\t\t\t\t\txMin = min(xPositions);\n\t\t\t\t\t\t\txMax = max(xPositions);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (xMin > this.chart.width/2) ? xMin : xMax,\n\t\t\t\t\t\t\t\ty: (yMin + yMax)/2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}).call(this, dataIndex);\n\n\t\t\t\t\tnew Chart.MultiTooltip({\n\t\t\t\t\t\tx: medianPosition.x,\n\t\t\t\t\t\ty: medianPosition.y,\n\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\txOffset: this.options.tooltipXOffset,\n\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\ttitleTextColor: this.options.tooltipTitleFontColor,\n\t\t\t\t\t\ttitleFontFamily: this.options.tooltipTitleFontFamily,\n\t\t\t\t\t\ttitleFontStyle: this.options.tooltipTitleFontStyle,\n\t\t\t\t\t\ttitleFontSize: this.options.tooltipTitleFontSize,\n\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\tlabels: tooltipLabels,\n\t\t\t\t\t\tlegendColors: tooltipColors,\n\t\t\t\t\t\tlegendColorBackground : this.options.multiTooltipKeyBackground,\n\t\t\t\t\t\ttitle: template(this.options.tooltipTitleTemplate,ChartElements[0]),\n\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\tctx: this.chart.ctx,\n\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t}).draw();\n\n\t\t\t\t} else {\n\t\t\t\t\teach(ChartElements, function(Element) {\n\t\t\t\t\t\tvar tooltipPosition = Element.tooltipPosition();\n\t\t\t\t\t\tnew Chart.Tooltip({\n\t\t\t\t\t\t\tx: Math.round(tooltipPosition.x),\n\t\t\t\t\t\t\ty: Math.round(tooltipPosition.y),\n\t\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\t\tcaretHeight: this.options.tooltipCaretSize,\n\t\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\t\ttext: template(this.options.tooltipTemplate, Element),\n\t\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t\t}).draw();\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\ttoBase64Image : function(){\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t}\n\t});\n\n\tChart.Type.extend = function(extensions){\n\n\t\tvar parent = this;\n\n\t\tvar ChartType = function(){\n\t\t\treturn parent.apply(this,arguments);\n\t\t};\n\n\t\t//Copy the prototype object of the this class\n\t\tChartType.prototype = clone(parent.prototype);\n\t\t//Now overwrite some of the properties in the base class with the new extensions\n\t\textend(ChartType.prototype, extensions);\n\n\t\tChartType.extend = Chart.Type.extend;\n\n\t\tif (extensions.name || parent.prototype.name){\n\n\t\t\tvar chartName = extensions.name || parent.prototype.name;\n\t\t\t//Assign any potential default values of the new chart type\n\n\t\t\t//If none are defined, we'll use a clone of the chart type this is being extended from.\n\t\t\t//I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n\t\t\t//doesn't define some defaults of their own.\n\n\t\t\tvar baseDefaults = (Chart.defaults[parent.prototype.name]) ? clone(Chart.defaults[parent.prototype.name]) : {};\n\n\t\t\tChart.defaults[chartName] = extend(baseDefaults,extensions.defaults);\n\n\t\t\tChart.types[chartName] = ChartType;\n\n\t\t\t//Register this new chart type in the Chart prototype\n\t\t\tChart.prototype[chartName] = function(data,options){\n\t\t\t\tvar config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n\t\t\t\treturn new ChartType(data,config,this);\n\t\t\t};\n\t\t} else{\n\t\t\twarn(\"Name not provided for this chart, so it hasn't been registered\");\n\t\t}\n\t\treturn parent;\n\t};\n\n\tChart.Element = function(configuration){\n\t\textend(this,configuration);\n\t\tthis.initialize.apply(this,arguments);\n\t\tthis.save();\n\t};\n\textend(Chart.Element.prototype,{\n\t\tinitialize : function(){},\n\t\trestore : function(props){\n\t\t\tif (!props){\n\t\t\t\textend(this,this._saved);\n\t\t\t} else {\n\t\t\t\teach(props,function(key){\n\t\t\t\t\tthis[key] = this._saved[key];\n\t\t\t\t},this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tsave : function(){\n\t\t\tthis._saved = clone(this);\n\t\t\tdelete this._saved._saved;\n\t\t\treturn this;\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\teach(newProps,function(value,key){\n\t\t\t\tthis._saved[key] = this[key];\n\t\t\t\tthis[key] = value;\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttransition : function(props,ease){\n\t\t\teach(props,function(value,key){\n\t\t\t\tthis[key] = ((value - this._saved[key]) * ease) + this._saved[key];\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\treturn {\n\t\t\t\tx : this.x,\n\t\t\t\ty : this.y\n\t\t\t};\n\t\t},\n\t\thasValue: function(){\n\t\t\treturn isNumber(this.value);\n\t\t}\n\t});\n\n\tChart.Element.extend = inherits;\n\n\n\tChart.Point = Chart.Element.extend({\n\t\tdisplay: true,\n\t\tinRange: function(chartX,chartY){\n\t\t\tvar hitDetectionRange = this.hitDetectionRadius + this.radius;\n\t\t\treturn ((Math.pow(chartX-this.x, 2)+Math.pow(chartY-this.y, 2)) < Math.pow(hitDetectionRange,2));\n\t\t},\n\t\tdraw : function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\n\n\t\t\t//Quick debug for bezier curve splining\n\t\t\t//Highlights control points and the line between them.\n\t\t\t//Handy for dev - stripped in the min version.\n\n\t\t\t// ctx.save();\n\t\t\t// ctx.fillStyle = \"black\";\n\t\t\t// ctx.strokeStyle = \"black\"\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n\t\t\t// ctx.lineTo(this.x, this.y);\n\t\t\t// ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n\t\t\t// ctx.stroke();\n\n\t\t\t// ctx.restore();\n\n\n\n\t\t}\n\t});\n\n\tChart.Arc = Chart.Element.extend({\n\t\tinRange : function(chartX,chartY){\n\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(this, {\n\t\t\t\tx: chartX,\n\t\t\t\ty: chartY\n\t\t\t});\n\n\t\t\t// Normalize all angles to 0 - 2*PI (0 - 360°)\n\t\t\tvar pointRelativeAngle = pointRelativePosition.angle % (Math.PI * 2),\n\t\t\t    startAngle = (Math.PI * 2 + this.startAngle) % (Math.PI * 2),\n\t\t\t    endAngle = (Math.PI * 2 + this.endAngle) % (Math.PI * 2) || 360;\n\n\t\t\t// Calculate wether the pointRelativeAngle is between the start and the end angle\n\t\t\tvar betweenAngles = (endAngle < startAngle) ?\n\t\t\t\tpointRelativeAngle <= endAngle || pointRelativeAngle >= startAngle:\n\t\t\t\tpointRelativeAngle >= startAngle && pointRelativeAngle <= endAngle;\n\n\t\t\t//Check if within the range of the open/close angle\n\t\t\tvar withinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t//Ensure within the outside of the arc centre, but inside arc outer\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\tvar centreAngle = this.startAngle + ((this.endAngle - this.startAngle) / 2),\n\t\t\t\trangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n\t\t\treturn {\n\t\t\t\tx : this.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty : this.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw : function(animationPercent){\n\n\t\t\tvar easingDecimal = animationPercent || 1;\n\n\t\t\tvar ctx = this.ctx;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(this.x, this.y, this.outerRadius < 0 ? 0 : this.outerRadius, this.startAngle, this.endAngle);\n\n            ctx.arc(this.x, this.y, this.innerRadius < 0 ? 0 : this.innerRadius, this.endAngle, this.startAngle, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Rectangle = Chart.Element.extend({\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\thalfWidth = this.width/2,\n\t\t\t\tleftX = this.x - halfWidth,\n\t\t\t\trightX = this.x + halfWidth,\n\t\t\t\ttop = this.base - (this.base - this.y),\n\t\t\t\thalfStroke = this.strokeWidth / 2;\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (this.showStroke){\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.fillStyle = this.fillColor;\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t// It'd be nice to keep this class totally generic to any rectangle\n\t\t\t// and simply specify which border to miss out.\n\t\t\tctx.moveTo(leftX, this.base);\n\t\t\tctx.lineTo(leftX, top);\n\t\t\tctx.lineTo(rightX, top);\n\t\t\tctx.lineTo(rightX, this.base);\n\t\t\tctx.fill();\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight : function(){\n\t\t\treturn this.base - this.y;\n\t\t},\n\t\tinRange : function(chartX,chartY){\n\t\t\treturn (chartX >= this.x - this.width/2 && chartX <= this.x + this.width/2) && (chartY >= this.y && chartY <= this.base);\n\t\t}\n\t});\n\n\tChart.Animation = Chart.Element.extend({\n\t\tcurrentStep: null, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: \"\", // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\t\t\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation \n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\t\n\tChart.Tooltip = Chart.Element.extend({\n\t\tdraw : function(){\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.xAlign = \"center\";\n\t\t\tthis.yAlign = \"above\";\n\n\t\t\t//Distance between the actual element.y position and the start of the tooltip caret\n\t\t\tvar caretPadding = this.caretPadding = 2;\n\n\t\t\tvar tooltipWidth = ctx.measureText(this.text).width + 2*this.xPadding,\n\t\t\t\ttooltipRectHeight = this.fontSize + 2*this.yPadding,\n\t\t\t\ttooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n\n\t\t\tif (this.x + tooltipWidth/2 >this.chart.width){\n\t\t\t\tthis.xAlign = \"left\";\n\t\t\t} else if (this.x - tooltipWidth/2 < 0){\n\t\t\t\tthis.xAlign = \"right\";\n\t\t\t}\n\n\t\t\tif (this.y - tooltipHeight < 0){\n\t\t\t\tthis.yAlign = \"below\";\n\t\t\t}\n\n\n\t\t\tvar tooltipX = this.x - tooltipWidth/2,\n\t\t\t\ttooltipY = this.y - tooltipHeight;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tswitch(this.yAlign)\n\t\t\t\t{\n\t\t\t\tcase \"above\":\n\t\t\t\t\t//Draw a caret above the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x,this.y - caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"below\":\n\t\t\t\t\ttooltipY = this.y + caretPadding + this.caretHeight;\n\t\t\t\t\t//Draw a caret below the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x, this.y + caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch(this.xAlign)\n\t\t\t\t{\n\t\t\t\tcase \"left\":\n\t\t\t\t\ttooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\t\ttooltipX = this.x - (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdrawRoundedRectangle(ctx,tooltipX,tooltipY,tooltipWidth,tooltipRectHeight,this.cornerRadius);\n\n\t\t\t\tctx.fill();\n\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillText(this.text, tooltipX + tooltipWidth/2, tooltipY + tooltipRectHeight/2);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.MultiTooltip = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.titleFont = fontString(this.titleFontSize,this.titleFontStyle,this.titleFontFamily);\n\n\t\t\tthis.titleHeight = this.title ? this.titleFontSize * 1.5 : 0;\n\t\t\tthis.height = (this.labels.length * this.fontSize) + ((this.labels.length-1) * (this.fontSize/2)) + (this.yPadding*2) + this.titleHeight;\n\n\t\t\tthis.ctx.font = this.titleFont;\n\n\t\t\tvar titleWidth = this.ctx.measureText(this.title).width,\n\t\t\t\t//Label has a legend square as well so account for this.\n\t\t\t\tlabelWidth = longestText(this.ctx,this.font,this.labels) + this.fontSize + 3,\n\t\t\t\tlongestTextWidth = max([labelWidth,titleWidth]);\n\n\t\t\tthis.width = longestTextWidth + (this.xPadding*2);\n\n\n\t\t\tvar halfHeight = this.height/2;\n\n\t\t\t//Check to ensure the height will fit on the canvas\n\t\t\tif (this.y - halfHeight < 0 ){\n\t\t\t\tthis.y = halfHeight;\n\t\t\t} else if (this.y + halfHeight > this.chart.height){\n\t\t\t\tthis.y = this.chart.height - halfHeight;\n\t\t\t}\n\n\t\t\t//Decide whether to align left or right based on position on canvas\n\t\t\tif (this.x > this.chart.width/2){\n\t\t\t\tthis.x -= this.xOffset + this.width;\n\t\t\t} else {\n\t\t\t\tthis.x += this.xOffset;\n\t\t\t}\n\n\n\t\t},\n\t\tgetLineHeight : function(index){\n\t\t\tvar baseLineHeight = this.y - (this.height/2) + this.yPadding,\n\t\t\t\tafterTitleIndex = index-1;\n\n\t\t\t//If the index is zero, we're getting the title\n\t\t\tif (index === 0){\n\t\t\t\treturn baseLineHeight + this.titleHeight / 3;\n\t\t\t} else{\n\t\t\t\treturn baseLineHeight + ((this.fontSize * 1.5 * afterTitleIndex) + this.fontSize / 2) + this.titleHeight;\n\t\t\t}\n\n\t\t},\n\t\tdraw : function(){\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdrawRoundedRectangle(this.ctx,this.x,this.y - this.height/2,this.width,this.height,this.cornerRadius);\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.fillStyle = this.fillColor;\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.textAlign = \"left\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillStyle = this.titleTextColor;\n\t\t\t\tctx.font = this.titleFont;\n\n\t\t\t\tctx.fillText(this.title,this.x + this.xPadding, this.getLineHeight(0));\n\n\t\t\t\tctx.font = this.font;\n\t\t\t\thelpers.each(this.labels,function(label,index){\n\t\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\t\tctx.fillText(label,this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1));\n\n\t\t\t\t\t//A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n\t\t\t\t\t//ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\t\t\t\t\t//Instead we'll make a white filled block to put the legendColour palette over.\n\n\t\t\t\t\tctx.fillStyle = this.legendColorBackground;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\t\t\t\t\tctx.fillStyle = this.legendColors[index].fill;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\n\t\t\t\t},this);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Scale = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.fit();\n\t\t},\n\t\tbuildYLabels : function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t\tthis.yLabelWidth = (this.display && this.showLabels) ? longestText(this.ctx,this.font,this.yLabels) + 10 : 0;\n\t\t},\n\t\taddXLabel : function(label){\n\t\t\tthis.xLabels.push(label);\n\t\t\tthis.valuesCount++;\n\t\t\tthis.fit();\n\t\t},\n\t\tremoveXLabel : function(){\n\t\t\tthis.xLabels.shift();\n\t\t\tthis.valuesCount--;\n\t\t\tthis.fit();\n\t\t},\n\t\t// Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n\t\tfit: function(){\n\t\t\t// First we need the width of the yLabels, assuming the xLabels aren't rotated\n\n\t\t\t// To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n\t\t\tthis.startPoint = (this.display) ? this.fontSize : 0;\n\t\t\tthis.endPoint = (this.display) ? this.height - (this.fontSize * 1.5) - 5 : this.height; // -5 to pad labels\n\n\t\t\t// Apply padding settings to the start and end point.\n\t\t\tthis.startPoint += this.padding;\n\t\t\tthis.endPoint -= this.padding;\n\n\t\t\t// Cache the starting endpoint, excluding the space for x labels\n\t\t\tvar cachedEndPoint = this.endPoint;\n\n\t\t\t// Cache the starting height, so can determine if we need to recalculate the scale yAxis\n\t\t\tvar cachedHeight = this.endPoint - this.startPoint,\n\t\t\t\tcachedYLabelWidth;\n\n\t\t\t// Build the current yLabels so we have an idea of what size they'll be to start\n\t\t\t/*\n\t\t\t *\tThis sets what is returned from calculateScaleRange as static properties of this class:\n\t\t\t *\n\t\t\t\tthis.steps;\n\t\t\t\tthis.stepValue;\n\t\t\t\tthis.min;\n\t\t\t\tthis.max;\n\t\t\t *\n\t\t\t */\n\t\t\tthis.calculateYRange(cachedHeight);\n\n\t\t\t// With these properties set we can now build the array of yLabels\n\t\t\t// and also the width of the largest yLabel\n\t\t\tthis.buildYLabels();\n\n\t\t\tthis.calculateXLabelRotation();\n\n\t\t\twhile((cachedHeight > this.endPoint - this.startPoint)){\n\t\t\t\tcachedHeight = this.endPoint - this.startPoint;\n\t\t\t\tcachedYLabelWidth = this.yLabelWidth;\n\n\t\t\t\tthis.calculateYRange(cachedHeight);\n\t\t\t\tthis.buildYLabels();\n\n\t\t\t\t// Only go through the xLabel loop again if the yLabel width has changed\n\t\t\t\tif (cachedYLabelWidth < this.yLabelWidth){\n\t\t\t\t\tthis.endPoint = cachedEndPoint;\n\t\t\t\t\tthis.calculateXLabelRotation();\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\tcalculateXLabelRotation : function(){\n\t\t\t//Get the width of each grid by calculating the difference\n\t\t\t//between x offsets between 0 and 1.\n\n\t\t\tthis.ctx.font = this.font;\n\n\t\t\tvar firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n\t\t\t\tlastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n\t\t\t\tfirstRotated,\n\t\t\t\tlastRotated;\n\n\n\t\t\tthis.xScalePaddingRight = lastWidth/2 + 3;\n\t\t\tthis.xScalePaddingLeft = (firstWidth/2 > this.yLabelWidth) ? firstWidth/2 : this.yLabelWidth;\n\n\t\t\tthis.xLabelRotation = 0;\n\t\t\tif (this.display){\n\t\t\t\tvar originalLabelWidth = longestText(this.ctx,this.font,this.xLabels),\n\t\t\t\t\tcosRotation,\n\t\t\t\t\tfirstRotatedWidth;\n\t\t\t\tthis.xLabelWidth = originalLabelWidth;\n\t\t\t\t//Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6;\n\n\t\t\t\t//Max label rotate should be 90 - also act as a loop counter\n\t\t\t\twhile ((this.xLabelWidth > xGridWidth && this.xLabelRotation === 0) || (this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0)){\n\t\t\t\t\tcosRotation = Math.cos(toRadians(this.xLabelRotation));\n\n\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\t\t\t\t\tlastRotated = cosRotation * lastWidth;\n\n\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\tif (firstRotated + this.fontSize / 2 > this.yLabelWidth){\n\t\t\t\t\t\tthis.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n\t\t\t\t\t}\n\t\t\t\t\tthis.xScalePaddingRight = this.fontSize/2;\n\n\n\t\t\t\t\tthis.xLabelRotation++;\n\t\t\t\t\tthis.xLabelWidth = cosRotation * originalLabelWidth;\n\n\t\t\t\t}\n\t\t\t\tif (this.xLabelRotation > 0){\n\t\t\t\t\tthis.endPoint -= Math.sin(toRadians(this.xLabelRotation))*originalLabelWidth + 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.xLabelWidth = 0;\n\t\t\t\tthis.xScalePaddingRight = this.padding;\n\t\t\t\tthis.xScalePaddingLeft = this.padding;\n\t\t\t}\n\n\t\t},\n\t\t// Needs to be overidden in each Chart type\n\t\t// Otherwise we need to pass all the data into the scale class\n\t\tcalculateYRange: noop,\n\t\tdrawingArea: function(){\n\t\t\treturn this.startPoint - this.endPoint;\n\t\t},\n\t\tcalculateY : function(value){\n\t\t\tvar scalingFactor = this.drawingArea() / (this.min - this.max);\n\t\t\treturn this.endPoint - (scalingFactor * (value - this.min));\n\t\t},\n\t\tcalculateX : function(index){\n\t\t\tvar isRotated = (this.xLabelRotation > 0),\n\t\t\t\t// innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n\t\t\t\tinnerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n\t\t\t\tvalueWidth = innerWidth/Math.max((this.valuesCount - ((this.offsetGridLines) ? 0 : 1)), 1),\n\t\t\t\tvalueOffset = (valueWidth * index) + this.xScalePaddingLeft;\n\n\t\t\tif (this.offsetGridLines){\n\t\t\t\tvalueOffset += (valueWidth/2);\n\t\t\t}\n\n\t\t\treturn Math.round(valueOffset);\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\thelpers.extend(this, newProps);\n\t\t\tthis.fit();\n\t\t},\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\tyLabelGap = (this.endPoint - this.startPoint) / this.steps,\n\t\t\t\txStart = Math.round(this.xScalePaddingLeft);\n\t\t\tif (this.display){\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.font = this.font;\n\t\t\t\teach(this.yLabels,function(labelString,index){\n\t\t\t\t\tvar yLabelCenter = this.endPoint - (yLabelGap * index),\n\t\t\t\t\t\tlinePositionY = Math.round(yLabelCenter),\n\t\t\t\t\t\tdrawHorizontalLine = this.showHorizontalLines;\n\n\t\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\tif (this.showLabels){\n\t\t\t\t\t\tctx.fillText(labelString,xStart - 10,yLabelCenter);\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is X axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawHorizontalLine){\n\t\t\t\t\t\tdrawHorizontalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawHorizontalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tlinePositionY += helpers.aliasPixel(ctx.lineWidth);\n\n\t\t\t\t\tif(drawHorizontalLine){\n\t\t\t\t\t\tctx.moveTo(xStart, linePositionY);\n\t\t\t\t\t\tctx.lineTo(this.width, linePositionY);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(xStart - 5, linePositionY);\n\t\t\t\t\tctx.lineTo(xStart, linePositionY);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t},this);\n\n\t\t\t\teach(this.xLabels,function(label,index){\n\t\t\t\t\tvar xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\t// Check to see if line/bar here and decide where to place the line\n\t\t\t\t\t\tlinePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\tisRotated = (this.xLabelRotation > 0),\n\t\t\t\t\t\tdrawVerticalLine = this.showVerticalLines;\n\n\t\t\t\t\t// This is Y axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawVerticalLine){\n\t\t\t\t\t\tdrawVerticalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\t\tctx.lineTo(linePos,this.startPoint - 3);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\n\n\t\t\t\t\t// Small lines at the bottom of the base grid line\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\tctx.lineTo(linePos,this.endPoint + 5);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.translate(xPos,(isRotated) ? this.endPoint + 12 : this.endPoint + 8);\n\t\t\t\t\tctx.rotate(toRadians(this.xLabelRotation)*-1);\n\t\t\t\t\tctx.font = this.font;\n\t\t\t\t\tctx.textAlign = (isRotated) ? \"right\" : \"center\";\n\t\t\t\t\tctx.textBaseline = (isRotated) ? \"middle\" : \"top\";\n\t\t\t\t\tctx.fillText(label, 0, 0);\n\t\t\t\t\tctx.restore();\n\t\t\t\t},this);\n\n\t\t\t}\n\t\t}\n\n\t});\n\n\tChart.RadialScale = Chart.Element.extend({\n\t\tinitialize: function(){\n\t\t\tthis.size = min([this.height, this.width]);\n\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t},\n\t\tcalculateCenterOffset: function(value){\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\n\n\t\t\treturn (value - this.min) * scalingFactor;\n\t\t},\n\t\tupdate : function(){\n\t\t\tif (!this.lineArc){\n\t\t\t\tthis.setScaleSize();\n\t\t\t} else {\n\t\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t\t}\n\t\t\tthis.buildYLabels();\n\t\t},\n\t\tbuildYLabels: function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t},\n\t\tgetCircumference : function(){\n\t\t\treturn ((Math.PI*2) / this.valuesCount);\n\t\t},\n\t\tsetScaleSize: function(){\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\n\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = min([(this.height/2 - this.pointLabelFontSize - 5), this.width/2]),\n\t\t\t\tpointPosition,\n\t\t\t\ti,\n\t\t\t\ttextWidth,\n\t\t\t\thalfTextWidth,\n\t\t\t\tfurthestRight = this.width,\n\t\t\t\tfurthestRightIndex,\n\t\t\t\tfurthestRightAngle,\n\t\t\t\tfurthestLeft = 0,\n\t\t\t\tfurthestLeftIndex,\n\t\t\t\tfurthestLeftAngle,\n\t\t\t\txProtrusionLeft,\n\t\t\t\txProtrusionRight,\n\t\t\t\tradiusReductionRight,\n\t\t\t\tradiusReductionLeft,\n\t\t\t\tmaxWidthRadius;\n\t\t\tthis.ctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\tfor (i=0;i<this.valuesCount;i++){\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextWidth = this.ctx.measureText(template(this.templateString, { value: this.labels[i] })).width + 5;\n\t\t\t\tif (i === 0 || i === this.valuesCount/2){\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\n\t\t\t\t\t// w/left and right text sizes\n\t\t\t\t\thalfTextWidth = textWidth/2;\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i < this.valuesCount/2) {\n\t\t\t\t\t// Less than half the values means we'll left align the text\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i > this.valuesCount/2){\n\t\t\t\t\t// More than half the values means we'll right align the text\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txProtrusionLeft = furthestLeft;\n\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\n\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI/2);\n\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI/2);\n\n\t\t\t// Ensure we actually need to reduce the size of the chart\n\t\t\tradiusReductionRight = (isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n\t\t\tradiusReductionLeft = (isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n\t\t\tthis.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight)/2;\n\n\t\t\t//this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement){\n\n\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\n\n\t\t\tthis.xCenter = (maxLeft + maxRight)/2;\n\t\t\t// Always vertically in the centre as the text height doesn't change\n\t\t\tthis.yCenter = (this.height/2);\n\t\t},\n\n\t\tgetIndexAngle : function(index){\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.valuesCount;\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\n\t\t\treturn index * angleMultiplier - (Math.PI/2);\n\t\t},\n\t\tgetPointPosition : function(index, distanceFromCenter){\n\t\t\tvar thisAngle = this.getIndexAngle(index);\n\t\t\treturn {\n\t\t\t\tx : (Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\n\t\t\t\ty : (Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\n\t\t\t};\n\t\t},\n\t\tdraw: function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\teach(this.yLabels, function(label, index){\n\t\t\t\t\t// Don't draw a centre value\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\tvar yCenterOffset = index * (this.drawingArea/this.steps),\n\t\t\t\t\t\t\tyHeight = this.yCenter - yCenterOffset,\n\t\t\t\t\t\t\tpointPosition;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (this.lineWidth > 0){\n\t\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\n\t\t\t\t\t\t\tif(this.lineArc){\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI*2);\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tfor (var i=0;i<this.valuesCount;i++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + (index * this.stepValue)));\n\t\t\t\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.showLabels){\n\t\t\t\t\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\t\t\t\t\t\t\tif (this.showLabelBackdrop){\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = this.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth/2 - this.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - this.fontSize/2 - this.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + this.backdropPaddingX*2,\n\t\t\t\t\t\t\t\t\tthis.fontSize + this.backdropPaddingY*2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\t\t\tctx.fillStyle = this.fontColor;\n\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (!this.lineArc){\n\t\t\t\t\tctx.lineWidth = this.angleLineWidth;\n\t\t\t\t\tctx.strokeStyle = this.angleLineColor;\n\t\t\t\t\tfor (var i = this.valuesCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tvar centerOffset = null, outerPosition = null;\n\n\t\t\t\t\t\tif (this.angleLineWidth > 0 && (i % this.angleLineInterval === 0)){\n\t\t\t\t\t\t\tcenterOffset = this.calculateCenterOffset(this.max);\n\t\t\t\t\t\t\touterPosition = this.getPointPosition(i, centerOffset);\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.backgroundColors && this.backgroundColors.length == this.valuesCount) {\n\t\t\t\t\t\t\tif (centerOffset == null)\n\t\t\t\t\t\t\t\tcenterOffset = this.calculateCenterOffset(this.max);\n\n\t\t\t\t\t\t\tif (outerPosition == null)\n\t\t\t\t\t\t\t\touterPosition = this.getPointPosition(i, centerOffset);\n\n\t\t\t\t\t\t\tvar previousOuterPosition = this.getPointPosition(i === 0 ? this.valuesCount - 1 : i - 1, centerOffset);\n\t\t\t\t\t\t\tvar nextOuterPosition = this.getPointPosition(i === this.valuesCount - 1 ? 0 : i + 1, centerOffset);\n\n\t\t\t\t\t\t\tvar previousOuterHalfway = { x: (previousOuterPosition.x + outerPosition.x) / 2, y: (previousOuterPosition.y + outerPosition.y) / 2 };\n\t\t\t\t\t\t\tvar nextOuterHalfway = { x: (outerPosition.x + nextOuterPosition.x) / 2, y: (outerPosition.y + nextOuterPosition.y) / 2 };\n\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(previousOuterHalfway.x, previousOuterHalfway.y);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.lineTo(nextOuterHalfway.x, nextOuterHalfway.y);\n\t\t\t\t\t\t\tctx.fillStyle = this.backgroundColors[i];\n\t\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n\t\t\t\t\t\tctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\t\t\t\tctx.fillStyle = this.pointLabelFontColor;\n\n\t\t\t\t\t\tvar labelsCount = this.labels.length,\n\t\t\t\t\t\t\thalfLabelsCount = this.labels.length/2,\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount/2,\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\n\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if(i === halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if (i < halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\n\t\t\t\t\t\tif (exactQuarter){\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t} else if (upperHalf){\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\taddAnimation: function(chartInstance, animationObject) {\n\t\t\tfor (var index = 0; index < this.animations.length; ++ index){\n\t\t\t\tif (this.animations[index].chartInstance === chartInstance){\n\t\t\t\t\t// replacing an in progress animation\n\t\t\t\t\tthis.animations[index].animationObject = animationObject;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.animations.push({\n\t\t\t\tchartInstance: chartInstance,\n\t\t\t\tanimationObject: animationObject\n\t\t\t});\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (this.animations.length == 1) {\n\t\t\t\thelpers.requestAnimFrame.call(window, this.digestWrapper);\n\t\t\t}\n\t\t},\n\t\t// Cancel the animation for a given chart instance\n\t\tcancelAnimation: function(chartInstance) {\n\t\t\tvar index = helpers.findNextWhere(this.animations, function(animationWrapper) {\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\n\t\t\t});\n\t\t\t\n\t\t\tif (index)\n\t\t\t{\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t}\n\t\t},\n\t\t// calls startDigest with the proper context\n\t\tdigestWrapper: function() {\n\t\t\tChart.animationService.startDigest.call(Chart.animationService);\n\t\t},\n\t\tstartDigest: function() {\n\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif(this.dropFrames > 1){\n\t\t\t\tframesToDrop = Math.floor(this.dropFrames);\n\t\t\t\tthis.dropFrames -= framesToDrop;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this.animations.length; i++) {\n\n\t\t\t\tif (this.animations[i].animationObject.currentStep === null){\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = 0;\n\t\t\t\t}\n\n\t\t\t\tthis.animations[i].animationObject.currentStep += 1 + framesToDrop;\n\t\t\t\tif(this.animations[i].animationObject.currentStep > this.animations[i].animationObject.numSteps){\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = this.animations[i].animationObject.numSteps;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.animations[i].animationObject.render(this.animations[i].chartInstance, this.animations[i].animationObject);\n\t\t\t\t\n\t\t\t\t// Check if executed the last frame.\n\t\t\t\tif (this.animations[i].animationObject.currentStep == this.animations[i].animationObject.numSteps){\n\t\t\t\t\t// Call onAnimationComplete\n\t\t\t\t\tthis.animations[i].animationObject.onAnimationComplete.call(this.animations[i].chartInstance);\n\t\t\t\t\t// Remove the animation.\n\t\t\t\t\tthis.animations.splice(i, 1);\n\t\t\t\t\t// Keep the index in place to offset the splice\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar endTime = Date.now();\n\t\t\tvar delay = endTime - startTime - this.frameDuration;\n\t\t\tvar frameDelay = delay / this.frameDuration;\n\n\t\t\tif(frameDelay > 1){\n\t\t\t\tthis.dropFrames += frameDelay;\n\t\t\t}\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (this.animations.length > 0){\n\t\t\t\thelpers.requestAnimFrame.call(window, this.digestWrapper);\n\t\t\t}\n\t\t}\n\t};\n\n\t// Attach global event to resize each chart instance when the browser resizes\n\thelpers.addEvent(window, \"resize\", (function(){\n\t\t// Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n\t\tvar timeout;\n\t\treturn function(){\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function(){\n\t\t\t\teach(Chart.instances,function(instance){\n\t\t\t\t\t// If the responsive flag is set in the chart instance config\n\t\t\t\t\t// Cascade the resize event down to the chart.\n\t\t\t\t\tif (instance.options.responsive){\n\t\t\t\t\t\tinstance.resize(instance.render, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 50);\n\t\t};\n\t})());\n\n\n\tif (amd) {\n\t\tdefine('Chart', [], function(){\n\t\t\treturn Chart;\n\t\t});\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = Chart;\n\t}\n\n\troot.Chart = Chart;\n\n\tChart.noConflict = function(){\n\t\troot.Chart = previous;\n\t\treturn Chart;\n\t};\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\tscaleBeginAtZero : true,\n\n\t\t//Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - If there is a stroke on each bar\n\t\tbarShowStroke : true,\n\n\t\t//Number - Pixel width of the bar stroke\n\t\tbarStrokeWidth : 2,\n\n\t\t//Number - Spacing between each of the X value sets\n\t\tbarValueSpacing : 5,\n\n\t\t//Number - Spacing between data sets within X values\n\t\tbarDatasetSpacing : 1,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Bar\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\n\t\t\t//Expose options as a scope variable here so we can access it in the ScaleClass\n\t\t\tvar options = this.options;\n\n\t\t\tthis.ScaleClass = Chart.Scale.extend({\n\t\t\t\toffsetGridLines : true,\n\t\t\t\tcalculateBarX : function(datasetCount, datasetIndex, barIndex){\n\t\t\t\t\t//Reusable method for calculating the xPosition of a given bar based on datasetIndex & width of the bar\n\t\t\t\t\tvar xWidth = this.calculateBaseWidth(),\n\t\t\t\t\t\txAbsolute = this.calculateX(barIndex) - (xWidth/2),\n\t\t\t\t\t\tbarWidth = this.calculateBarWidth(datasetCount);\n\n\t\t\t\t\treturn xAbsolute + (barWidth * datasetIndex) + (datasetIndex * options.barDatasetSpacing) + barWidth/2;\n\t\t\t\t},\n\t\t\t\tcalculateBaseWidth : function(){\n\t\t\t\t\treturn (this.calculateX(1) - this.calculateX(0)) - (2*options.barValueSpacing);\n\t\t\t\t},\n\t\t\t\tcalculateBarWidth : function(datasetCount){\n\t\t\t\t\t//The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n\t\t\t\t\tvar baseWidth = this.calculateBaseWidth() - ((datasetCount - 1) * options.barDatasetSpacing);\n\n\t\t\t\t\treturn (baseWidth / datasetCount);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeBars = (evt.type !== 'mouseout') ? this.getBarsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachBars(function(bar){\n\t\t\t\t\t\tbar.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeBars, function(activeBar){\n\t\t\t\t\t\tif (activeBar) {\n\t\t\t\t\t\t\tactiveBar.fillColor = activeBar.highlightFill;\n\t\t\t\t\t\t\tactiveBar.strokeColor = activeBar.highlightStroke;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeBars);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.BarClass = Chart.Rectangle.extend({\n\t\t\t\tstrokeWidth : this.options.barStrokeWidth,\n\t\t\t\tshowStroke : this.options.barShowStroke,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset,datasetIndex){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tbars : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.bars.push(new this.BarClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : (typeof dataset.strokeColor == 'object') ? dataset.strokeColor[index] : dataset.strokeColor,\n\t\t\t\t\t\tfillColor : (typeof dataset.fillColor == 'object') ? dataset.fillColor[index] : dataset.fillColor,\n\t\t\t\t\t\thighlightFill : (dataset.highlightFill) ? (typeof dataset.highlightFill == 'object') ? dataset.highlightFill[index] : dataset.highlightFill : (typeof dataset.fillColor == 'object') ? dataset.fillColor[index] : dataset.fillColor,\n\t\t\t\t\t\thighlightStroke : (dataset.highlightStroke) ? (typeof dataset.highlightStroke == 'object') ? dataset.highlightStroke[index] : dataset.highlightStroke : (typeof dataset.strokeColor == 'object') ? dataset.strokeColor[index] : dataset.strokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.buildScale(data.labels);\n\n\t\t\tthis.BarClass.prototype.base = this.scale.endPoint;\n\n\t\t\tthis.eachBars(function(bar, index, datasetIndex){\n\t\t\t\thelpers.extend(bar, {\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t});\n\t\t\t\tbar.save();\n\t\t\t}, this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\n\t\t\tthis.eachBars(function(bar){\n\t\t\t\tbar.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachBars : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset, datasetIndex){\n\t\t\t\thelpers.each(dataset.bars, callback, this, datasetIndex);\n\t\t\t},this);\n\t\t},\n\t\tgetBarsAtEvent : function(e){\n\t\t\tvar barsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e),\n\t\t\t\tdatasetIterator = function(dataset){\n\t\t\t\t\tbarsArray.push(dataset.bars[barIndex]);\n\t\t\t\t},\n\t\t\t\tbarIndex;\n\n\t\t\tfor (var datasetIndex = 0; datasetIndex < this.datasets.length; datasetIndex++) {\n\t\t\t\tfor (barIndex = 0; barIndex < this.datasets[datasetIndex].bars.length; barIndex++) {\n\t\t\t\t\tif (this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x,eventPosition.y)){\n\t\t\t\t\t\thelpers.each(this.datasets, datasetIterator);\n\t\t\t\t\t\treturn barsArray;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn barsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachBars(function(bar){\n\t\t\t\t\tvalues.push(bar.value);\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange: function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding : (this.options.showScale) ? 0 : (this.options.barShowStroke) ? this.options.barStrokeWidth : 0,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.scale = new this.ScaleClass(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].bars.push(new this.BarClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tdatasetLabel: this.datasets[datasetIndex].label,\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tbase : this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].strokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].fillColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.bars.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.BarClass.prototype,{\n\t\t\t\ty: this.scale.endPoint,\n\t\t\t\tbase : this.scale.endPoint\n\t\t\t});\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\t\t\t//Draw all the bars for each dataset\n\t\t\thelpers.each(this.datasets,function(dataset,datasetIndex){\n\t\t\t\thelpers.each(dataset.bars,function(bar,index){\n\t\t\t\t\tif (bar.hasValue()){\n\t\t\t\t\t\tbar.base = this.scale.endPoint;\n\t\t\t\t\t\t//Transition then draw\n\t\t\t\t\t\tbar.transition({\n\t\t\t\t\t\t\tx : this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\t\t\ty : this.scale.calculateY(bar.value),\n\t\t\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length)\n\t\t\t\t\t\t}, easingDecimal).draw();\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether we should show a stroke on each segment\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of each segment stroke\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of each segment stroke\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//The percentage of the chart that we cut out of the middle.\n\t\tpercentageInnerCutout : 50,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n\n\t};\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"Doughnut\",\n\t\t//Providing a defaults will also register the defaults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\n\t\t\t//Declare segments as a static property to prevent inheriting across the Chart type prototype\n\t\t\tthis.segments = [];\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.calculateTotal(data);\n\n\t\t\thelpers.each(data,function(datapoint, index){\n\t\t\t\tif (!datapoint.color) {\n\t\t\t\t\tdatapoint.color = 'hsl(' + (360 * index / data.length) + ', 100%, 50%)';\n\t\t\t\t}\n\t\t\t\tthis.addData(datapoint, index, true);\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex !== undefined ? atIndex : this.segments.length;\n\t\t\tif ( typeof(segment.color) === \"undefined\" ) {\n\t\t\t\tsegment.color = Chart.defaults.global.segmentColorDefault[index % Chart.defaults.global.segmentColorDefault.length];\n\t\t\t\tsegment.highlight = Chart.defaults.global.segmentHighlightColorDefaults[index % Chart.defaults.global.segmentHighlightColorDefaults.length];\t\t\t\t\n\t\t\t}\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tvalue : segment.value,\n\t\t\t\touterRadius : (this.options.animateScale) ? 0 : this.outerRadius,\n\t\t\t\tinnerRadius : (this.options.animateScale) ? 0 : (this.outerRadius/100) * this.options.percentageInnerCutout,\n\t\t\t\tfillColor : segment.color,\n\t\t\t\thighlightColor : segment.highlight || segment.color,\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tstartAngle : Math.PI * 1.5,\n\t\t\t\tcircumference : (this.options.animateRotate) ? 0 : this.calculateCircumference(segment.value),\n\t\t\t\tlabel : segment.label\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tcalculateCircumference : function(value) {\n\t\t\tif ( this.total > 0 ) {\n\t\t\t\treturn (Math.PI*2)*(value / this.total);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\tcalculateTotal : function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += Math.abs(segment.value);\n\t\t\t},this);\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor']);\n\t\t\t});\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t});\n\t\t\t}, this);\n\t\t},\n\t\tdraw : function(easeDecimal){\n\t\t\tvar animDecimal = (easeDecimal) ? easeDecimal : 1;\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment,index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.calculateCircumference(segment.value),\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t},animDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\tsegment.draw();\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length-1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t},this);\n\n\t\t}\n\t});\n\n\tChart.types.Doughnut.extend({\n\t\tname : \"Pie\",\n\t\tdefaults : helpers.merge(defaultConfig,{percentageInnerCutout : 0})\n\t});\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\n\t\t///Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - Whether the line is curved between points\n\t\tbezierCurve : true,\n\n\t\t//Number - Tension of the bezier curve between points\n\t\tbezierCurveTension : 0.4,\n\n\t\t//Boolean - Whether to show a dot for each point\n\t\tpointDot : true,\n\n\t\t//Number - Radius of each point dot in pixels\n\t\tpointDotRadius : 4,\n\n\t\t//Number - Pixel width of point dot stroke\n\t\tpointDotStrokeWidth : 1,\n\n\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\tpointHitDetectionRadius : 20,\n\n\t\t//Boolean - Whether to show a stroke for datasets\n\t\tdatasetStroke : true,\n\n\t\t//Number - Pixel width of dataset stroke\n\t\tdatasetStrokeWidth : 2,\n\n\t\t//Boolean - Whether to fill the dataset with a colour\n\t\tdatasetFill : true,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\",\n\n\t\t//Boolean - Whether to horizontally center the label and point dot inside the grid\n\t\toffsetGridLines : false\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Line\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\toffsetGridLines : this.options.offsetGridLines,\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinRange : function(mouseX){\n\t\t\t\t\treturn (Math.pow(mouseX-this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius,2));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePoints = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePoints, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activePoints);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t\tthis.buildScale(data.labels);\n\n\n\t\t\t\tthis.eachPoints(function(point, index){\n\t\t\t\t\thelpers.extend(point, {\n\t\t\t\t\t\tx: this.scale.calculateX(index),\n\t\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t\t});\n\t\t\t\t\tpoint.save();\n\t\t\t\t}, this);\n\n\t\t\t},this);\n\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\t\tgetPointsAtEvent : function(e){\n\t\t\tvar pointsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e);\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.inRange(eventPosition.x,eventPosition.y)) pointsArray.push(point);\n\t\t\t\t});\n\t\t\t},this);\n\t\t\treturn pointsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachPoints(function(point){\n\t\t\t\t\tvalues.push(point.value);\n\t\t\t\t});\n\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\toffsetGridLines : this.options.offsetGridLines,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange : function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding: (this.options.showScale) ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\tthis.scale = new Chart.Scale(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tdatasetLabel: this.datasets[datasetIndex].label,\n\t\t\t\t\tx: this.scale.calculateX(this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\t// Some helper methods for getting the next/prev points\n\t\t\tvar hasValue = function(item){\n\t\t\t\treturn item.value !== null;\n\t\t\t},\n\t\t\tnextPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findNextWhere(collection, hasValue, index) || point;\n\t\t\t},\n\t\t\tpreviousPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findPreviousWhere(collection, hasValue, index) || point;\n\t\t\t};\n\n\t\t\tif (!this.scale) return;\n\t\t\tthis.scale.draw(easingDecimal);\n\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tvar pointsWithValues = helpers.where(dataset.points, hasValue);\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\t//We can use this extra loop to calculate the control points of this dataset also in this loop\n\n\t\t\t\thelpers.each(dataset.points, function(point, index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition({\n\t\t\t\t\t\t\ty : this.scale.calculateY(point.value),\n\t\t\t\t\t\t\tx : this.scale.calculateX(index)\n\t\t\t\t\t\t}, easingDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\t\t\t\t// Control points need to be calculated in a separate loop, because we need to know the current x/y of the point\n\t\t\t\t// This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n\t\t\t\tif (this.options.bezierCurve){\n\t\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\t\tvar tension = (index > 0 && index < pointsWithValues.length - 1) ? this.options.bezierCurveTension : 0;\n\t\t\t\t\t\tpoint.controlPoints = helpers.splineCurve(\n\t\t\t\t\t\t\tpreviousPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\tpoint,\n\t\t\t\t\t\t\tnextPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\ttension\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\n\t\t\t\t\t\t// Cap puter bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.outer.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.outer.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Cap inner bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.inner.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.inner.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x, point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(this.options.bezierCurve){\n\t\t\t\t\t\t\tvar previous = previousPoint(point, pointsWithValues, index);\n\n\t\t\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.x,\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.y,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.x,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.y,\n\t\t\t\t\t\t\t\tpoint.x,\n\t\t\t\t\t\t\t\tpoint.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (this.options.datasetStroke) {\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\n\t\t\t\tif (this.options.datasetFill && pointsWithValues.length > 0){\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\n\t\t\t\t\tctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n\t\t\t\t\tctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n\t\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(pointsWithValues,function(point){\n\t\t\t\t\tpoint.draw();\n\t\t\t\t});\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Show a backdrop to the scale label\n\t\tscaleShowLabelBackdrop : true,\n\n\t\t//String - The colour of the label backdrop\n\t\tscaleBackdropColor : \"rgba(255,255,255,0.75)\",\n\n\t\t// Boolean - Whether the scale should begin at zero\n\t\tscaleBeginAtZero : true,\n\n\t\t//Number - The backdrop padding above & below the label in pixels\n\t\tscaleBackdropPaddingY : 2,\n\n\t\t//Number - The backdrop padding to the side of the label in pixels\n\t\tscaleBackdropPaddingX : 2,\n\n\t\t//Boolean - Show line for each value in the scale\n\t\tscaleShowLine : true,\n\n\t\t//Boolean - Stroke a line around each segment in the chart\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of the stroke on each segment.\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of the stroke value in pixels\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect.\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether to animate the rotation of the chart\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether to animate scaling the chart from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"PolarArea\",\n\t\t//Providing a defaults will also register the defaults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\t\t\tthis.segments = [];\n\t\t\t//Declare segment class as a chart instance specific class, so it can share props for this instance\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinnerRadius : 0,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tlineArc: true,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tvaluesCount: data.length\n\t\t\t});\n\n\t\t\tthis.updateScaleRange(data);\n\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.each(data,function(segment,index){\n\t\t\t\tthis.addData(segment,index,true);\n\t\t\t},this);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tfillColor: segment.color,\n\t\t\t\thighlightColor: segment.highlight || segment.color,\n\t\t\t\tlabel: segment.label,\n\t\t\t\tvalue: segment.value,\n\t\t\t\touterRadius: (this.options.animateScale) ? 0 : this.scale.calculateCenterOffset(segment.value),\n\t\t\t\tcircumference: (this.options.animateRotate) ? 0 : this.scale.getCircumference(),\n\t\t\t\tstartAngle: Math.PI * 1.5\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tcalculateTotal: function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += segment.value;\n\t\t\t},this);\n\t\t\tthis.scale.valuesCount = this.segments.length;\n\t\t},\n\t\tupdateScaleRange: function(datapoints){\n\t\t\tvar valuesArray = [];\n\t\t\thelpers.each(datapoints,function(segment){\n\t\t\t\tvaluesArray.push(segment.value);\n\t\t\t});\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes,\n\t\t\t\t{\n\t\t\t\t\tsize: helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\t\tyCenter: this.chart.height/2\n\t\t\t\t}\n\t\t\t);\n\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\t\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.segments);\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.extend(this.scale,{\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t});\n\t\t\t}, this);\n\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\t//Clear & draw the canvas\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment, index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.scale.getCircumference(),\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t},easingDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\t// If we've removed the first segment we need to set the first one to\n\t\t\t\t// start at the top.\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length - 1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t\tsegment.draw();\n\t\t\t}, this);\n\t\t\tthis.scale.draw();\n\t\t}\n\t});\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\n\tChart.Type.extend({\n\t\tname: \"Radar\",\n\t\tdefaults:{\n\t\t\t//Boolean - Whether to show lines for each scale point\n\t\t\tscaleShowLine : true,\n\n\t\t\t//Boolean - Whether we show the angle lines out of the radar\n\t\t\tangleShowLineOut : true,\n\n\t\t\t//Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels : false,\n\n\t\t\t// Boolean - Whether the scale should begin at zero\n\t\t\tscaleBeginAtZero : true,\n\n\t\t\t//String - Colour of the angle line\n\t\t\tangleLineColor : \"rgba(0,0,0,.1)\",\n\n\t\t\t//Number - Pixel width of the angle line\n\t\t\tangleLineWidth : 1,\n\n\t\t\t//Number - Interval at which to draw angle lines (\"every Nth point\")\n\t\t\tangleLineInterval: 1,\n\n\t\t\t//String - Point label font declaration\n\t\t\tpointLabelFontFamily : \"'Arial'\",\n\n\t\t\t//String - Point label font weight\n\t\t\tpointLabelFontStyle : \"normal\",\n\n\t\t\t//Number - Point label font size in pixels\n\t\t\tpointLabelFontSize : 10,\n\n\t\t\t//String - Point label font colour\n\t\t\tpointLabelFontColor : \"#666\",\n\n\t\t\t//Boolean - Whether to show a dot for each point\n\t\t\tpointDot : true,\n\n\t\t\t//Number - Radius of each point dot in pixels\n\t\t\tpointDotRadius : 3,\n\n\t\t\t//Number - Pixel width of point dot stroke\n\t\t\tpointDotStrokeWidth : 1,\n\n\t\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\t\tpointHitDetectionRadius : 20,\n\n\t\t\t//Boolean - Whether to show a stroke for datasets\n\t\t\tdatasetStroke : true,\n\n\t\t\t//Number - Pixel width of dataset stroke\n\t\t\tdatasetStrokeWidth : 2,\n\n\t\t\t//Boolean - Whether to fill the dataset with a colour\n\t\t\tdatasetFill : true,\n\n\t\t\t//String - A legend template\n\t\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\"\n\n\t\t},\n\n\t\tinitialize: function(data){\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\tthis.buildScale(data);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePointsCollection = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePointsCollection, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.showTooltip(activePointsCollection);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel: dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tvar pointPosition;\n\t\t\t\t\tif (!this.scale.animation){\n\t\t\t\t\t\tpointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n\t\t\t\t\t}\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tx: (this.options.animation) ? this.scale.xCenter : pointPosition.x,\n\t\t\t\t\t\ty: (this.options.animation) ? this.scale.yCenter : pointPosition.y,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\n\t\tgetPointsAtEvent : function(evt){\n\t\t\tvar mousePosition = helpers.getRelativePosition(evt),\n\t\t\t\tfromCenter = helpers.getAngleFromPoint({\n\t\t\t\t\tx: this.scale.xCenter,\n\t\t\t\t\ty: this.scale.yCenter\n\t\t\t\t}, mousePosition);\n\n\t\t\tvar anglePerIndex = (Math.PI * 2) /this.scale.valuesCount,\n\t\t\t\tpointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n\t\t\t\tactivePointsCollection = [];\n\n\t\t\t// If we're at the top, make the pointIndex 0 to get the first of the array.\n\t\t\tif (pointIndex >= this.scale.valuesCount || pointIndex < 0){\n\t\t\t\tpointIndex = 0;\n\t\t\t}\n\n\t\t\tif (fromCenter.distance <= this.scale.drawingArea){\n\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\tactivePointsCollection.push(dataset.points[pointIndex]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn activePointsCollection;\n\t\t},\n\n\t\tbuildScale : function(data){\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackgroundColors: this.options.scaleBackgroundColors,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tangleLineColor : this.options.angleLineColor,\n\t\t\t\tangleLineWidth : (this.options.angleShowLineOut) ? this.options.angleLineWidth : 0,\n        angleLineInterval: (this.options.angleLineInterval) ? this.options.angleLineInterval : 1,\n\t\t\t\t// Point labels at the edge of each line\n\t\t\t\tpointLabelFontColor : this.options.pointLabelFontColor,\n\t\t\t\tpointLabelFontSize : this.options.pointLabelFontSize,\n\t\t\t\tpointLabelFontFamily : this.options.pointLabelFontFamily,\n\t\t\t\tpointLabelFontStyle : this.options.pointLabelFontStyle,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tlabels: data.labels,\n\t\t\t\tvaluesCount: data.datasets[0].data.length\n\t\t\t});\n\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.updateScaleRange(data.datasets);\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tupdateScaleRange: function(datasets){\n\t\t\tvar valuesArray = (function(){\n\t\t\t\tvar totalDataArray = [];\n\t\t\t\thelpers.each(datasets,function(dataset){\n\t\t\t\t\tif (dataset.data){\n\t\t\t\t\t\ttotalDataArray = totalDataArray.concat(dataset.data);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thelpers.each(dataset.points, function(point){\n\t\t\t\t\t\t\ttotalDataArray.push(point.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn totalDataArray;\n\t\t\t})();\n\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes\n\t\t\t);\n\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\tthis.scale.valuesCount++;\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\tvar pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tdatasetLabel: this.datasets[datasetIndex].label,\n\t\t\t\t\tx: pointPosition.x,\n\t\t\t\t\ty: pointPosition.y,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.labels.push(label);\n\n\t\t\tthis.reflow();\n\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.valuesCount--;\n\t\t\tthis.scale.labels.shift();\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow: function(){\n\t\t\thelpers.extend(this.scale, {\n\t\t\t\twidth : this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\tsize : helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.datasets);\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easeDecimal = ease || 1,\n\t\t\t\tctx = this.chart.ctx;\n\t\t\tthis.clear();\n\t\t\tthis.scale.draw();\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\n\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\tif(this.options.datasetFill){\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.draw();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t},this);\n\n\t\t}\n\n\t});\n\n\n\n\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}