{"ast":null,"code":"var _jsxFileName = \"/Users/Arif/Desktop/Bug tracker/frontend/src/Views/Pages/Dashboard/chart.jsx\";\nimport React, { Component, UseEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { getBugs } from '../../../Controllers/Redux/bugSlice';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chart extends Component {\n  constructor() {\n    super(props);\n    this.state = {\n      chartData: {\n        labels: [\"Low\", \"Medium\", \"High\"],\n        datasets: [{\n          label: \"Priority\",\n          data: [lowCount.length, midCount.length, highCount.length],\n          backgroundColor: [\"#b33a3a\", \"#FFA500\"]\n        }]\n      }\n    };\n  }\n\n  render() {\n    const dispatch = useDispatch();\n    const bugs = useSelector(state => state.bugs);\n    const browserHistory = useHistory();\n    let highCount = 0;\n    let midCount = 0;\n    let lowCount = 0;\n\n    if (bugs != undefined) {\n      highCount = filterBugs(1);\n      midCount = filterBugs(2);\n      lowCount = filterBugs(3);\n    }\n\n    function redirect() {\n      browserHistory.push('/viewbugs');\n    }\n\n    function filterBugs(priority) {\n      return bugs.filter(bug => {\n        return bug.priority == priority;\n      });\n    }\n\n    useEffect(() => {\n      dispatch(getBugs());\n    }, [bugs == undefined]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar\",\n      children: [\"chart component\", /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/Arif/Desktop/Bug tracker/frontend/src/Views/Pages/Dashboard/chart.jsx"],"names":["React","Component","UseEffect","useDispatch","useSelector","useHistory","getBugs","Bar","Line","Doughnut","Chart","constructor","props","state","chartData","labels","datasets","label","data","lowCount","length","midCount","highCount","backgroundColor","render","dispatch","bugs","browserHistory","undefined","filterBugs","redirect","push","priority","filter","bug","useEffect","maintainAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,qCAAtB;AACA,SAASC,GAAT,EAAaC,IAAb,EAAkBC,QAAlB,QAAiC,iBAAjC;;;AAIA,MAAMC,KAAN,SAAoBT,SAApB,CAA6B;AAC3BU,EAAAA,WAAW,GAAE;AACX,UAAMC,KAAN;AACA,SAAKC,KAAL,GAAY;AACVC,MAAAA,SAAS,EAAC;AACRC,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAO,QAAP,EAAgB,MAAhB,CADA;AAERC,QAAAA,QAAQ,EAAC,CACP;AACEC,UAAAA,KAAK,EAAE,UADT;AAEEC,UAAAA,IAAI,EAAC,CAACC,QAAQ,CAACC,MAAV,EAAiBC,QAAQ,CAACD,MAA1B,EAAiCE,SAAS,CAACF,MAA3C,CAFP;AAGEG,UAAAA,eAAe,EAAC,CAAC,SAAD,EAAW,SAAX;AAHlB,SADO;AAFD;AADA,KAAZ;AAeD;;AACDC,EAAAA,MAAM,GAAE;AACN,UAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,UAAMuB,IAAI,GAAGtB,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACa,IAAd,CAAxB;AACA,UAAMC,cAAc,GAAGtB,UAAU,EAAjC;AACA,QAAIiB,SAAS,GAAG,CAAhB;AACA,QAAID,QAAQ,GAAG,CAAf;AACA,QAAIF,QAAQ,GAAG,CAAf;;AAEA,QAAGO,IAAI,IAAEE,SAAT,EAAmB;AACfN,MAAAA,SAAS,GAAGO,UAAU,CAAC,CAAD,CAAtB;AACAR,MAAAA,QAAQ,GAAGQ,UAAU,CAAC,CAAD,CAArB;AACAV,MAAAA,QAAQ,GAAGU,UAAU,CAAC,CAAD,CAArB;AACH;;AAGD,aAASC,QAAT,GAAmB;AACfH,MAAAA,cAAc,CAACI,IAAf,CAAoB,WAApB;AACH;;AAED,aAASF,UAAT,CAAoBG,QAApB,EAA6B;AACzB,aAAON,IAAI,CAACO,MAAL,CAAaC,GAAD,IAAO;AAAC,eAAOA,GAAG,CAACF,QAAJ,IAAgBA,QAAvB;AAAgC,OAApD,CAAP;AACH;;AACDG,IAAAA,SAAS,CAAC,MAAI;AACVV,MAAAA,QAAQ,CAACnB,OAAO,EAAR,CAAR;AACH,KAFQ,EAEP,CAACoB,IAAI,IAAEE,SAAP,CAFO,CAAT;AAKD,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iDAEE,QAAC,GAAD;AACG,QAAA,IAAI,EAAEV,IADT;AAGG,QAAA,OAAO,EAAE;AAAEkB,UAAAA,mBAAmB,EAAE;AAAvB;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUA;;AAxD0B;;AA0D7B,eAAe1B,KAAf","sourcesContent":["import React,{Component,UseEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\nimport {getBugs} from '../../../Controllers/Redux/bugSlice'\nimport { Bar,Line,Doughnut} from 'react-chartjs-2';\n\n\n\nclass Chart extends Component{\n  constructor(){\n    super(props);\n    this.state ={\n      chartData:{\n        labels: [\"Low\",\"Medium\",\"High\"],\n        datasets:[\n          {\n            label: \"Priority\",\n            data:[lowCount.length,midCount.length,highCount.length],\n            backgroundColor:[\"#b33a3a\",\"#FFA500\",]\n          }\n        ]\n\n      }\n    }\n\n\n  }\n  render(){\n    const dispatch = useDispatch();\n    const bugs = useSelector(state=>state.bugs);\n    const browserHistory = useHistory();\n    let highCount = 0;\n    let midCount = 0;\n    let lowCount = 0;\n\n    if(bugs!=undefined){\n        highCount = filterBugs(1);\n        midCount = filterBugs(2);\n        lowCount = filterBugs(3);\n    }\n    \n\n    function redirect(){\n        browserHistory.push('/viewbugs');\n    }\n\n    function filterBugs(priority){\n        return bugs.filter((bug)=>{return bug.priority == priority})\n    }\n    useEffect(()=>{\n        dispatch(getBugs())\n    },[bugs==undefined])\n\n\n   return(\n     <div className=\"bar\">\n       chart component\n       <Bar\n          data={data}\n         \n          options={{ maintainAspectRatio: false }}\n        />\n     </div>\n   )\n  }\n}\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}