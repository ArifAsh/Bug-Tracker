{"ast":null,"code":"var _jsxFileName = \"/Users/Arif/Desktop/Bug tracker/frontend/src/Views/Pages/ViewBug/viewBugs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBugs, filter } from '../../../Controllers/Redux/bugSlice';\nimport BugCard from '../../Components/Bug Card/bugCard';\nimport BugView from '../../Components/Bug view/bugView';\nimport \"./viewBugs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  function search() {\n    SET_DISPLAY_BUG({\n      searched: true\n    });\n    const searchBar = document.getElementById(\"search\");\n    searchBar.addEventListener('keyup', e => {\n      const searchString = e.target.value;\n      const filterbugs = bugs.bug.filter(bug => {\n        return bug.name.includes(searchString);\n      });\n      dispatch(filter(filterbugs));\n    });\n  }\n\n  const [DISPLAY_BUG, SET_DISPLAY_BUG] = useState({\n    name: \"\",\n    isDisplayed: false,\n    search: false\n  });\n  const dispatch = useDispatch();\n  const {\n    bugs\n  } = useSelector(state => state);\n\n  function BugClicked(name) {\n    SET_DISPLAY_BUG({\n      isDisplayed: !DISPLAY_BUG.isDisplayed,\n      name: name\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"search\",\n      onClick: search,\n      placeholder: \"Search tickets..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: filter,\n      children: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myDropdown\",\n      class: \"dropdown-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"Link 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"Link 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"Link 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      style: {\n        width: \"78%\"\n      },\n      children: [bugs.filteredBugs.length === 0 && !DISPLAY_BUG.searched ? bugs.bug.map((bug, key) => /*#__PURE__*/_jsxDEV(BugCard, {\n        bug: bug,\n        clicked: () => BugClicked(bug.name)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)) : bugs.filteredBugs.map((bug, key) => /*#__PURE__*/_jsxDEV(BugCard, {\n        bug: bug,\n        clicked: () => BugClicked(bug.name)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)), DISPLAY_BUG.isDisplayed && /*#__PURE__*/_jsxDEV(BugView, {\n        clicked: BugClicked,\n        bug: bugs.bug.filter(bug => bug.name == DISPLAY_BUG.name)[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}, \"T6fCwhgndZqevJFD6AkX3DlLE04=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"sources":["/Users/Arif/Desktop/Bug tracker/frontend/src/Views/Pages/ViewBug/viewBugs.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getBugs","filter","BugCard","BugView","search","SET_DISPLAY_BUG","searched","searchBar","document","getElementById","addEventListener","e","searchString","target","value","filterbugs","bugs","bug","name","includes","dispatch","DISPLAY_BUG","isDisplayed","state","BugClicked","width","filteredBugs","length","map","key"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getBugs,filter} from '../../../Controllers/Redux/bugSlice'\nimport BugCard from '../../Components/Bug Card/bugCard'\nimport BugView from '../../Components/Bug view/bugView'\nimport \"./viewBugs.css\"\n\nexport default() =>{\n\n    function search(){\n    SET_DISPLAY_BUG({\n        searched : true\n    })\n    \n    const searchBar = document.getElementById(\"search\")\n\n    searchBar.addEventListener('keyup',(e)=>{\n   \n    const searchString=e.target.value;\n   \n    const filterbugs=bugs.bug.filter((bug)=>{\n        \n        return( bug.name.includes(searchString) )\n    })\n    dispatch(filter(filterbugs))\n    \n    })\n    }\n    const [DISPLAY_BUG,SET_DISPLAY_BUG]= useState({\n        name:\"\",\n        isDisplayed:false,\n        search : false,\n    })\n    const dispatch = useDispatch();\n    const {bugs} = useSelector(state=>state);\n  \n\n  \n    function BugClicked(name){\n       \n        SET_DISPLAY_BUG({\n            isDisplayed: !DISPLAY_BUG.isDisplayed,\n            name: name,\n        })\n       \n    }\n\n  \n\n    return(\n        <div className=\"Search\">\n        <input type=\"text\" id=\"search\" onClick={search} placeholder=\"Search tickets..\"></input>\n        <button onClick={filter}>Filter</button>\n        <div id=\"myDropdown\" class=\"dropdown-content\">\n            <a href=\"#\">Link 1</a>\n            <a href=\"#\">Link 2</a>\n            <a href=\"#\">Link 3</a>\n        </div>\n        <div className='page-container' style={{width:\"78%\"}}>\n            {bugs.filteredBugs.length === 0  && !DISPLAY_BUG.searched? bugs.bug.map((bug,key)=>(\n                <BugCard  key={key} bug={bug} clicked={()=>BugClicked(bug.name) } />\n            )) :  bugs.filteredBugs.map((bug,key)=>(\n                <BugCard  key={key} bug={bug} clicked={()=>BugClicked(bug.name) } />\n            ))}\n            \n            {DISPLAY_BUG.isDisplayed && <BugView clicked={BugClicked} bug={bugs.bug.filter((bug) => bug.name == DISPLAY_BUG.name)[0]} />}\n        </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}