{"ast":null,"code":"var _jsxFileName = \"/Users/Arif/Desktop/Bug tracker/frontend/src/Views/Pages/Dashboard/chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const bugs = useSelector(state => state.bugs);\n  let highCount = 0;\n  let midCount = 0;\n  let lowCount = 0;\n\n  if (bugs != undefined) {\n    highCount = filterBugs(1);\n    midCount = filterBugs(2);\n    lowCount = filterBugs(3);\n  }\n}, \"FG5gcruawafgNx4fp4haCyRZTaM=\", false, function () {\n  return [useSelector];\n});\n\nfunction filterBugs(priority) {\n  return bugs.filter(bug => {\n    return bug.priority == priority;\n  });\n}\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        labels: [\"Low\", \"Medium\", \"High\"],\n        datasets: [{\n          label: \"Priority\",\n          data: [lowCount.length, midCount.length, highCount.length],\n          backgroundColor: [\"#b33a3a\", \"#FFA500\", \"#32cd32\"]\n        }]\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar\",\n      children: [\"chart component\", /*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state.chartData,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Arif/Desktop/Bug tracker/frontend/src/Views/Pages/Dashboard/chart.jsx"],"names":["React","Component","useDispatch","useSelector","Bar","Line","Doughnut","bugs","state","highCount","midCount","lowCount","undefined","filterBugs","priority","filter","bug","Chart","constructor","props","chartData","labels","datasets","label","data","length","backgroundColor","render","maintainAspectRatio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAASC,GAAT,EAAaC,IAAb,EAAkBC,QAAlB,QAAiC,iBAAjC;;AAEA,kBAAc,MAAI;AAAA;;AAChB,QAAMC,IAAI,GAAGJ,WAAW,CAACK,KAAK,IAAEA,KAAK,CAACD,IAAd,CAAxB;AACA,MAAIE,SAAS,GAAG,CAAhB;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,QAAQ,GAAG,CAAf;;AAGE,MAAGJ,IAAI,IAAEK,SAAT,EAAmB;AAEfH,IAAAA,SAAS,GAACI,UAAU,CAAC,CAAD,CAApB;AACAH,IAAAA,QAAQ,GAAEG,UAAU,CAAC,CAAD,CAApB;AACAF,IAAAA,QAAQ,GAAEE,UAAU,CAAC,CAAD,CAApB;AACD;AACF,CAbL;AAAA,UACeV,WADf;AAAA;;AAgBI,SAASU,UAAT,CAAoBC,QAApB,EAA6B;AAC3B,SAAOP,IAAI,CAACQ,MAAL,CAAaC,GAAD,IAAO;AAAC,WAAOA,GAAG,CAACF,QAAJ,IAAgBA,QAAvB;AAAgC,GAApD,CAAP;AACD;;AAML,MAAMG,KAAN,SAAoBhB,SAApB,CAA6B;AAC3BiB,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKX,KAAL,GAAW;AACXY,MAAAA,SAAS,EAAC;AACRC,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAO,QAAP,EAAgB,MAAhB,CADA;AAERC,QAAAA,QAAQ,EAAC,CACP;AACEC,UAAAA,KAAK,EAAE,UADT;AAEEC,UAAAA,IAAI,EAAC,CAACb,QAAQ,CAACc,MAAV,EAAiBf,QAAQ,CAACe,MAA1B,EAAiChB,SAAS,CAACgB,MAA3C,CAFP;AAGEC,UAAAA,eAAe,EAAC,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB;AAHlB,SADO;AAFD;AADC,KAAX;AAaD;;AAIDC,EAAAA,MAAM,GAAE;AAGP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iDAEE,QAAC,GAAD;AACG,QAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWY,SADpB;AAGG,QAAA,OAAO,EAAE;AAAEQ,UAAAA,mBAAmB,EAAE;AAAvB;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUA;;AAjC0B","sourcesContent":["import React,{Component} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport { Bar,Line,Doughnut} from 'react-chartjs-2';\n\nexport default()=>{\n  const bugs = useSelector(state=>state.bugs);\n  let highCount = 0;\n  let midCount = 0;\n  let lowCount = 0;\n\n\n    if(bugs!=undefined){\n      \n        highCount=filterBugs(1);\n        midCount =filterBugs(2);\n        lowCount =filterBugs(3);\n      }\n    }\n   \n\n    function filterBugs(priority){\n      return bugs.filter((bug)=>{return bug.priority == priority})\n    }\n\n\n\n\n\nclass Chart extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n    chartData:{\n      labels: [\"Low\",\"Medium\",\"High\"],\n      datasets:[\n        {\n          label: \"Priority\",\n          data:[lowCount.length,midCount.length,highCount.length],\n          backgroundColor:[\"#b33a3a\",\"#FFA500\",\"#32cd32\"]\n        }\n      ]\n\n    }\n  }\n  }\n\n\n  \n  render(){\n    \n\n   return(\n     <div className=\"bar\">\n       chart component\n       <Bar\n          data={this.state.chartData}\n         \n          options={{ maintainAspectRatio: false }}\n        />\n     </div>\n   )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}