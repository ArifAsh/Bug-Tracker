{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { retrieveBugs } from '../bugController';\nconst slice = createSlice({\n  name: \"bugs\",\n  initialState: {\n    filteredBugs: [],\n    bug: retrieveBugs()\n  },\n  reducers: {\n    getBugs: state => {\n      return state.bugs;\n    },\n    filter: (state, action) => {\n      return { ...state,\n        filteredBugs: [...action.payload]\n      };\n    },\n    createBugs: (state, actions) => {},\n    updateBug: (state, actions) => {},\n    markComplete: (state, action) => {\n      console.log(action.payload);\n\n      for (let i = 0; i <= state.bugs.length; i++) {\n        if (action.payload._id === state.bugs._id) {\n          state.bugs.priority = 4;\n        }\n      }\n    }\n  }\n});\nexport default slice.reducer;\nexport const {\n  getBugs,\n  filter,\n  createBugs,\n  updateBug,\n  markComplete\n} = slice.actions;","map":{"version":3,"sources":["/Users/Arif/Desktop/Bug tracker/frontend/src/Controllers/Redux/bugSlice.js"],"names":["createSlice","retrieveBugs","slice","name","initialState","filteredBugs","bug","reducers","getBugs","state","bugs","filter","action","payload","createBugs","actions","updateBug","markComplete","console","log","i","length","_id","priority","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACtBG,EAAAA,IAAI,EAAC,MADiB;AAEtBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,YAAY,EAAG,EADL;AAEVC,IAAAA,GAAG,EAAEL,YAAY;AAFP,GAFQ;AAMtBM,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAEC,KAAD,IAAW;AACf,aAAOA,KAAK,CAACC,IAAb;AACH,KAHI;AAKLC,IAAAA,MAAM,EAAC,CAACF,KAAD,EAAOG,MAAP,KAAiB;AACpB,aAAO,EAAC,GAAGH,KAAJ;AAAWJ,QAAAA,YAAY,EAAG,CAAC,GAAGO,MAAM,CAACC,OAAX;AAA1B,OAAP;AACH,KAPI;AASLC,IAAAA,UAAU,EAAC,CAACL,KAAD,EAAOM,OAAP,KAAiB,CAE3B,CAXI;AAYLC,IAAAA,SAAS,EAAC,CAACP,KAAD,EAAOM,OAAP,KAAkB,CAE3B,CAdI;AAeLE,IAAAA,YAAY,EAAC,CAACR,KAAD,EAAOG,MAAP,KAAgB;AACzBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACC,OAAnB;;AACA,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIX,KAAK,CAACC,IAAN,CAAWW,MAAhC,EAAyCD,CAAC,EAA1C,EAA6C;AACzC,YAAIR,MAAM,CAACC,OAAP,CAAeS,GAAf,KAAsBb,KAAK,CAACC,IAAN,CAAWY,GAArC,EAAyC;AACrCb,UAAAA,KAAK,CAACC,IAAN,CAAWa,QAAX,GAAsB,CAAtB;AACH;AACJ;AAEJ;AAvBI;AANa,CAAD,CAAzB;AAgCA,eAAerB,KAAK,CAACsB,OAArB;AACA,OAAO,MAAM;AAAChB,EAAAA,OAAD;AAASG,EAAAA,MAAT;AAAgBG,EAAAA,UAAhB;AAA2BE,EAAAA,SAA3B;AAAqCC,EAAAA;AAArC,IAAqDf,KAAK,CAACa,OAAjE","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\nimport {retrieveBugs} from '../bugController'\n\nconst slice = createSlice({\n    name:\"bugs\",\n    initialState: {\n        filteredBugs : [],\n        bug: retrieveBugs(),\n    },\n    reducers:{\n        getBugs:(state) => {\n            return state.bugs\n        },\n\n        filter:(state,action) =>{\n            return {...state, filteredBugs : [...action.payload]};\n        },\n\n        createBugs:(state,actions)=>{\n\n        },\n        updateBug:(state,actions) =>{\n\n        },\n        markComplete:(state,action)=>{\n            console.log(action.payload)\n            for (let i = 0; i <= state.bugs.length ; i++){\n                if (action.payload._id=== state.bugs._id){\n                    state.bugs.priority = 4\n                }\n            }\n\n        }\n    }\n})\nexport default slice.reducer;\nexport const {getBugs,filter,createBugs,updateBug,markComplete} = slice.actions"]},"metadata":{},"sourceType":"module"}