{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport login from '../../Views/Pages/Login/login';\nimport { retrieveBugs } from '../bugController';\nconst slice = createSlice({\n  name: \"bugs\",\n  initialState: {\n    filteredBugs: [],\n    bug: retrieveBugs()\n  },\n  reducers: {\n    getBugs: state => {\n      return state.bugs;\n    },\n    filter: (state, action) => {\n      return { ...state,\n        filteredBugs: [...action.payload]\n      };\n    },\n    createBugs: (state, action) => {\n      return;\n    },\n    updateBug: (state, action) => {},\n    markComplete: (state, action) => {\n      const index = state.bugs.findIndex(bug => bug.id === action.payload._id);\n      state.bugs[index].priority = 4;\n    }\n  }\n});\nexport default slice.reducer;\nexport const {\n  getBugs,\n  filter,\n  createBugs,\n  updateBug,\n  markComplete\n} = slice.actions;","map":{"version":3,"sources":["/Users/Arif/Desktop/Bug tracker/frontend/src/Controllers/Redux/bugSlice.js"],"names":["createSlice","login","retrieveBugs","slice","name","initialState","filteredBugs","bug","reducers","getBugs","state","bugs","filter","action","payload","createBugs","updateBug","markComplete","index","findIndex","id","_id","priority","reducer","actions"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AAEA,MAAMC,KAAK,GAAGH,WAAW,CAAC;AACtBI,EAAAA,IAAI,EAAC,MADiB;AAEtBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,YAAY,EAAG,EADL;AAEVC,IAAAA,GAAG,EAAEL,YAAY;AAFP,GAFQ;AAMtBM,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAEC,KAAD,IAAW;AACf,aAAOA,KAAK,CAACC,IAAb;AACH,KAHI;AAKLC,IAAAA,MAAM,EAAC,CAACF,KAAD,EAAOG,MAAP,KAAiB;AACpB,aAAO,EAAC,GAAGH,KAAJ;AAAWJ,QAAAA,YAAY,EAAG,CAAC,GAAGO,MAAM,CAACC,OAAX;AAA1B,OAAP;AACH,KAPI;AASLC,IAAAA,UAAU,EAAC,CAACL,KAAD,EAAOG,MAAP,KAAgB;AAC3B;AACC,KAXI;AAYLG,IAAAA,SAAS,EAAC,CAACN,KAAD,EAAOG,MAAP,KAAiB,CAE1B,CAdI;AAeLI,IAAAA,YAAY,EAAC,CAACP,KAAD,EAAOG,MAAP,KAAgB;AAEzB,YAAMK,KAAK,GAAGR,KAAK,CAACC,IAAN,CAAWQ,SAAX,CACTZ,GAAD,IAASA,GAAG,CAACa,EAAJ,KAAWP,MAAM,CAACC,OAAP,CAAeO,GADzB,CAAd;AAGEX,MAAAA,KAAK,CAACC,IAAN,CAAWO,KAAX,EAAkBI,QAAlB,GAA6B,CAA7B;AAGL;AAvBI;AANa,CAAD,CAAzB;AAgCA,eAAenB,KAAK,CAACoB,OAArB;AACA,OAAO,MAAM;AAACd,EAAAA,OAAD;AAASG,EAAAA,MAAT;AAAgBG,EAAAA,UAAhB;AAA2BC,EAAAA,SAA3B;AAAqCC,EAAAA;AAArC,IAAqDd,KAAK,CAACqB,OAAjE","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\nimport login from '../../Views/Pages/Login/login';\nimport {retrieveBugs} from '../bugController'\n\nconst slice = createSlice({\n    name:\"bugs\",\n    initialState: {\n        filteredBugs : [],\n        bug: retrieveBugs(),\n    },\n    reducers:{\n        getBugs:(state) => {\n            return state.bugs\n        },\n\n        filter:(state,action) =>{\n            return {...state, filteredBugs : [...action.payload]};\n        },\n\n        createBugs:(state,action)=>{\n        return \n        },\n        updateBug:(state,action) =>{\n\n        },\n        markComplete:(state,action)=>{\n    \n            const index = state.bugs.findIndex(\n                (bug) => bug.id === action.payload._id\n              );\n              state.bugs[index].priority = 4;\n        \n\n        }\n    }\n})\nexport default slice.reducer;\nexport const {getBugs,filter,createBugs,updateBug,markComplete} = slice.actions"]},"metadata":{},"sourceType":"module"}