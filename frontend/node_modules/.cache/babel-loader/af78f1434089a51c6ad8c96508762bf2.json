{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { retrieveBugs } from '../bugController';\nconst slice = createSlice({\n  name: \"bug\",\n  initialState: [search],\n  reducers: {\n    getBugs: state => retrieveBugs(),\n    searchedBugs: (state, action) => {\n      return { ...state.search\n      };\n    },\n    createBugs: (state, actions) => {},\n    updateBug: (state, actions) => {},\n    markComplete: (state, action) => {}\n  }\n});\nexport default slice.reducer;\nexport const {\n  getBugs,\n  createBugs,\n  updateBug,\n  markComplete\n} = slice.actions;","map":{"version":3,"sources":["/Users/Arif/Desktop/Bug tracker/frontend/src/Controllers/Redux/bugSlice.js"],"names":["createSlice","retrieveBugs","slice","name","initialState","search","reducers","getBugs","state","searchedBugs","action","createBugs","actions","updateBug","markComplete","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACtBG,EAAAA,IAAI,EAAC,KADiB;AAEtBC,EAAAA,YAAY,EAAE,CACVC,MADU,CAFQ;AAKtBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAACC,KAAK,IAAIP,YAAY,EADxB;AAGLQ,IAAAA,YAAY,EAAC,CAACD,KAAD,EAAOE,MAAP,KAAiB;AAC1B,aAAO,EAAC,GAAGF,KAAK,CAACH;AAAV,OAAP;AACH,KALI;AAOLM,IAAAA,UAAU,EAAC,CAACH,KAAD,EAAOI,OAAP,KAAiB,CAE3B,CATI;AAULC,IAAAA,SAAS,EAAC,CAACL,KAAD,EAAOI,OAAP,KAAkB,CAE3B,CAZI;AAaLE,IAAAA,YAAY,EAAC,CAACN,KAAD,EAAOE,MAAP,KAAgB,CAE5B;AAfI;AALa,CAAD,CAAzB;AAuBA,eAAeR,KAAK,CAACa,OAArB;AACA,OAAO,MAAM;AAACR,EAAAA,OAAD;AAASI,EAAAA,UAAT;AAAoBE,EAAAA,SAApB;AAA8BC,EAAAA;AAA9B,IAA8CZ,KAAK,CAACU,OAA1D","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\nimport {retrieveBugs} from '../bugController'\n\nconst slice = createSlice({\n    name:\"bug\",\n    initialState: [\n        search :false,\n    ],\n    reducers:{\n        getBugs:state => retrieveBugs(),\n\n        searchedBugs:(state,action) =>{\n            return {...state.search}\n        },\n\n        createBugs:(state,actions)=>{\n\n        },\n        updateBug:(state,actions) =>{\n\n        },\n        markComplete:(state,action)=>{\n\n        }\n    }\n})\nexport default slice.reducer;\nexport const {getBugs,createBugs,updateBug,markComplete} = slice.actions"]},"metadata":{},"sourceType":"module"}