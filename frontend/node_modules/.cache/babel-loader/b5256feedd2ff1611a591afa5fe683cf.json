{"ast":null,"code":"var _jsxFileName = \"/Users/Arif/Desktop/Bug tracker/frontend/src/Views/Pages/ViewBug/viewBugs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBugs } from '../../../Controllers/Redux/bugSlice';\nimport BugCard from '../../Components/Bug Card/bugCard';\nimport BugView from '../../Components/Bug view/bugView';\nimport \"./viewBugs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const searchBar = document.getElementById(\"search\");\n  searchBar.addEventListener('keyup', e => {\n    const searchString = e.target.value;\n    console.log(searchString);\n    const filterbugs = bugs.filter(bug => {\n      return bug.name.includes(searchString);\n    });\n    console.log(filterbugs);\n  });\n  const [DISPLAY_BUG, SET_DISPLAY_BUG] = useState({\n    name: \"\",\n    isDisplayed: false\n  });\n  const dispatch = useDispatch();\n  const {\n    bugs\n  } = useSelector(state => state);\n  useEffect(() => {\n    dispatch(getBugs());\n  }, [bugs.length < 1]);\n\n  function BugClicked(name) {\n    SET_DISPLAY_BUG({\n      isDisplayed: !DISPLAY_BUG.isDisplayed,\n      name: name\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"search\",\n      onClick: search,\n      placeholder: \"Search tickets..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      style: {\n        width: \"78%\"\n      },\n      children: [bugs.map((bug, key) => /*#__PURE__*/_jsxDEV(BugCard, {\n        bug: bug,\n        clicked: () => BugClicked(bug.name)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)), DISPLAY_BUG.isDisplayed && /*#__PURE__*/_jsxDEV(BugView, {\n        clicked: BugClicked,\n        bug: bugs.filter(bug => bug.name == DISPLAY_BUG.name)[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}, \"2X3WGDCQW01NzI2z0a7SXCR71w4=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"sources":["/Users/Arif/Desktop/Bug tracker/frontend/src/Views/Pages/ViewBug/viewBugs.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getBugs","BugCard","BugView","searchBar","document","getElementById","addEventListener","e","searchString","target","value","console","log","filterbugs","bugs","filter","bug","name","includes","DISPLAY_BUG","SET_DISPLAY_BUG","isDisplayed","dispatch","state","length","BugClicked","search","width","map","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,OAAR,QAAsB,qCAAtB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAO,gBAAP;;AAEA,kBAAc,MAAK;AAAA;;AAEf,QAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAlB;AAEAF,EAAAA,SAAS,CAACG,gBAAV,CAA2B,OAA3B,EAAoCC,CAAD,IAAK;AACxC,UAAMC,YAAY,GAACD,CAAC,CAACE,MAAF,CAASC,KAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACA,UAAMK,UAAU,GAACC,IAAI,CAACC,MAAL,CAAaC,GAAD,IAAO;AAEhC,aAAQA,GAAG,CAACC,IAAJ,CAASC,QAAT,CAAkBV,YAAlB,CAAR;AACH,KAHgB,CAAjB;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AAGC,GAVD;AAWA,QAAM,CAACM,WAAD,EAAaC,eAAb,IAA+BvB,QAAQ,CAAC;AAC1CoB,IAAAA,IAAI,EAAC,EADqC;AAE1CI,IAAAA,WAAW,EAAC;AAF8B,GAAD,CAA7C;AAIA,QAAMC,QAAQ,GAAGxB,WAAW,EAA5B;AACA,QAAM;AAACgB,IAAAA;AAAD,MAASf,WAAW,CAACwB,KAAK,IAAEA,KAAR,CAA1B;AAEA3B,EAAAA,SAAS,CAAC,MAAI;AACV0B,IAAAA,QAAQ,CAACtB,OAAO,EAAR,CAAR;AACH,GAFQ,EAEP,CAACc,IAAI,CAACU,MAAL,GAAc,CAAf,CAFO,CAAT;;AAIA,WAASC,UAAT,CAAoBR,IAApB,EAAyB;AAErBG,IAAAA,eAAe,CAAC;AACZC,MAAAA,WAAW,EAAE,CAACF,WAAW,CAACE,WADd;AAEZJ,MAAAA,IAAI,EAAEA;AAFM,KAAD,CAAf;AAKH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,QAAtB;AAA+B,MAAA,OAAO,EAAES,MAAxC;AAAgD,MAAA,WAAW,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAvC;AAAA,iBAEKb,IAAI,CAACc,GAAL,CAAS,CAACZ,GAAD,EAAKa,GAAL,kBACN,QAAC,OAAD;AAAoB,QAAA,GAAG,EAAEb,GAAzB;AAA8B,QAAA,OAAO,EAAE,MAAIS,UAAU,CAACT,GAAG,CAACC,IAAL;AAArD,SAAeY,GAAf;AAAA;AAAA;AAAA;AAAA,cADH,CAFL,EAKKV,WAAW,CAACE,WAAZ,iBAA2B,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEI,UAAlB;AAA8B,QAAA,GAAG,EAAEX,IAAI,CAACC,MAAL,CAAaC,GAAD,IAASA,GAAG,CAACC,IAAJ,IAAYE,WAAW,CAACF,IAA7C,EAAmD,CAAnD;AAAnC;AAAA;AAAA;AAAA;AAAA,cALhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA9CD;AAAA,UAmBqBnB,WAnBrB,EAoBmBC,WApBnB;AAAA","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getBugs} from '../../../Controllers/Redux/bugSlice'\nimport BugCard from '../../Components/Bug Card/bugCard'\nimport BugView from '../../Components/Bug view/bugView'\nimport \"./viewBugs.css\"\n\nexport default() =>{\n    \n    const searchBar = document.getElementById(\"search\")\n\n    searchBar.addEventListener('keyup',(e)=>{\n    const searchString=e.target.value;\n    console.log(searchString)\n    const filterbugs=bugs.filter((bug)=>{\n        \n        return( bug.name.includes(searchString) )\n    })\n    console.log(filterbugs)\n   \n    \n    })\n    const [DISPLAY_BUG,SET_DISPLAY_BUG]= useState({\n        name:\"\",\n        isDisplayed:false\n    })\n    const dispatch = useDispatch();\n    const {bugs} = useSelector(state=>state);\n\n    useEffect(()=>{\n        dispatch(getBugs());\n    },[bugs.length < 1])\n\n    function BugClicked(name){\n       \n        SET_DISPLAY_BUG({\n            isDisplayed: !DISPLAY_BUG.isDisplayed,\n            name: name,\n        })\n       \n    }\n    return(\n        <div className=\"Search\">\n        <input type=\"text\" id=\"search\" onClick={search} placeholder=\"Search tickets..\"></input>\n        <div className='page-container' style={{width:\"78%\"}}>\n            \n            {bugs.map((bug,key)=>(\n                <BugCard  key={key} bug={bug} clicked={()=>BugClicked(bug.name) } />\n            ))}\n            {DISPLAY_BUG.isDisplayed && <BugView clicked={BugClicked} bug={bugs.filter((bug) => bug.name == DISPLAY_BUG.name)[0]} />}\n        </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}