{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport bug from '../../Models/bugModel';\nimport login from '../../Views/Pages/Login/login';\nimport { retrieveBugs } from '../bugController';\nconst slice = createSlice({\n  name: \"bugs\",\n  initialState: {\n    filteredBugs: [],\n    bug: retrieveBugs()\n  },\n  reducers: {\n    getBugs: state => {\n      return state.bugs;\n    },\n    removeBug: (state, action) => {\n      return { ...state,\n        bug: [...state.bug.slice(0, index - 1)]\n      };\n    },\n    filter: (state, action) => {\n      return { ...state,\n        filteredBugs: [...action.payload]\n      };\n    },\n    createBugs: (state, action) => {\n      return { ...state,\n        bug: [...state.bug, action.payload]\n      };\n    },\n    updateBug: (state, action) => {\n      const index = action.payload._id;\n      return { ...state,\n        bug: [...state.bug.slice(0, index), action.payload, ...state.bug.slice(index + 1)]\n      };\n    },\n    markComplete: (state, action) => {\n      const index = action.payload._id;\n      action.payload.priority = 4;\n      return { ...state,\n        bug: [...state.bug.slice(0, index), action.payload, ...state.bug.slice(index + 1)]\n      };\n    }\n  }\n});\nexport default slice.reducer;\nexport const {\n  getBugs,\n  filter,\n  createBugs,\n  updateBug,\n  markComplete\n} = slice.actions;","map":{"version":3,"sources":["/Users/Arif/Desktop/Bug tracker/frontend/src/Controllers/Redux/bugSlice.js"],"names":["createSlice","bug","login","retrieveBugs","slice","name","initialState","filteredBugs","reducers","getBugs","state","bugs","removeBug","action","index","filter","payload","createBugs","updateBug","_id","markComplete","priority","reducer","actions"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AAEA,MAAMC,KAAK,GAAGJ,WAAW,CAAC;AACtBK,EAAAA,IAAI,EAAC,MADiB;AAEtBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,YAAY,EAAG,EADL;AAEVN,IAAAA,GAAG,EAAEE,YAAY;AAFP,GAFQ;AAMtBK,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAEC,KAAD,IAAW;AACf,aAAOA,KAAK,CAACC,IAAb;AACH,KAHI;AAILC,IAAAA,SAAS,EAAC,CAACF,KAAD,EAAOG,MAAP,KAAgB;AACtB,aAAM,EACF,GAAGH,KADD;AAEFT,QAAAA,GAAG,EAAE,CAAC,GAAGS,KAAK,CAACT,GAAN,CAAUG,KAAV,CAAgB,CAAhB,EAAkBU,KAAK,GAAC,CAAxB,CAAJ;AAFH,OAAN;AAIH,KATI;AAULC,IAAAA,MAAM,EAAC,CAACL,KAAD,EAAOG,MAAP,KAAiB;AACpB,aAAO,EAAC,GAAGH,KAAJ;AAAWH,QAAAA,YAAY,EAAG,CAAC,GAAGM,MAAM,CAACG,OAAX;AAA1B,OAAP;AACH,KAZI;AAcLC,IAAAA,UAAU,EAAC,CAACP,KAAD,EAAOG,MAAP,KAAgB;AAE3B,aAAO,EACH,GAAGH,KADA;AAEHT,QAAAA,GAAG,EAAE,CAAC,GAAGS,KAAK,CAACT,GAAV,EAAcY,MAAM,CAACG,OAArB;AAFF,OAAP;AAIC,KApBI;AAqBLE,IAAAA,SAAS,EAAC,CAACR,KAAD,EAAOG,MAAP,KAAiB;AACvB,YAAMC,KAAK,GAAGD,MAAM,CAACG,OAAP,CAAeG,GAA7B;AACA,aAAO,EACH,GAAGT,KADA;AAEHT,QAAAA,GAAG,EAAE,CAAC,GAAGS,KAAK,CAACT,GAAN,CAAUG,KAAV,CAAgB,CAAhB,EAAkBU,KAAlB,CAAJ,EAA6BD,MAAM,CAACG,OAApC,EAA4C,GAAGN,KAAK,CAACT,GAAN,CAAUG,KAAV,CAAgBU,KAAK,GAAC,CAAtB,CAA/C;AAFF,OAAP;AAKH,KA5BI;AA6BLM,IAAAA,YAAY,EAAC,CAACV,KAAD,EAAOG,MAAP,KAAgB;AAEzB,YAAMC,KAAK,GAAED,MAAM,CAACG,OAAP,CAAeG,GAA5B;AAEAN,MAAAA,MAAM,CAACG,OAAP,CAAeK,QAAf,GAA0B,CAA1B;AAEA,aAAO,EACH,GAAGX,KADA;AAEHT,QAAAA,GAAG,EAAE,CAAC,GAAGS,KAAK,CAACT,GAAN,CAAUG,KAAV,CAAgB,CAAhB,EAAkBU,KAAlB,CAAJ,EAA6BD,MAAM,CAACG,OAApC,EAA4C,GAAGN,KAAK,CAACT,GAAN,CAAUG,KAAV,CAAgBU,KAAK,GAAC,CAAtB,CAA/C;AAFF,OAAP;AAOH;AA1CI;AANa,CAAD,CAAzB;AAmDA,eAAeV,KAAK,CAACkB,OAArB;AACA,OAAO,MAAM;AAACb,EAAAA,OAAD;AAASM,EAAAA,MAAT;AAAgBE,EAAAA,UAAhB;AAA2BC,EAAAA,SAA3B;AAAqCE,EAAAA;AAArC,IAAqDhB,KAAK,CAACmB,OAAjE","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\nimport bug from '../../Models/bugModel';\nimport login from '../../Views/Pages/Login/login';\nimport {retrieveBugs} from '../bugController'\n\nconst slice = createSlice({\n    name:\"bugs\",\n    initialState: {\n        filteredBugs : [],\n        bug: retrieveBugs(),\n    },\n    reducers:{\n        getBugs:(state) => {\n            return state.bugs\n        },\n        removeBug:(state,action)=>{\n            return{\n                ...state,\n                bug: [...state.bug.slice(0,index-1)]\n            }\n        },\n        filter:(state,action) =>{\n            return {...state, filteredBugs : [...action.payload]};\n        },\n\n        createBugs:(state,action)=>{\n          \n        return {\n            ...state,\n            bug: [...state.bug,action.payload]\n        }\n        },\n        updateBug:(state,action) =>{\n            const index = action.payload._id;\n            return {\n                ...state,\n                bug: [...state.bug.slice(0,index),action.payload,...state.bug.slice(index+1)],\n              \n            }\n        },\n        markComplete:(state,action)=>{\n    \n            const index =action.payload._id;\n           \n            action.payload.priority = 4\n            \n            return {\n                ...state,\n                bug: [...state.bug.slice(0,index),action.payload,...state.bug.slice(index+1)]\n            }\n            \n        \n\n        }\n    }\n})\nexport default slice.reducer;\nexport const {getBugs,filter,createBugs,updateBug,markComplete} = slice.actions"]},"metadata":{},"sourceType":"module"}